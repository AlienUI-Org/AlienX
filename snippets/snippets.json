{
  "React Native Galaxy Accordion": {
    "prefix": "accordion-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { View, Text, Pressable, ScrollView } from \"react-native\";",
      "",
      "const Accordion = () => {",
      "  const [openIndex, setOpenIndex] = useState(null);",
      "",
      "  const accordionItems = [",
      "    {",
      "      title: \"Is AlienUI a component library?\",",
      "      content:",
      "        \"Yes, It is a self-hosted component library but you do not install it as a dependency. It is not available via npm like other traditional component library. Pick the components you need. \" +",
      "        \"Copy and paste the code into your project and customize to your needs. The code is yours.\",",
      "    },",
      "    {",
      "      title: \"Why copy/paste and not packaged as a dependency?\",",
      "      content:",
      "        \"The goal is to give you full control over your components, enabling you to decide their structure and styling. By starting with sensible defaults, you can customize them to fit your needs. Unlike packaged npm components, where styles are tightly coupled to implementation, separating design from functionality ensures flexibility and adaptability.\",",
      "    },",
      "    {",
      "      title: \"Do you plan to publish it as an npm package?\",",
      "      content: \"No. We have no plans to publish it as an npm package.\",",
      "    },",
      "    {",
      "      title: \"Which frameworks are supported?\",",
      "      content:",
      "        \"You can use any framework that supports React Native. Expo etc.\",",
      "    },",
      "    {",
      "      title: \"Can I use this in my project?\",",
      "      content:",
      "        \"Yes, you can use AlienUI in your React Native project. The code is yours. But hey, let us know if you do. We'd love to see what you build.\",",
      "    },",
      "  ];",
      "",
      "  const toggleAccordion = (index) => {",
      "    setOpenIndex(index === openIndex ? null : index);",
      "  };",
      "",
      "  return (",
      "    <ScrollView className=\"flex-1\">",
      "      <View className=\"w-11/12 border\">",
      "        {accordionItems.map((item, index) => (",
      "          <View key={index} className=\"border-b last:border-b-0 border-gray-300\">",
      "            <Pressable",
      "              onPress={() => toggleAccordion(index)}",
      "              className={`flex flex-row justify-between items-center px-5 py-4 bg-white \\${openIndex === index ? \"bg-white\" : \"\"}`} >",
      "              <Text className=\"text-base text-gray-800\">",
      "                {item.title}",
      "              </Text>",
      "              <Text",
      "                className={`text-base transition-transform duration-300 \\${",
      "                  openIndex === index ? \"rotate-180\" : \"\"",
      "                }`} >",
      "                ▼",
      "              </Text>",
      "            </Pressable>",
      "            {openIndex === index && (",
      "              <View className=\"px-5 py-4\">",
      "                <Text className=\"text-sm text-gray-600\">{item.content}</Text>",
      "              </View>",
      "            )}",
      "          </View>",
      "        ))}",
      "      </View>",
      "    </ScrollView>",
      "  );",
      "}",
      "",
      "export default Accordion;"
    ],
    "description": "A default accordion component for react native"
  },
  "React Native Galaxy Alert": {
    "prefix": "alert-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "import { Feather } from \"@expo/vector-icons\";",
      "",
      "const Alert = ({ type, title, message }) => {",
      "  const alertStyles = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-400\",",
      "      icon: \"check-circle\",",
      "      iconColor: \"#16a34a\"",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-400\",",
      "      icon: \"alert-triangle\",",
      "      iconColor: \"#ca8a04\"",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-400\",",
      "      icon: \"x-circle\",",
      "      iconColor: \"#dc2626\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, borderColor, icon, iconColor } =",
      "    alertStyles[type] || alertStyles.success;",
      "",
      "  return (",
      "    <View className={\\`rounded-xl border \\${borderColor} \\${bgColor} p-4 w-64\\`}>",
      "      <View className=\"flex flex-row items-start gap-4\">",
      "        <Feather name={icon} size={24} color={iconColor} />",
      "        <View className=\"flex-1\">",
      "          <Text className=\"text-lg font-medium text-gray-900\">{title}</Text>",
      "          <Text className=\"mt-1 text-sm text-gray-700\">{message}</Text>",
      "        </View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A default alert component with success, warning, and failure states, for react native"
  },
  "React Native KrytharWail Alert": {
    "prefix": "alert-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "",
      "const Alert = ({ type, title, message }) => {",
      "  const alertStyles = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-400\",",
      "      border: \"border-l-4\"",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-400\",",
      "      border: \"border-l-4\"",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-400\",",
      "      border: \"border-l-4\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, borderColor, border } =",
      "    alertStyles[type] || alertStyles.success;",
      "",
      "  return (",
      "    <View className={\\`rounded-xl \\${bgColor} \\${borderColor} \\${border} p-4 w-64\\`}>",
      "      <Text className=\"text-lg font-bold\">{title}</Text>",
      "      <Text className=\"mt-1 text-sm\">{message}</Text>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "Alert component with a left green border showing success, warning, and failure for react native."
  },
  "React Native Galaxy Avatar": {
    "prefix": "avatar-app",
    "body": [
      "import React from \"react\";",
      "import { View, Image } from \"react-native\";",
      "",
      "const Avatar = () => {",
      "  return (",
      "    <View className=\"w-16 h-16 rounded-full bg-gray-200 flex justify-center items-center overflow-hidden\">",
      "      <Image",
      "        source={require(\"../../assets/images/alien1.avif\")}",
      "        className=\"w-full h-full object-cover\"",
      "      />",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Avatar;"
    ],
    "description": "A default avatar component for react native"
  },
  "React Native Earth Avatar": {
    "prefix": "avatar-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, Image } from \"react-native\";",
      "import MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";",
      "",
      "const Avatar = () => {",
      "  return (",
      "    <View className=\"flex-row items-center gap-2\">",
      "       <View className=\"w-16 h-16 rounded-full bg-gray-200 flex justify-center items-center overflow-hidden\">",
      "         <Image",
      "           source={require(\"../../assets/images/alien1.avif\")}",
      "           className=\"w-full h-full object-cover\"",
      "          />",
      "       </View>",
      "       <View>",
      "          <Text className=\"text-xs text-gray-700\">Good morning</Text>\"",
      "          <Text className=\"font-semibold text-base\">",
      "             Zyphorax",
      "             <MaterialCommunityIcons",
      "               name=\"alien-outline\"",
      "               size={16}",
      "               color=\"black\"",
      "             />",
      "           </Text>",
      "        </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Avatar;"
    ],
    "description": "A default avatar component with profile name for react native."
  },
  "React Native Galaxy Badge": {
    "prefix": "badge-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "",
      "const Badge = ({",
      "  text = \"Badge\",",
      "  bgColor = \"bg-black\",",
      "  textColor = \"text-white\",",
      "  width = \"w-20\",",
      "  padding = \"px-2 py-1\"",
      "}) => {",
      "  return (",
      "    <View",
      "      className={\\`rounded-full flex items-center justify-center \\${bgColor} \\${width} \\${padding}\\`}",
      "    >",
      "      <Text className={\\`text-xs \\${textColor}\\`}>{text}</Text>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Badge;"
    ],
    "description": "A default badge component with customizable text, background color, text color, width, and padding, for react native"
  },
  "React Native Galaxy Breadcrumb": {
    "prefix": "breadcrumb-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "import { Ionicons } from \"@expo/vector-icons\";",
      "",
      "const Breadcrumb = () => {",
      "  return (",
      "    <View className=\"flex flex-row items-center\">",
      "      <TouchableOpacity>",
      "        <Text className=\"text-gray-600 text-sm\">Home</Text>",
      "      </TouchableOpacity>",
      "      <Ionicons",
      "        name=\"chevron-forward\"",
      "        size={12}",
      "        color=\"black\"",
      "        className=\"mx-1 mt-[6px]\"",
      "      />",
      "      <TouchableOpacity>",
      "        <Text className=\"text-gray-600 text-sm\">Nebula</Text>",
      "      </TouchableOpacity>",
      "      <Ionicons",
      "        name=\"chevron-forward\"",
      "        size={12}",
      "        color=\"black\"",
      "        className=\"mx-1 mt-[6px]\"",
      "      />",
      "      <TouchableOpacity>",
      "        <Text className=\"text-gray-600 text-sm\">Galaxy</Text>",
      "      </TouchableOpacity>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Breadcrumb;"
    ],
    "description": "A default breadcrumb navigation component with touchable links and icons for react native"
  },
  "React Native Earth Breadcrumb": {
    "prefix": "breadcrumb-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "import MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";",
      "",
      "const Breadcrumb = () => {",
      "  return (",
      "    <View className=\"flex flex-row items-center\">",
      "      <TouchableOpacity>",
      "        <Text className=\"text-gray-600 text-sm\">Home</Text>",
      "      </TouchableOpacity>",
      "      <MaterialCommunityIcons",
      "        name=\"slash-forward\"",
      "        size={12}",
      "        color=\"black\"",
      "        className=\"mx-1 mt-1\"",
      "      />",
      "      <TouchableOpacity>",
      "        <Text className=\"text-gray-600 text-sm\">Nebula</Text>",
      "      </TouchableOpacity>",
      "      <MaterialCommunityIcons",
      "        name=\"slash-forward\"",
      "        size={12}",
      "        color=\"black\"",
      "        className=\"mx-1 mt-1\"",
      "      />",
      "      <TouchableOpacity>",
      "        <Text className=\"text-gray-600 text-sm\">Galaxy</Text>",
      "      </TouchableOpacity>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Breadcrumb;"
    ],
    "description": "A breadcrumb navigation component for earth navigation for react native"
  },
  "React Native Galaxy Button": {
    "prefix": "button-app",
    "body": [
      "import React from \"react\";",
      "import { Pressable, Text } from \"react-native\";",
      "",
      "const Button = ({ type = \"default\", label = \"Galaxy Button\", onPress }) => {",
      "  const buttonStyles = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"\"",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-500\",",
      "      textColor: \"text-white\",",
      "      border: \"\"",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\"",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, textColor, border } =",
      "    buttonStyles[type] || buttonStyles.default;",
      "",
      "  return (",
      "    <Pressable",
      "      className={`py-2 px-4 rounded-md flex items-center justify-center w-52 \\${bgColor} \\${border}`}",
      "      onPress={type !== \"disabled\" ? onPress : null}",
      "      disabled={type === \"disabled\"}",
      "    >",
      "      <Text className={`text-base \\${textColor}`}>{label}</Text>",
      "    </Pressable>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A default button  with different styles like default, destructive, outline, and disabled for react native"
  },
  "React Native Earth Button": {
    "prefix": "button-app",
    "body": [
      "import React from \"react\";",
      "import { Pressable, Text } from \"react-native\";",
      "import MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";",
      "",
      "const Button = ({ label = \"Earth Button\", type = \"default\", icon = \"alien-outline\", iconColor, onPress }) => {",
      "  const buttonStyles = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-black\",",
      "      iconColor: \"white\"",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-500\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-red-700\",",
      "      iconColor: \"white\"",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\",",
      "      iconColor: \"black\"",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"border border-gray-500\",",
      "      iconColor: \"gray\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, textColor, border } =",
      "    buttonStyles[type] || buttonStyles.default;",
      "",
      "  return (",
      "    <Pressable",
      "      className={`py-2 px-4 rounded-md flex flex-row items-center justify-center w-52 \\${bgColor} \\${border}`}",
      "      onPress={type !== \"disabled\" ? onPress : null}",
      "      disabled={type === \"disabled\"}",
      "    >",
      "      <Text className={`text-base mr-1 \\${textColor}`}>{label}</Text>",
      "      {icon && (",
      "        <MaterialCommunityIcons",
      "          name={icon}",
      "          size={20}",
      "          color={iconColor || buttonStyles[type].iconColor}",
      "        />",
      "      )}",
      "    </Pressable>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A button with an icon and different styles (default, destructive, outline, disabled) for react native"
  },
  "React Native Galaxy Card": {
    "prefix": "card-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, Image, TouchableOpacity } from \"react-native\";",
      "",
      "const Card = () => {",
      "  return (",
      "    <View className=\"bg-white rounded-lg overflow-hidden shadow-lg m-4\">",
      "      <Image",
      "        source={require(\"../../assets/images/alien1.avif\")}",
      "        className=\"w-full h-52\"",
      "        resizeMode=\"cover\"",
      "      />",
      "      <View className=\"p-4\">",
      "        <Text className=\"text-xs text-gray-500 mb-1\">07th July 1997</Text>",
      "        <TouchableOpacity>",
      "          <Text className=\"text-lg font-bold text-gray-900 mb-2\">",
      "            Exploring the Unknown: The Alien Encounter Chronicles",
      "          </Text>",
      "        </TouchableOpacity>",
      "        <Text className=\"text-sm text-gray-500 leading-5\">",
      "          Deep in the vastness of space lies a story untold—of strange beings,",
      "          otherworldly landscapes, and encounters that defy imagination.",
      "          Discover the mysteries of alien civilizations, their technology, and",
      "          the secrets they carry across galaxies.",
      "        </Text>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A default card component featuring an alien-themed image and content for react native."
  },
  "React Native Earth Card": {
    "prefix": "card-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, ImageBackground, TouchableOpacity } from \"react-native\";",
      "",
      "const Card = () => {",
      "  return (",
      "    <View className=\"rounded-lg overflow-hidden shadow-lg w-4/5\">",
      "      <ImageBackground",
      "        source={require(\"../../assets/images/alien1.avif\")}",
      "        className=\"w-full\"",
      "        imageStyle={{ resizeMode: \"cover\" }}",
      "        style={{ height: 350 }}",
      "      >",
      "        <View className=\"flex-1 bg-black/50 justify-end\">",
      "          <View className=\"p-3\">",
      "            <Text className=\"text-xs text-white/90\">07th July 1997</Text>",
      "            <TouchableOpacity>",
      "              <Text className=\"mt-1 text-lg font-bold text-white\">",
      "                Exploring the Unknown: The Alien Encounter Chronicles",
      "              </Text>",
      "            </TouchableOpacity>",
      "            <Text className=\"mt-2 text-sm leading-5 text-white/95\">",
      "              Deep in the vastness of space lies a story untold—of strange beings,",
      "              otherworldly landscapes, and encounters that defy imagination.",
      "              Discover the mysteries of alien civilizations, their technology, and",
      "              the secrets they carry across galaxies.",
      "            </Text>",
      "          </View>",
      "        </View>",
      "      </ImageBackground>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A card component featuring an alien-themed image background with content overlay for react native."
  },
  "React Native Jupiter Card": {
    "prefix": "card-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "import { MaterialIcons } from \"@expo/vector-icons\";",
      "",
      "function Card() {",
      "  return (",
      "    <View className=\"flex flex-col items-center bg-black p-7 shadow-md w-4/5 h-64\">",
      "      <MaterialIcons",
      "        name=\"join-inner\"",
      "        size={56}",
      "        color=\"#ffffff\"",
      "        className=\"mb-4\"",
      "      />",
      "      <Text className=\"text-lg font-bold text-white text-center\">",
      "        Open-Source Contributions",
      "      </Text>",
      "      <Text className=\"mt-2 text-sm text-white text-center\">",
      "        Alien UI is open-source, inviting developers to collaborate and share",
      "        components to improve mobile app design.",
      "      </Text>",
      "    </View>",
      "  );",
      "}",
      "",
      "export default Card;"
    ],
    "description": "A card component featuring an icon with text content below for react native"
  },
  "React Native Pluto Card": {
    "prefix": "card-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "import AntDesign from \"@expo/vector-icons/AntDesign\";",
      "",
      "const Card = () => {",
      "  return (",
      "      <View className=\"w-3/5 h-44 bg-black p-6\">",
      "        <View className=\"flex items-center justify-center w-12 h-12 bg-white rounded-full mb-6\">",
      "          <AntDesign name=\"barschart\" size={24} color=\"#000000\" />",
      "        </View>",
      "        <Text className=\"text-lg text-white font-bold\">",
      "          Bar chart showing energy usage",
      "        </Text>",
      "      </View>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A small card component featuring an icon with text content below for react native."
  },
  "React Native Mars Card": {
    "prefix": "card-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, Image, TouchableOpacity } from \"react-native\";",
      "import { MaterialIcons } from \"@expo/vector-icons\";",
      "",
      "const Card = () => {",
      "  return (",
      "    <View className=\"w-full py-8 rounded-3xl border border-black items-center bg-white\">",
      "      <View className=\"flex-row items-center justify-between bg-black py-2 px-4 rounded-full mb-4\">",
      "        <Image source={require(\"../../assets/icon/flag.svg\")} className=\"w-7 h-7\" />",
      "        <Text className=\"text-white ml-2 text-base\">USD</Text>",
      "        <MaterialIcons name=\"keyboard-arrow-down\" size={28} color=\"white\" />",
      "      </View>",
      "      <View className=\"flex-row items-center mb-2 space-x-2\">",
      "        <Text className=\"text-base\">Account balance</Text>",
      "        <Image source={require(\"../../assets/icon/eye.svg\")} className=\"w-6 h-6\" />",
      "      </View>",
      "      <Text className=\"text-5xl font-semibold mb-4\">",
      "        $150,000.<Text className=\"text-4xl text-gray-500\">00</Text>",
      "      </Text>",
      "      <View className=\"flex-row items-center mb-4 space-x-2\">",
      "        <Image source={require(\"../../assets/icon/copy.svg\")} className=\"w-6 h-6\" />",
      "        <Text className=\"text-base\">0771224074</Text>",
      "      </View>",
      "      <View className=\"flex-row justify-center space-x-4\">",
      "        <TouchableOpacity className=\"flex-row items-center justify-center bg-black rounded-full py-3 w-40\">",
      "          <Text className=\"text-white text-base font-semibold mr-2\">Deposit</Text>",
      "          <Image source={require(\"../../assets/icon/import.svg\")} className=\"w-6 h-6\" />",
      "        </TouchableOpacity>",
      "        <TouchableOpacity className=\"flex-row items-center justify-center bg-black rounded-full py-3 w-40\">",
      "          <Text className=\"text-white text-base font-semibold mr-2\">Transfer</Text>",
      "          <Image source={require(\"../../assets/icon/export.svg\")} className=\"w-6 h-6\" />",
      "        </TouchableOpacity>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A transactional card component displaying account balance, currency selection, and action buttons for deposit and transfer for react native."
  },
  "React Native Galaxy Carousel": {
    "prefix": "carousel-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { View, Text, Pressable } from \"react-native\";",
      "import { AntDesign } from \"@expo/vector-icons\";",
      "",
      "const Carousel = () => {",
      "  const [currentIndex, setCurrentIndex] = useState(0);",
      "",
      "  const slides = [1, 2, 3, 4, 5];",
      "",
      "  const prevSlide = () => {",
      "    setCurrentIndex((prev) => (prev === 0 ? slides.length - 1 : prev - 1));",
      "  };",
      "",
      "  const nextSlide = () => {",
      "    setCurrentIndex((prev) => (prev === slides.length - 1 ? 0 : prev + 1));",
      "  };",
      "",
      "  return (",
      "    <View className=\"flex-1 justify-center items-center\">",
      "      <View className=\"w-4/5 h-56 justify-center items-center bg-white border border-gray-300 rounded shadow\">",
      "        <Text className=\"text-4xl font-bold text-gray-800\">",
      "          {slides[currentIndex]}",
      "        </Text>",
      "      </View>",
      "",
      "      <View className=\"flex-row justify-between w-4/5 mt-4\">",
      "        <Pressable",
      "          onPress={prevSlide}",
      "          className=\"w-10 h-10 justify-center items-center bg-white border border-gray-300 rounded-full\"",
      "        >",
      "          <AntDesign name=\"arrowleft\" size={16} color=\"black\" />",
      "        </Pressable>",
      "        <Pressable",
      "          onPress={nextSlide}",
      "          className=\"w-10 h-10 justify-center items-center bg-white border border-gray-300 rounded-full\"",
      "        >",
      "          <AntDesign name=\"arrowright\" size={16} color=\"black\" />",
      "        </Pressable>",
      "      </View>",
      "",
      "      <View className=\"flex-row mt-4 space-x-2\">",
      "        {slides.map((_, index) => (",
      "          <View",
      "            key={index}",
      "            className={`w-3 h-3 rounded-full \\${",
      "              index === currentIndex",
      "                ? \"bg-black border-black\"",
      "                : \"bg-white border-gray-300\"",
      "            } border`} ",
      "          />",
      "        ))}",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Carousel;"
    ],
    "description": "A simple carousel slider component with navigation buttons and indicators for react native."
  },
  "React Native Galaxy Checkbox": {
    "prefix": "checkbox-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, Pressable } from \"react-native\";",
      "",
      "const CheckBox = () => {",
      "  return (",
      "    <View className=\"p-4\">",
      "      <Text className=\"sr-only\">Checkboxes</Text>",
      "      <View className=\"space-y-2\">",
      "        <Pressable className=\"flex flex-row items-center gap-4 p-2 rounded bg-white\">",
      "          <View className=\"w-5 h-5 border border-gray-300 rounded bg-white\"></View>",
      "          <Text className=\"text-base font-medium text-gray-900\">John Clapton</Text>",
      "        </Pressable>",
      "        <Pressable className=\"flex flex-row items-center gap-4 p-2 rounded bg-white\">",
      "          <View className=\"w-5 h-5 border border-gray-300 rounded bg-white\"></View>",
      "          <Text className=\"text-base font-medium text-gray-900\">Peter Mayer</Text>",
      "        </Pressable>",
      "        <Pressable className=\"flex flex-row items-center gap-4 p-2 rounded bg-white\">",
      "          <View className=\"w-5 h-5 border border-gray-300 rounded bg-white\"></View>",
      "          <Text className=\"text-base font-medium text-gray-900\">Eric King</Text>",
      "        </Pressable>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default CheckBox;"
    ],
    "description": "A simple checkbox component with selectable options for react native."
  },
  "React Native Galaxy Dropdown": {
    "prefix": "dropdown-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { View, Text, Pressable, FlatList } from \"react-native\";",
      "",
      "const Dropdown = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const [selectedOption, setSelectedOption] = useState(null);",
      "",
      "  const options = [\"Galaxy Dropdown\", \"Nebula Dropdown\", \"Earth Dropdown\"];",
      "",
      "  const handleOptionClick = (option) => {",
      "    setSelectedOption(option);",
      "    setIsOpen(false);",
      "  };",
      "",
      "  return (",
      "    <View className=\"w-4/5 self-center mt-12\">",
      "      <Text className=\"text-base text-gray-700 mb-2\">Choose an option</Text>",
      "      <Pressable",
      "        onPress={() => setIsOpen(!isOpen)}",
      "        className={`flex-row justify-between items-center bg-white border border-gray-300 px-4 py-3 \\${",
      "          isOpen ? \"rounded-t-lg\" : \"rounded-lg\"",
      "        }`}",
      "      >",
      "        <Text className=\"text-base text-gray-700\">",
      "          {selectedOption || \"Select an option\"}",
      "        </Text>",
      "        <Text className=\"text-base text-gray-700\">{isOpen ? \"▲\" : \"▼\"}</Text>",
      "      </Pressable>",
      "      {isOpen && (",
      "        <View className=\"bg-white border border-gray-300 rounded-b-lg mt-2 max-h-40\">",
      "          <FlatList",
      "            data={options}",
      "            keyExtractor={(item, index) => index.toString()}",
      "            renderItem={({ item }) => (",
      "              <Pressable",
      "                onPress={() => handleOptionClick(item)}",
      "                className=\"px-4 py-3\"",
      "              >",
      "                <Text className=\"text-base text-gray-700\">{item}</Text>",
      "              </Pressable>",
      "            )}",
      "          />",
      "        </View>",
      "      )}",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Dropdown;"
    ],
    "description": "A default dropdown component with selectable options for react native."
  },
  "React Native Nebulon Input": {
    "prefix": "input-app",
    "body": [
      "import React from \"react\";",
      "import { TextInput } from \"react-native\";",
      "",
      "const Input = () => {",
      "  return (",
      "    <TextInput",
      "      className=\"border-1 border-black rounded-md p-2.5 w-[80%]\"",
      "      placeholder=\"Nebulon Input...\"",
      "    />",
      "  );",
      "};",
      "",
      "export default Input;"
    ],
    "description": "A default input component for react native."
  },
  "React Native Earth Input": {
    "prefix": "input-app",
    "body": [
      "import React from \"react\";",
      "import { TextInput } from \"react-native\";",
      "",
      "const Input = () => {",
      "  return (",
      "    <TextInput",
      "      className=\"border-1 border-b border-b-black p-2.5 w-[80%]\"",
      "      placeholder=\"Earth Input...\"",
      "    />",
      "  );",
      "};",
      "",
      "export default Input;"
    ],
    "description": "A input component with bottom border for react native."
  },
  "React Native Galaxy Modal": {
    "prefix": "modal-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { View, Text, Pressable, Modal } from \"react-native\";",
      "",
      "const Modal = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "",
      "  const openModal = () => setIsOpen(true);",
      "  const closeModal = () => setIsOpen(false);",
      "",
      "  return (",
      "    <View className=\"flex-1 items-center justify-center\">",
      "      <Pressable onPress={openModal} className=\"bg-black py-2 px-4 rounded-md\">",
      "        <Text className=\"text-white text-base\">Open Modal</Text>",
      "      </Pressable>",
      "",
      "      <Modal",
      "        visible={isOpen}",
      "        transparent",
      "        animationType=\"fade\"",
      "        onRequestClose={closeModal}",
      "      >",
      "        <View className=\"flex-1 items-center justify-center bg-black/50\">",
      "          <View className=\"w-11/12 bg-white rounded-md shadow-md p-6\">",
      "            <View className=\"flex-row items-center justify-between border-b pb-4\">",
      "              <Text className=\"text-xl font-semibold\">Galaxy Modal</Text>",
      "              <Pressable onPress={closeModal}>",
      "                <Text className=\"text-gray-400 text-lg\">✖</Text>",
      "              </Pressable>",
      "            </View>",
      "",
      "            <View className=\"my-4\">",
      "              <Text className=\"text-gray-600 text-base\">",
      "                This is a default galaxy modal component that highlights key",
      "                information.",
      "              </Text>",
      "            </View>",
      "",
      "            <View className=\"flex-row justify-end border-t pt-4\">",
      "              <Pressable",
      "                onPress={closeModal}",
      "                className=\"bg-black py-2 px-4 rounded-md\"",
      "              >",
      "                <Text className=\"text-white text-base\">Close</Text>",
      "              </Pressable>",
      "            </View>",
      "          </View>",
      "        </View>",
      "      </Modal>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Modal;"
    ],
    "description": "A modal component with open and close functionality for react native."
  },
  "React Native Nebula Notification": {
    "prefix": "notification-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "import { MaterialCommunityIcons } from \"@expo/vector-icons\";",
      "",
      "const NebulaNotification = () => {",
      "  return (",
      "    <View className=\"w-80 bg-gradient-to-r from-purple-900 via-indigo-900 to-black p-4 rounded-lg shadow-lg border border-purple-500/20\">",
      "      <View className=\"flex-row items-start space-x-4\">",
      "        <View className=\"bg-purple-500/20 p-2 rounded-full\">",
      "          <MaterialCommunityIcons name=\"alien\" size={24} color=\"#c084fc\" />",
      "        </View>",
      "",
      "        <View className=\"flex-1\">",
      "          <View className=\"flex-row items-center justify-between\">",
      "            <Text className=\"text-purple-300 font-semibold\">",
      "              Alien Signal Detected",
      "            </Text>",
      "            <Text className=\"text-purple-400/60 text-xs\">Now</Text>",
      "          </View>",
      "",
      "          <Text className=\"mt-1 text-sm text-purple-200/80\">",
      "            Unknown transmission received from the Andromeda galaxy. Decoding sequence initiated.",
      "          </Text>",
      "",
      "          <View className=\"mt-3 flex-row items-center space-x-3\">",
      "            <TouchableOpacity className=\"px-3 py-1 bg-purple-500/20 rounded-full\">",
      "              <Text className=\"text-xs font-medium text-purple-200\">",
      "                Decode Now",
      "              </Text>",
      "            </TouchableOpacity>",
      "            <TouchableOpacity>",
      "              <Text className=\"text-xs font-medium text-purple-300/70\">",
      "                Dismiss",
      "              </Text>",
      "            </TouchableOpacity>",
      "          </View>",
      "        </View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Notification;"
    ],
    "description": "A futuristic notification component for alien signals for react native."
  },
  "React Native Galaxy Pagination": {
    "prefix": "pagination-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "import { AntDesign } from \"@expo/vector-icons\";",
      "",
      "const Pagination = () => {",
      "  return (",
      "    <View className=\"flex-row gap-2\">",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-gray-300 rounded bg-white\">",
      "        <AntDesign name=\"left\" size={10} color=\"black\" />",
      "      </TouchableOpacity>",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-gray-300 rounded bg-white\">",
      "        <Text className=\"text-gray-800 text-sm font-medium\">1</Text>",
      "      </TouchableOpacity>",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-black rounded bg-black\">",
      "        <Text className=\"text-white text-sm font-medium\">2</Text>",
      "      </TouchableOpacity>",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-gray-300 rounded bg-white\">",
      "        <Text className=\"text-gray-800 text-sm font-medium\">3</Text>",
      "      </TouchableOpacity>",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-gray-300 rounded bg-white\">",
      "        <Text className=\"text-gray-800 text-sm font-medium\">4</Text>",
      "      </TouchableOpacity>",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-gray-300 rounded bg-white\">",
      "        <AntDesign name=\"right\" size={10} color=\"black\" />",
      "      </TouchableOpacity>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Pagination;"
    ],
    "description": "A default pagination component with navigation buttons and numbered pages for react native."
  },
  "React Native Mars Pagination": {
    "prefix": "pagination-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "import { AntDesign } from \"@expo/vector-icons\";",
      "",
      "const Pagination = () => {",
      "  return (",
      "    <View className=\"flex-row items-center gap-3\">",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-gray-300 rounded bg-white\">",
      "        <AntDesign name=\"left\" size={10} color=\"black\" />",
      "      </TouchableOpacity>",
      "      <Text className=\"text-xs text-gray-800\">",
      "        1<Text className=\"mx-0.5\"> / </Text>47",
      "      </Text>",
      "      <TouchableOpacity className=\"w-8 h-8 justify-center items-center border border-gray-300 rounded bg-white\">",
      "        <AntDesign name=\"right\" size={10} color=\"black\" />",
      "      </TouchableOpacity>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Pagination;"
    ],
    "description": "A minimal pagination component with left and right navigation buttons and a page counter for react native."
  },
  "React Native Galaxy Popover": {
    "prefix": "popover-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { View, Text, Pressable, TouchableWithoutFeedback } from \"react-native\";",
      "",
      "const Popover = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "",
      "  const togglePopover = () => {",
      "    setIsOpen((prev) => !prev);",
      "  };",
      "",
      "  const closePopover = () => {",
      "    setIsOpen(false);",
      "  };",
      "",
      "  return (",
      "    <TouchableWithoutFeedback onPress={closePopover}>",
      "      <View className=\"flex-1 justify-center items-center\">",
      "        <Pressable",
      "          className=\"bg-black px-4 py-2 rounded\"",
      "          onPress={togglePopover}",
      "        >",
      "          <Text className=\"text-white text-base\">Toggle Popover</Text>",
      "        </Pressable>",
      "",
      "        {isOpen && (",
      "          <TouchableWithoutFeedback>",
      "            <View className=\"absolute w-[100%] bottom-full mb-2 z-10 justify-center items-center\">",
      "              <View className=\"h-auto bg-white p-4 rounded shadow\">",
      "                <Text className=\"text-base\">This is a Galaxy Popover</Text>",
      "                <Text className=\"text-gray-500 mt-2 text-sm\">",
      "                  You can put any content here.",
      "                </Text>",
      "              </View>",
      "            </View>",
      "          </TouchableWithoutFeedback>",
      "        )}",
      "      </View>",
      "    </TouchableWithoutFeedback>",
      "  );",
      "};",
      "",
      "export default Popover;"
    ],
    "description": "A popover component that displays a tooltip-like message when toggled for react native."
  },
  "React Native Galaxy Progressbar": {
    "prefix": "progress-app",
    "body": [
      "import React from \"react\";",
      "import { View } from \"react-native\";",
      "import { FontAwesome, MaterialCommunityIcons, AntDesign } from \"@expo/vector-icons\";",
      "",
      "const ProgressBar = () => {",
      "  return (",
      "    <View>",
      "      <View className=\"h-2 w-[90%] bg-gray-300 rounded-lg overflow-hidden\">",
      "        <View className=\"h-full w-1/2 bg-black\" />",
      "      </View>",
      "      <View className=\"flex-row justify-between mt-4\">",
      "        <View className=\"flex-1 items-center\">",
      "          <FontAwesome name=\"info-circle\" size={24} color=\"black\" />",
      "        </View>",
      "        <View className=\"flex-1 items-center\">",
      "          <MaterialCommunityIcons name=\"map-marker\" size={24} color=\"black\" />",
      "        </View>",
      "        <View className=\"flex-1 items-center\">",
      "          <AntDesign name=\"creditcard\" size={24} color=\"#A1A1AA\" />",
      "        </View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default ProgressBar;"
    ],
    "description": "A default progress bar component with icons representing different stages for react native."
  },
  "React Native Earth Progressbar": {
    "prefix": "progress-app",
    "body": [
      "import React from \"react\";",
      "import { View } from \"react-native\";",
      "",
      "const ProgressBar = () => {",
      "  return (",
      "    <View>",
      "      <View className=\"mt-4 h-2 w-[90%] rounded-full bg-gray-200 overflow-hidden\">",
      "        <View className=\"h-full w-2/3 rounded-full bg-black\"></View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default ProgressBar;"
    ],
    "description": "A simple progress bar component with rounded edges for react native."
  },
  "React Native Mars Progressbar": {
    "prefix": "progress-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "import { FontAwesome } from \"@expo/vector-icons\";",
      "",
      "const ProgressBar = () => {",
      "  return (",
      "    <View className=\"my-5\">",
      "      <View className=\"relative w-[90%] mt-4 h-1.5 bg-gray-200 rounded-lg\">",
      "        <View className=\"absolute inset-0 flex flex-row justify-between -top-4\">",
      "          <View className=\"flex-1 items-start\">",
      "            <View className=\"w-9 h-9 p-2 rounded-full bg-black justify-center items-center mb-2\">",
      "              <FontAwesome name=\"check-circle\" size={20} color=\"white\" />",
      "            </View>",
      "            <Text className=\"text-xs font-medium text-black\">Details</Text>",
      "          </View>",
      "          <View className=\"flex-1 items-center\">",
      "            <View className=\"w-9 h-9 p-2 rounded-full bg-black justify-center items-center mb-2\">",
      "              <FontAwesome name=\"check-circle\" size={20} color=\"white\" />",
      "            </View>",
      "            <Text className=\"text-xs font-medium text-black\">Address</Text>",
      "          </View>",
      "          <View className=\"flex-1 items-end\">",
      "            <View className=\"w-9 h-9 p-2 rounded-full bg-gray-400 justify-center items-center mb-2\">",
      "              <FontAwesome name=\"check-circle\" size={20} color=\"white\" />",
      "            </View>",
      "            <Text className=\"text-xs font-medium text-gray-500\">Payment</Text>",
      "          </View>",
      "        </View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default ProgressBar;"
    ],
    "description": "A progress bar component with step indicators for Details, Address, and Payment for react native."
  },
  "React Native Galaxy Searchbar": {
    "prefix": "search-app",
    "body": [
      "import { View, TextInput } from \"react-native\";",
      "import React from \"react\";",
      "import EvilIcons from \"@expo/vector-icons/EvilIcons\";",
      "",
      "const SearchBar = () => {",
      "  return (",
      "    <View className=\"mx-4 my-3\">",
      "      <View className=\"flex-row items-center bg-gray-100 rounded-full px-4 py-3\">",
      "        <EvilIcons name=\"search\" size={24} color=\"gray\" />",
      "        <TextInput",
      "          placeholder=\"Search the galaxy...\"",
      "          className=\"flex-1 ml-2 text-base outline-none\"",
      "          placeholderTextColor=\"gray\"",
      "        />",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default SearchBar;"
    ],
    "description": "A default search bar component with search icon and input field for react native."
  },
  "React Native Galaxy Spinner": {
    "prefix": "spinner-app",
    "body": [
      "import React from \"react\";",
      "import { View } from \"react-native\";",
      "",
      "const Spinner = () => {",
      "  return (",
      "    <View className=\"flex items-center justify-center\">",
      "      <View className=\"h-12 w-12 border-4 border-black border-t-transparent rounded-full animate-spin\" />",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Spinner;"
    ],
    "description": "A simple default loading spinner component for react native."
  },
  "React Native Earth Spinner": {
    "prefix": "spinner-app",
    "body": [
      "import React, { useState, useEffect } from \"react\";",
      "import { View } from \"react-native\";",
      "",
      "const Spinner = () => {",
      "  const [currentColor, setCurrentColor] = useState(\"bg-black\");",
      "",
      "  useEffect(() => {",
      "    const colors = [",
      "      \"bg-black\",",
      "      \"bg-red-500\",",
      "      \"bg-blue-500\",",
      "      \"bg-green-500\",",
      "      \"bg-yellow-500\"",
      "    ];",
      "    let index = 0;",
      "",
      "    const interval = setInterval(() => {",
      "      setCurrentColor(colors[index]);",
      "      index = (index + 1) % colors.length;",
      "    }, 500);",
      "",
      "    return () => clearInterval(interval);",
      "  }, []);",
      "",
      "  return (",
      "    <View className=\"flex items-center justify-center\">",
      "      <View className={`w-12 h-12 \\${currentColor} rounded-full animate-spin`} />",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Spinner;"
    ],
    "description": "An animated spinner component that changes colors dynamically, for react native."
  },
  "React Native Galaxy Switch": {
    "prefix": "switch-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { Pressable, View } from \"react-native\";",
      "",
      "const Switch = () => {",
      "  const [isEnabled, setIsEnabled] = useState(false);",
      "",
      "  return (",
      "    <Pressable",
      "      onPress={() => setIsEnabled(!isEnabled)}",
      "      className={`relative flex h-7 w-14 items-center justify-center rounded-full p-1 transition \\${",
      "        isEnabled ? \"bg-black\" : \"bg-gray-400\"",
      "      }`}",
      "    >",
      "      <View",
      "        className={`h-6 w-6 transform rounded-full bg-white transition \\${",
      "          isEnabled ? \"translate-x-3\" : \"translate-x-0\"",
      "        }`}",
      "      />",
      "    </Pressable>",
      "  );",
      "};",
      "",
      "export default Switch;"
    ],
    "description": "A simple react native switch component with a toggle effect"
  },
  "React Native Galaxy Tab": {
    "prefix": "tab-app",
    "body": [
      "import React from \"react\";",
      "import { View } from \"react-native\";",
      "import { AntDesign } from \"@expo/vector-icons\";",
      "",
      "const Tab = () => {",
      "  return (",
      "    <View className=\"flex items-center\">",
      "      <View className=\"flex-row w-11/12 items-center justify-around rounded-full bg-black py-2\">",
      "        <View className=\"bg-white rounded-full w-12 h-12 flex items-center justify-center\">",
      "          <AntDesign name=\"home\" size={24} color=\"#000000\" />",
      "        </View>",
      "        <View className=\"text-white\">",
      "          <AntDesign name=\"contacts\" size={24} color=\"white\" />",
      "        </View>",
      "        <View className=\"text-white\">",
      "          <AntDesign name=\"shoppingcart\" size={24} color=\"white\" />",
      "        </View>",
      "        <View className=\"text-white\">",
      "          <AntDesign name=\"barschart\" size={24} color=\"white\" />",
      "        </View>",
      "        <View className=\"text-white\">",
      "          <AntDesign name=\"setting\" size={24} color=\"white\" />",
      "        </View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Tab;"
    ],
    "description": "A react native bottom tab navigation bar with icons."
  },
  "React Native Earth Tab": {
    "prefix": "tab-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "",
      "const Tab = () => {",
      "  return (",
      "    <View className=\"flex items-center\">",
      "      <View className=\"flex-row w-11/12 items-center justify-around rounded bg-black py-4\">",
      "        <View>",
      "          <Text className=\"text-white\">Home</Text>",
      "        </View>",
      "        <View>",
      "          <Text className=\"text-white\">Contact</Text>",
      "        </View>",
      "        <View>",
      "          <Text className=\"text-white\">Carts</Text>",
      "        </View>",
      "        <View>",
      "          <Text className=\"text-white\">Chart</Text>",
      "        </View>",
      "        <View>",
      "          <Text className=\"text-white\">Settings</Text>",
      "        </View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Tab;"
    ],
    "description": "A simple react native tab bar with text labels."
  },
  "React Native Jupiter Tab": {
    "prefix": "tab-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "import { AntDesign } from \"@expo/vector-icons\";",
      "",
      "const Tab = () => {",
      "  return (",
      "    <View className=\"flex items-center relative\">",
      "      <View className=\"absolute -top-14 z-10\">",
      "        <View className=\"bg-black rounded-full p-4  mt-14\">",
      "          <AntDesign name=\"appstore-o\" size={24} color=\"white\" />",
      "        </View>",
      "      </View>",
      "      <View className=\"flex-row w-full items-center justify-around bg-zinc-900 rounded-t-3xl px-2 mt-8 relative\">",
      "        <View className=\"absolute -top-14 left-1/2 -translate-x-1/2 w-20 h-20 bg-white rounded-full mt-6\" />",
      "        <TouchableOpacity className=\"flex items-center\">",
      "          <View className=\"bg-transparent p-4 flex-col justify-center items-center\">",
      "            <AntDesign name=\"home\" size={24} color=\"white\" />",
      "            <Text className=\"text-gray-50 text-xs mt-1 text-center\">Home</Text>",
      "          </View>",
      "        </TouchableOpacity>",
      "        <TouchableOpacity className=\"flex items-center\">",
      "          <View className=\"bg-transparent p-4 flex-col justify-center items-center\">",
      "            <AntDesign name=\"contacts\" size={24} color=\"gray\" />",
      "            <Text className=\"text-gray-400 text-xs mt-1 text-center\">Contacts</Text>",
      "          </View>",
      "        </TouchableOpacity>",
      "        <View className=\"w-16\" />",
      "        <TouchableOpacity className=\"flex items-center mr-4\">",
      "          <View className=\"bg-transparent p-4 flex-col justify-center items-center\">",
      "            <AntDesign name=\"shoppingcart\" size={24} color=\"gray\" />",
      "            <Text className=\"text-gray-400 text-xs mt-1 text-center\">Cart</Text>",
      "          </View>",
      "        </TouchableOpacity>",
      "        <TouchableOpacity className=\"flex items-center\">",
      "          <View className=\"bg-transparent p-4 flex-col justify-center items-center\">",
      "            <AntDesign name=\"barschart\" size={24} color=\"gray\" />",
      "            <Text className=\"text-gray-400 text-xs mt-1 text-center\">Chart</Text>",
      "          </View>",
      "        </TouchableOpacity>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Tab;"
    ],
    "description": "A custom react native tab bar with text labels and icons."
  },
  "React Native Galaxy Table": {
    "prefix": "table-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text, FlatList, ScrollView } from \"react-native\";",
      "",
      "const Table = () => {",
      "  const tableData = [",
      "    { id: 1, name: \"John Doe\", email: \"john@example.com\", role: \"Admin\" },",
      "    { id: 2, name: \"Jane Smith\", email: \"jane@example.com\", role: \"Editor\" },",
      "    { id: 3, name: \"Sam Wilson\", email: \"sam@example.com\", role: \"Viewer\" },",
      "  ];",
      "",
      "  return (",
      "    <View className=\"flex-1 bg-white p-4\">",
      "      <ScrollView horizontal>",
      "        <View className=\"min-w-[600px] border-collapse\">",
      "          <View className=\"flex-row bg-gray-100\">",
      "            <Text className=\"flex-[0.5] font-bold text-base text-left px-4 py-2\">",
      "              ID",
      "            </Text>",
      "            <Text className=\"flex-1 font-bold text-base text-left px-4 py-2\">",
      "              Name",
      "            </Text>",
      "            <Text className=\"flex-1 font-bold text-base text-left px-4 py-2\">",
      "              Email",
      "            </Text>",
      "            <Text className=\"flex-1 font-bold text-base text-left px-4 py-2\">",
      "              Role",
      "            </Text>",
      "          </View>",
      "",
      "          <FlatList",
      "            data={tableData}",
      "            renderItem={({ item, index }) => (",
      "              <View",
      "                className={`flex-row \\${index % 2 === 0 ? \"bg-white\" : \"bg-gray-100\"}`}",
      "              >",
      "                <Text className=\"flex-[0.5] text-base text-left px-4 py-2\">",
      "                  {item.id}",
      "                </Text>",
      "                <Text className=\"flex-1 text-base text-left px-4 py-2\">",
      "                  {item.name}",
      "                </Text>",
      "                <Text className=\"flex-1 text-base text-left px-4 py-2\">",
      "                  {item.email}",
      "                </Text>",
      "                <Text className=\"flex-1 text-base text-left px-4 py-2\">",
      "                  {item.role}",
      "                </Text>",
      "              </View>",
      "            )}",
      "            keyExtractor={(item) => item.id.toString()}",
      "          />",
      "        </View>",
      "      </ScrollView>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Table;"
    ],
    "description": "A simple react native table component with horizontal scrolling."
  },
  "React Native Galaxy Toast": {
    "prefix": "toast-app",
    "body": [
      "import { useState } from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "",
      "const Toast = () => {",
      "  const [visible, setVisible] = useState(false);",
      "",
      "  const showToast = () => {",
      "    setVisible(true);",
      "    setTimeout(() => {",
      "      setVisible(false);",
      "    }, 2000);",
      "  };",
      "",
      "  const onClose = () => {",
      "    setVisible(false);",
      "  };",
      "",
      "  return (",
      "    <View className=\"flex-1 items-center justify-center\">",
      "      <TouchableOpacity",
      "        onPress={showToast}",
      "        className=\"px-4 py-2 bg-black rounded-lg\"",
      "      >",
      "        <Text className=\"text-white font-semibold\">Click me</Text>",
      "      </TouchableOpacity>",
      "      {visible && (",
      "        <View className=\"absolute bottom-40 w-[80%] px-4 py-2 bg-green-500 rounded-lg transition-opacity duration-300 opacity-100 flex-row justify-between items-center\">",
      "          <Text className=\"text-white\">Operation successful</Text>",
      "          <TouchableOpacity onPress={onClose} className=\"ml-2 px-2\">",
      "            <Text className=\"text-white text-lg font-bold\">×</Text>",
      "          </TouchableOpacity>",
      "        </View>",
      "      )}",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Toast;"
    ],
    "description": "A simple react native toast component with show and close functionality."
  },
  "React Native Earth Toast": {
    "prefix": "toast-app",
    "body": [
      "import { useState } from \"react\";",
      "import { View, Text, TouchableOpacity } from \"react-native\";",
      "",
      "const Toast = () => {",
      "  const [visible, setVisible] = useState(false);",
      "",
      "  const showToast = () => {",
      "    setVisible(true);",
      "    setTimeout(() => {",
      "      setVisible(false);",
      "    }, 2000);",
      "  };",
      "",
      "  const onClose = () => {",
      "    setVisible(false);",
      "  };",
      "",
      "  return (",
      "    <View className=\"flex-1 items-center justify-center\">",
      "      <TouchableOpacity",
      "        onPress={showToast}",
      "        className=\"px-4 py-2 bg-black rounded-lg\"",
      "      >",
      "        <Text className=\"text-white font-semibold\">Click me</Text>",
      "      </TouchableOpacity>",
      "      {visible && (",
      "        <View className=\"absolute bottom-40 w-[80%] bg-green-50 border-b-4 border-green-500 px-4 py-3 rounded-lg transition-opacity duration-300 opacity-100 flex-row justify-between items-center\">",
      "          <View>",
      "            <Text className=\"text-sm mb-1\">Operation successful!</Text>",
      "            <Text className=\"text-sm\">Moving to the next planet</Text>",
      "          </View>",
      "          <TouchableOpacity onPress={onClose} className=\"ml-2 px-2\">",
      "            <Text className=\"text-xl font-bold\">×</Text>",
      "          </TouchableOpacity>",
      "        </View>",
      "      )}",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Toast;"
    ],
    "description": "A simple react native toast component with a success message and close functionality."
  },
  "React Native Galaxy Accordion (tsx)": {
    "prefix": "accordion-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { View, Text, Pressable, ScrollView } from \"react-native\";",
      "",
      "const Accordion = () => {",
      "  const [openIndex, setOpenIndex] = useState(null);",
      "",
      "  const accordionItems = [",
      "    {",
      "      title: \"Is AlienUI a component library?\",",
      "      content:",
      "        \"Yes, It is a self-hosted component library but you do not install it as a dependency. It is not available via npm like other traditional component library. Pick the components you need. \" +",
      "        \"Copy and paste the code into your project and customize to your needs. The code is yours.\",",
      "    },",
      "    {",
      "      title: \"Why copy/paste and not packaged as a dependency?\",",
      "      content:",
      "        \"The goal is to give you full control over your components, enabling you to decide their structure and styling. By starting with sensible defaults, you can customize them to fit your needs. Unlike packaged npm components, where styles are tightly coupled to implementation, separating design from functionality ensures flexibility and adaptability.\",",
      "    },",
      "    {",
      "      title: \"Do you plan to publish it as an npm package?\",",
      "      content: \"No. We have no plans to publish it as an npm package.\",",
      "    },",
      "    {",
      "      title: \"Which frameworks are supported?\",",
      "      content:",
      "        \"You can use any framework that supports React Native. Expo etc.\",",
      "    },",
      "    {",
      "      title: \"Can I use this in my project?\",",
      "      content:",
      "        \"Yes, you can use AlienUI in your React Native project. The code is yours. But hey, let us know if you do. We'd love to see what you build.\",",
      "    },",
      "  ];",
      "",
      "  const toggleAccordion = (index: any) => {",
      "    setOpenIndex(index === openIndex ? null : index);",
      "  };",
      "",
      "  return (",
      "    <ScrollView className=\"flex-1\">",
      "      <View className=\"w-11/12 border\">",
      "        {accordionItems.map((item, index) => (",
      "          <View key={index} className=\"border-b last:border-b-0 border-gray-300\">",
      "            <Pressable",
      "              onPress={() => toggleAccordion(index)}",
      "              className={`flex flex-row justify-between items-center px-5 py-4 bg-white \\${openIndex === index ? \"bg-white\" : \"\"}`} >",
      "              <Text className=\"text-base text-gray-800\">",
      "                {item.title}",
      "              </Text>",
      "              <Text",
      "                className={`text-base transition-transform duration-300 \\${",
      "                  openIndex === index ? \"rotate-180\" : \"\"",
      "                }`} >",
      "                ▼",
      "              </Text>",
      "            </Pressable>",
      "            {openIndex === index && (",
      "              <View className=\"px-5 py-4\">",
      "                <Text className=\"text-sm text-gray-600\">{item.content}</Text>",
      "              </View>",
      "            )}",
      "          </View>",
      "        ))}",
      "      </View>",
      "    </ScrollView>",
      "  );",
      "}",
      "",
      "export default Accordion;"
    ],
    "description": "A default accordion component for react native"
  },
  "React Native Galaxy Alert (tsx)": {
    "prefix": "alert-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "import { Feather } from \"@expo/vector-icons\";",
      "",
      "interface AlertProps {",
      "  type: \"success\" | \"warning\" | \"failure\";",
      "  title: string;",
      "  message: string;",
      "}",
      "",
      "const Alert: React.FC<AlertProps> = ({ type, title, message }) => {",
      "  const alertStyles = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-400\",",
      "      icon: \"check-circle\",",
      "      iconColor: \"#16a34a\"",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-400\",",
      "      icon: \"alert-triangle\",",
      "      iconColor: \"#ca8a04\"",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-400\",",
      "      icon: \"x-circle\",",
      "      iconColor: \"#dc2626\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, borderColor, icon, iconColor } = alertStyles[type];",
      "",
      "  return (",
      "    <View className={`rounded-xl border \\${borderColor} \\${bgColor} p-4 w-64`}>",
      "      <View className=\"flex flex-row items-start gap-4\">",
      "        <Feather name={icon} size={24} color={iconColor} />",
      "        <View className=\"flex-1\">",
      "          <Text className=\"text-lg font-medium text-gray-900\">{title}</Text>",
      "          <Text className=\"mt-1 text-sm text-gray-700\">{message}</Text>",
      "        </View>",
      "      </View>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A default alert component for react native"
  },
  "React Native Earth Alert (tsx)": {
    "prefix": "alert-app",
    "body": [
      "import React from \"react\";",
      "import { View, Text } from \"react-native\";",
      "",
      "interface AlertProps {",
      "  type?: \"success\" | \"warning\" | \"failure\";",
      "  title: string;",
      "  message: string;",
      "}",
      "",
      "const Alert: React.FC<AlertProps> = ({ type = \"success\", title, message }) => {",
      "  const alertStyles: Record<",
      "    \"success\" | \"warning\" | \"failure\",",
      "    { bgColor: string; borderColor: string; border: string }",
      "  > = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-400\",",
      "      border: \"border-l-4\"",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-400\",",
      "      border: \"border-l-4\"",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-400\",",
      "      border: \"border-l-4\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, borderColor, border } = alertStyles[type];",
      "",
      "  return (",
      "    <View className={`\\${bgColor} \\${borderColor} \\${border} rounded-xl p-4 w-64`}>",
      "      <Text className=\"text-lg font-bold\">{title}</Text>",
      "      <Text className=\"mt-1 text-sm\">{message}</Text>",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A customizable Alert component with optional success, warning, or failure styles."
  },
  "React Native Galaxy Button (tsx)": {
    "prefix": "button-app",
    "body": [
      "import React from \"react\";",
      "import { Pressable, Text } from \"react-native\";",
      "",
      "interface ButtonProps {",
      "  variant?: \"default\" | \"destructive\" | \"outline\" | \"disabled\";",
      "  label?: string;",
      "  onPress?: () => void;",
      "}",
      "",
      "const Button: React.FC<ButtonProps> = ({",
      "  variant = \"default\",",
      "  label = \"Galaxy Button\",",
      "  onPress",
      "}) => {",
      "  const buttonStyles = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"\"",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-600\",",
      "      textColor: \"text-white\",",
      "      border: \"\"",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\"",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, textColor, border } =",
      "    buttonStyles[variant] || buttonStyles.default;",
      "",
      "  return (",
      "    <Pressable",
      "      className={`py-2 px-4 rounded-md flex items-center justify-center w-52 \\${bgColor} \\${border}`}",
      "      onPress={variant !== \"disabled\" ? onPress : null}",
      "      disabled={variant === \"disabled\"}",
      "    >",
      "      <Text className={`text-base \\${textColor}`}>{label}</Text>",
      "    </Pressable>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A button component with different variants: default, destructive, outline, and disabled for react native"
  },
  "React Native Earth Button (tsx)": {
    "prefix": "button-app",
    "body": [
      "import React from \"react\";",
      "import { Pressable, Text } from \"react-native\";",
      "import MaterialCommunityIcons from \"@expo/vector-icons/MaterialCommunityIcons\";",
      "",
      "type ButtonVariant = \"default\" | \"destructive\" | \"outline\" | \"disabled\";",
      "",
      "interface ButtonProps {",
      "  label?: string;",
      "  variant?: ButtonVariant;",
      "  icon?: keyof typeof MaterialCommunityIcons.glyphMap;",
      "  iconColor?: string;",
      "  onPress?: () => void;",
      "}",
      "",
      "const Button: React.FC<ButtonProps> = ({",
      "  label = \"Earth Button\",",
      "  variant = \"default\",",
      "  icon = \"alien-outline\",",
      "  iconColor,",
      "  onPress",
      "}) => {",
      "  const buttonStyles = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-black\",",
      "      iconColor: \"white\"",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-600\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-red-700\",",
      "      iconColor: \"white\"",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\",",
      "      iconColor: \"black\"",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"border border-gray-500\",",
      "      iconColor: \"gray\"",
      "    }",
      "  };",
      "",
      "  const {",
      "    bgColor,",
      "    textColor,",
      "    border,",
      "    iconColor: defaultIconColor",
      "  } = buttonStyles[variant] || buttonStyles.default;",
      "",
      "  return (",
      "    <Pressable",
      "      className={`py-2 px-4 rounded-md flex flex-row items-center justify-center w-52 \\${bgColor} \\${border}`}",
      "      onPress={variant !== \"disabled\" ? onPress : undefined}",
      "      disabled={variant === \"disabled\"}",
      "    >",
      "      <Text className={`text-base mr-1 \\${textColor}`}>{label}</Text>",
      "      {icon && (",
      "        <MaterialCommunityIcons",
      "          name={icon}",
      "          size={20}",
      "          color={iconColor || defaultIconColor}",
      "        />",
      "      )}",
      "    </Pressable>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A customizable Button component with different variants, an optional icon, and onPress functionality."
  },
  "React Native Galaxy Dropdown (tsx)": {
    "prefix": "dropdown-app",
    "body": [
      "import React, { useState } from \"react\";",
      "import { View, Text, Pressable, FlatList } from \"react-native\";",
      "",
      "const Dropdown = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const [selectedOption, setSelectedOption] = useState(null);",
      "",
      "  const options = [\"Galaxy Dropdown\", \"Nebula Dropdown\", \"Earth Dropdown\"];",
      "",
      "  const handleOptionClick = (option: any) => {",
      "    setSelectedOption(option);",
      "    setIsOpen(false);",
      "  };",
      "",
      "  return (",
      "    <View className=\"w-4/5 self-center mt-12\">",
      "      <Text className=\"text-base text-gray-700 mb-2\">Choose an option</Text>",
      "      <Pressable",
      "        onPress={() => setIsOpen(!isOpen)}",
      "        className={`flex-row justify-between items-center bg-white border border-gray-300 px-4 py-3 ${",
      "          isOpen ? \"rounded-t-lg\" : \"rounded-lg\"",
      "        }`}",
      "      >",
      "        <Text className=\"text-base text-gray-700\">",
      "          {selectedOption || \"Select an option\"}",
      "        </Text>",
      "        <Text className=\"text-base text-gray-700\">{isOpen ? \"▲\" : \"▼\"}</Text>",
      "      </Pressable>",
      "      {isOpen && (",
      "        <View className=\"bg-white border border-gray-300 rounded-b-lg mt-2 max-h-40\">",
      "          <FlatList",
      "            data={options}",
      "            keyExtractor={(item, index) => index.toString()}",
      "            renderItem={({ item }) => (",
      "              <Pressable",
      "                onPress={() => handleOptionClick(item)}",
      "                className=\"px-4 py-3\"",
      "              >",
      "                <Text className=\"text-base text-gray-700\">{item}</Text>",
      "              </Pressable>",
      "            )}",
      "          />",
      "        </View>",
      "      )}",
      "    </View>",
      "  );",
      "};",
      "",
      "export default Dropdown;"
    ],
    "description": "A default dropdown component with selectable options for react native."
  },
  "React Galaxy Accordion": {
    "prefix": "accordion-web",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "const Accordion = () => {",
      "  const [openIndex, setOpenIndex] = useState(null);",
      "",
      "  const accordionItems = [",
      "    {",
      "      title: \"Is AlienUI a component library?\",",
      "      content: \"Yes, It is a self-hosted component library but you do not install it as a dependency. It is not available via npm like other traditional component library. Pick the components you need. Copy and paste the code into your project and customize to your needs. The code is yours.\"",
      "    },",
      "    {",
      "      title: \"Why copy/paste and not packaged as a dependency?\",",
      "      content: \"The goal is to give you full control over your components, enabling you to decide their structure and styling. By starting with sensible defaults, you can customize them to fit your needs. Unlike packaged npm components, where styles are tightly coupled to implementation, separating design from functionality ensures flexibility and adaptability.\"",
      "    },",
      "    {",
      "      title: \"Do you plan to publish it as an npm package?\",",
      "      content: \"No. We have no plans to publish it as an npm package.\"",
      "    },",
      "    {",
      "      title: \"Which frameworks are supported?\",",
      "      content: \"You can use any framework that supports React Native. Expo etc.\"",
      "    },",
      "    {",
      "      title: \"Can I use this in my project?\",",
      "      content: \"Yes, you can use AlienUI in your React Native project. The code is yours. But hey, let us know if you do. We'd love to see what you build.\"",
      "    }",
      "  ];",
      "",
      "  const toggleAccordion = (index) => {",
      "    setOpenIndex(index === openIndex ? null : index);",
      "  };",
      "",
      "  return (",
      "    <section className=\"w-full lg:w-[450px] flex flex-col items-center justify-center px-4 my-16\">",
      "      <div className=\"w-full max-w-7xl mx-auto border bg-white\">",
      "        {accordionItems.map((item, index) => (",
      "          <div key={index} className=\"border-b last:border-b-0 border-gray-300\">",
      "            <button",
      "              onClick={() => toggleAccordion(index)}",
      "              className=\"w-full text-left py-4 px-6 flex justify-between items-center\"",
      "            >",
      "              <span className=\"text-lg font-medium\">{item.title}</span>",
      "              <span",
      "                className={`transform transition-transform \\${openIndex === index ? \"rotate-180\" : \"\"}`} ",
      "              >",
      "                ▼",
      "              </span>",
      "            </button>",
      "            {openIndex === index && (",
      "              <div className=\"px-6 py-4\">",
      "                <p className=\"text-gray-700\">{item.content}</p>",
      "              </div>",
      "            )}",
      "          </div>",
      "        ))}",
      "      </div>",
      "    </section>",
      "  );",
      "};",
      "",
      "export default Accordion;"
    ],
    "description": "A default accordion component for react (web)"
  },
  "React Galaxy Alert": {
    "prefix": "alert-web",
    "body": [
      "import React from \"react\";",
      "import { FaCheckCircle, FaExclamationTriangle, FaTimesCircle } from \"react-icons/fa\";",
      "",
      "const Alert = ({ type = \"success\", title, message }) => {",
      "  const alertStyles = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-400\",",
      "      icon: <FaCheckCircle className=\"text-green-600 w-5 h-5\" />,",
      "      textColor: \"text-gray-900\"",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-400\",",
      "      icon: <FaExclamationTriangle className=\"text-yellow-600 w-5 h-5\" />,",
      "      textColor: \"text-gray-900\"",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-400\",",
      "      icon: <FaTimesCircle className=\"text-red-600 w-5 h-5\" />,",
      "      textColor: \"text-gray-900\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, borderColor, icon, textColor } = alertStyles[type] || alertStyles.success;",
      "",
      "  return (",
      "    <div className={`rounded-xl border \\${borderColor} \\${bgColor} p-4 w-[250px]`}>",
      "      <div className=\"flex items-start gap-2\">",
      "        {icon}",
      "        <div className=\"flex-1\">",
      "          <strong className={`block text-sm font-semibold \\${textColor}`}>{title}</strong>",
      "          <p className=\"mt-1 text-xs text-gray-700\">{message}</p>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A default alert component with success, warning, and failure types, using Tailwind styling for react web"
  },
  "React KrytharWail Alert": {
    "prefix": "alert-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Alert = ({ type = \"success\", title, message }) => {",
      "  const alertStyles = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-500\",",
      "      border: \"border-l-4\"",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-500\",",
      "      border: \"border-l-4\"",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-500\",",
      "      border: \"border-l-4\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, borderColor, border } = alertStyles[type] || alertStyles.success;",
      "",
      "  return (",
      "    <div className={`rounded-xl \\${border} \\${borderColor} \\${bgColor} p-4 w-[300px]`}>",
      "      <strong className=\"block text-lg font-bold\">{title}</strong>",
      "      <p className=\"mt-1 text-sm\">{message}</p>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "An alert component with a left green border and success, warning, and failure types, using Tailwind styling for react web."
  },
  "React Galaxy Avatar": {
    "prefix": "avatar-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Avatar = () => {",
      "  return (",
      "    <div className=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200 flex justify-center items-center\">",
      "      <img",
      "        src=\"/images/alien1.avif\"",
      "        alt=\"Avatar Image\"",
      "        width={64}",
      "        height={64}",
      "        className=\"object-cover\"",
      "      />",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Avatar;"
    ],
    "description": "A default avatar component for react web"
  },
  "React Earth Avatar": {
    "prefix": "avatar-web",
    "body": [
      "import React from \"react\";",
      "import { PiAlienBold } from \"react-icons/pi\";",
      "",
      "const Avatar = () => {",
      "  return (",
      "    <div className=\"flex items-center gap-2\">",
      "      <div className=\"w-16 h-16 rounded-full overflow-hidden bg-gray-200 flex justify-center items-center\">",
      "        <img",
      "          src=\"/images/alien1.avif\"",
      "          alt=\"Avatar Image\"",
      "          width={64}",
      "          height={64}",
      "          className=\"object-cover\"",
      "        />",
      "      </div>",
      "      <div>",
      "        <p className=\"text-xs text-gray-700\">Good morning</p>",
      "        <div className=\"flex items-center\">",
      "          <p className=\"font-semibold text-base mr-1\">Zyphorax</p>",
      "          <PiAlienBold />",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Avatar;"
    ],
    "description": "A default avatar component with profile name for react web."
  },
  "React Galaxy Badge": {
    "prefix": "badge-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Badge = ({",
      "  text = \"Badge\",",
      "  bgColor = \"bg-black\",",
      "  textColor = \"text-white\",",
      "  width = \"w-[80px]\",",
      "  padding = \"px-2 py-1\"",
      "}) => {",
      "  return (",
      "    <div className={`rounded-full flex justify-center items-center \\${bgColor} \\${width} \\${padding}`}>",
      "      <p className={`text-xs \\${textColor}`}>{text}</p>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Badge;"
    ],
    "description": "A customizable badge component with adjustable background color, text color, width, and padding, for react web."
  },
  "React Galaxy Breadcrumb": {
    "prefix": "breadcrumb-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Breadcrumb = () => {",
      "  return (",
      "    <nav aria-label=\"Breadcrumb\">",
      "      <ol className=\"flex items-center gap-1 text-sm text-gray-600\">",
      "        <li>",
      "          <a href=\"#\" className=\"block transition hover:text-gray-700\">Home</a>",
      "        </li>",
      "",
      "        <li className=\"rtl:rotate-180\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"w-4 h-4\"",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </li>",
      "",
      "        <li>",
      "          <a href=\"#\" className=\"block transition hover:text-gray-700\">Nebula</a>",
      "        </li>",
      "",
      "        <li className=\"rtl:rotate-180\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            className=\"w-4 h-4\"",
      "            viewBox=\"0 0 20 20\"",
      "            fill=\"currentColor\"",
      "          >",
      "            <path",
      "              fillRule=\"evenodd\"",
      "              d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"",
      "              clipRule=\"evenodd\"",
      "            />",
      "          </svg>",
      "        </li>",
      "",
      "        <li>",
      "          <a href=\"#\" className=\"block transition hover:text-gray-700\">Galaxy</a>",
      "        </li>",
      "      </ol>",
      "    </nav>",
      "  );",
      "};",
      "",
      "export default Breadcrumb;"
    ],
    "description": "A default breadcrumb navigation component with touchable links and icons for react web"
  },
  "React Earth Breadcrumb": {
    "prefix": "breadcrumb-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Breadcrumb = () => {",
      "  return (",
      "    <nav aria-label=\"Breadcrumb\">",
      "      <ol className=\"flex items-center gap-1 text-sm text-gray-600\">",
      "        <li>",
      "          <a href=\"#\" className=\"block transition hover:text-gray-700\">Home</a>",
      "        </li>",
      "",
      "        <li className=\"rtl:rotate-180\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            strokeWidth=\"1.5\"",
      "            stroke=\"currentColor\"",
      "            className=\"w-4 h-4 text-black\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"m9 20.247 6-16.5\"",
      "            />",
      "          </svg>",
      "        </li>",
      "",
      "        <li>",
      "          <a href=\"#\" className=\"block transition hover:text-gray-700\">Nebula</a>",
      "        </li>",
      "",
      "        <li className=\"rtl:rotate-180\">",
      "          <svg",
      "            xmlns=\"http://www.w3.org/2000/svg\"",
      "            fill=\"none\"",
      "            viewBox=\"0 0 24 24\"",
      "            strokeWidth=\"1.5\"",
      "            stroke=\"currentColor\"",
      "            className=\"w-4 h-4 text-black\"",
      "          >",
      "            <path",
      "              strokeLinecap=\"round\"",
      "              strokeLinejoin=\"round\"",
      "              d=\"m9 20.247 6-16.5\"",
      "            />",
      "          </svg>",
      "        </li>",
      "",
      "        <li>",
      "          <a href=\"#\" className=\"block transition hover:text-gray-700\">Galaxy</a>",
      "        </li>",
      "      </ol>",
      "    </nav>",
      "  );",
      "};",
      "",
      "export default Breadcrumb;"
    ],
    "description": "A breadcrumb navigation component for earth navigation for react web"
  },
  "React Galaxy Button": {
    "prefix": "button-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Button = ({ type = \"default\", label = \"Galaxy Button\", onClick }) => {",
      "  const buttonStyles = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"\"",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-500\",",
      "      textColor: \"text-white\",",
      "      border: \"\"",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\"",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"\",",
      "      disabled: true",
      "    }",
      "  };",
      "",
      "  const { bgColor, textColor, border, disabled } = buttonStyles[type] || buttonStyles.default;",
      "",
      "  return (",
      "    <button",
      "      className={`py-2 px-4 rounded-md flex items-center justify-center w-[200px] \\${bgColor} \\${border}`}",
      "      onClick={!disabled ? onClick : null}",
      "      disabled={disabled}",
      "    >",
      "      <span className={`text-base \\${textColor}`}>{label}</span>",
      "    </button>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A customizable button component with different styles (default, destructive, outline, disabled), for react web."
  },
  "React Earth Button": {
    "prefix": "button-web",
    "body": [
      "import React from \"react\";",
      "import { PiAlienThin } from \"react-icons/pi\";",
      "",
      "const Button = ({ ",
      "  label = \"Earth Button\", ",
      "  type = \"default\", ",
      "  icon: Icon = PiAlienThin, ",
      "  iconColor, ",
      "  onClick ",
      "}) => {",
      "  const buttonStyles = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-black\",",
      "      iconColor: \"white\"",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-500\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-red-700\",",
      "      iconColor: \"white\"",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\",",
      "      iconColor: \"black\"",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"border border-gray-500\",",
      "      iconColor: \"gray\",",
      "      disabled: true",
      "    }",
      "  };",
      "",
      "  const { bgColor, textColor, border, disabled } =",
      "    buttonStyles[type] || buttonStyles.default;",
      "",
      "  return (",
      "    <button",
      "      className={`py-2 px-4 rounded-md flex items-center justify-center w-[200px] \\${bgColor} \\${border}`}",
      "      onClick={!disabled ? onClick : null}",
      "      disabled={disabled}",
      "    >",
      "      <span className={`text-base \\${textColor} mr-1`}>{label}</span>",
      "      {Icon && <Icon className={`text-xl ${iconColor || buttonStyles[type].iconColor}`} />} ",
      "    </button>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A customizable button component with an optional icon and different styles (default, destructive, outline, disabled), for web."
  },
  "React Galaxy Card": {
    "prefix": "card-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Card = () => {",
      "  return (",
      "    <section className=\"overflow-hidden rounded-lg shadow w-[320px]\">",
      "      <img",
      "        alt=\"\"",
      "        src=\"/images/alien1.avif\"",
      "        width={100}",
      "        height={100}",
      "        className=\"h-56 w-full object-cover\"",
      "      />",
      "",
      "      <div className=\"bg-white p-4 sm:p-6\">",
      "        <time dateTime=\"1997-07-07\" className=\"block text-xs text-gray-500\">",
      "          07th July 1997",
      "        </time>",
      "",
      "        <a href=\"#\">",
      "          <h3 className=\"mt-0.5 text-lg text-gray-900\">",
      "            Exploring the Unknown: The Alien Encounter Chronicles",
      "          </h3>",
      "        </a>",
      "",
      "        <p className=\"mt-2 line-clamp-3 text-sm/relaxed text-gray-500\">",
      "          Deep in the vastness of space lies a story untold—of strange beings,",
      "          otherworldly landscapes, and encounters that defy imagination.",
      "          Discover the mysteries of alien civilizations, their technology, and",
      "          the secrets they carry across galaxies.",
      "        </p>",
      "      </div>",
      "    </section>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A default card component featuring an alien-themed image and content for react web."
  },
  "React Earth Card": {
    "prefix": "card-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Card = () => {",
      "  return (",
      "    <section className=\"relative overflow-hidden rounded-lg shadow w-[320px]\">",
      "      <img",
      "        alt=\"\"",
      "        src=\"/images/alien1.avif\"",
      "        width={100}",
      "        height={100}",
      "        className=\"absolute h-full w-full object-cover\"",
      "      />",
      "",
      "      <div className=\"relative pt-32 sm:pt-48 lg:pt-64\">",
      "        <div className=\"p-4 sm:p-6\">",
      "          <time dateTime=\"1997-07-07\" className=\"block text-xs text-white/90\">",
      "            07th July 1997",
      "          </time>",
      "",
      "          <a href=\"#\">",
      "            <h3 className=\"mt-0.5 text-lg text-white\">",
      "              Exploring the Unknown: The Alien Encounter Chronicles",
      "            </h3>",
      "          </a>",
      "",
      "          <p className=\"mt-2 line-clamp-3 text-sm/relaxed text-white/95\">",
      "            Deep in the vastness of space lies a story untold—of strange beings,",
      "            otherworldly landscapes, and encounters that defy imagination.",
      "            Discover the mysteries of alien civilizations, their technology, and",
      "            the secrets they carry across galaxies.",
      "          </p>",
      "        </div>",
      "      </div>",
      "    </section>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A card component featuring an alien-themed image background with content overlay for react web."
  },
  "React Jupiter Card": {
    "prefix": "card-web",
    "body": [
      "import React from \"react\";",
      "import { MdJoinInner } from \"react-icons/md\";",
      "",
      "const Card = () => {",
      "  return (",
      "    <div className=\"flex flex-col items-center text-center bg-black p-7 shadow-md w-[300px] h-72\">",
      "      <MdJoinInner className=\"w-14 h-14 pb-4 text-white\" />",
      "      <h3 className=\"text-lg font-bold text-white\">",
      "        Open-Source Contributions",
      "      </h3>",
      "      <p className=\"text-white mt-2 text-center\">",
      "        Alien UI is open-source, inviting developers to collaborate and share",
      "        components to improve mobile app design.",
      "      </p>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A card component featuring an icon with text content below for react web"
  },
  "React Pluto Card": {
    "prefix": "card-web",
    "body": [
      "import React from \"react\";",
      "import { FaChartBar } from \"react-icons/fa\";",
      "",
      "const Card = () => {",
      "  return (",
      "      <div className=\"w-3/5 h-52 bg-black p-6\">",
      "        <div className=\"flex items-center justify-center w-12 h-12 bg-white rounded-full mb-6\">",
      "          <FaChartBar className=\"text-black\" size={24} />",
      "        </div>",
      "        <p className=\"text-lg text-white font-bold\">Bar chart showing energy usage</p>",
      "      </div>",
      "  );",
      "};",
      "",
      "export default Card;"
    ],
    "description": "A small card component featuring an icon with text content below for react web."
  },
  "React Galaxy Carousel": {
    "prefix": "carousel-web",
    "body": [
      "import React, { useState } from \"react\";",
      "import { AiOutlineArrowLeft, AiOutlineArrowRight } from \"react-icons/ai\";",
      "",
      "const Carousel = () => {",
      "  const [currentIndex, setCurrentIndex] = useState(0);",
      "",
      "  const slides = [1, 2, 3, 4, 5];",
      "",
      "  const prevSlide = () => {",
      "    setCurrentIndex((prev) => (prev === 0 ? slides.length - 1 : prev - 1));",
      "  };",
      "",
      "  const nextSlide = () => {",
      "    setCurrentIndex((prev) => (prev === slides.length - 1 ? 0 : prev + 1));",
      "  };",
      "",
      "  return (",
      "    <div className=\"relative w-72 max-w-sm mx-auto flex flex-col items-center\">",
      "      <div className=\"relative w-full h-48 flex items-center justify-center border shadow text-4xl font-bold rounded\">",
      "        {slides[currentIndex]}",
      "      </div>",
      "",
      "      <div className=\"mt-4 flex justify-between w-full\">",
      "        <button",
      "          onClick={prevSlide}",
      "          className=\"flex items-center justify-center w-10 h-10 border rounded-full\"",
      "        >",
      "          <AiOutlineArrowLeft />",
      "        </button>",
      "        <button",
      "          onClick={nextSlide}",
      "          className=\"flex items-center justify-center w-10 h-10 border rounded-full\"",
      "        >",
      "          <AiOutlineArrowRight />",
      "        </button>",
      "      </div>",
      "",
      "      <div className=\"flex gap-2 mt-4\">",
      "        {slides.map((_, index) => (",
      "          <span",
      "            key={index}",
      "            className={`block w-3 h-3 border rounded-full \\${",
      "              index === currentIndex ? \"bg-black\" : \"bg-white\"",
      "            }`}",
      "          ></span>",
      "        ))}",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Carousel;"
    ],
    "description": "A simple carousel slider component with navigation buttons and indicators for react web."
  },
  "React Galaxy Checkbox": {
    "prefix": "checkbox-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Checkbox = () => {",
      "  return (",
      "    <div>",
      "      <fieldset>",
      "        <legend className=\"sr-only\">Checkboxes</legend>",
      "",
      "        <div className=\"space-y-2\">",
      "          <label",
      "            htmlFor=\"Option1\"",
      "            className=\"flex cursor-pointer items-start gap-4\"",
      "          >",
      "            <div className=\"flex items-center\">",
      "              &#8203;",
      "              <input",
      "                type=\"checkbox\"",
      "                className=\"size-4 rounded border-gray-300\"",
      "                id=\"Option1\"",
      "              />",
      "            </div>",
      "            <div>",
      "              <strong className=\"font-medium text-gray-900\">John Clapton</strong>",
      "            </div>",
      "          </label>",
      "",
      "          <label",
      "            htmlFor=\"Option2\"",
      "            className=\"flex cursor-pointer items-start gap-4\"",
      "          >",
      "            <div className=\"flex items-center\">",
      "              &#8203;",
      "              <input",
      "                type=\"checkbox\"",
      "                className=\"size-4 rounded border-gray-300\"",
      "                id=\"Option2\"",
      "              />",
      "            </div>",
      "            <div>",
      "              <strong className=\"font-medium text-gray-900\">Peter Mayer</strong>",
      "            </div>",
      "          </label>",
      "",
      "          <label",
      "            htmlFor=\"Option3\"",
      "            className=\"flex cursor-pointer items-start gap-4\"",
      "          >",
      "            <div className=\"flex items-center\">",
      "              &#8203;",
      "              <input",
      "                type=\"checkbox\"",
      "                className=\"size-4 rounded border-gray-300\"",
      "                id=\"Option3\"",
      "              />",
      "            </div>",
      "            <div>",
      "              <strong className=\"font-medium text-gray-900\">Eric King</strong>",
      "            </div>",
      "          </label>",
      "        </div>",
      "      </fieldset>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Checkbox;"
    ],
    "description": "A simple checkbox component with selectable options for react web."
  },
  "React Galaxy Dropdown": {
    "prefix": "dropdown-web",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "const Dropdown = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const [selectedOption, setSelectedOption] = useState(null);",
      "",
      "  const options = [\"Galaxy Dropdown\", \"Nebula Dropdown\", \"Earth Dropdown\"];",
      "",
      "  const handleOptionClick = (option) => {",
      "    setSelectedOption(option);",
      "    setIsOpen(false);",
      "  };",
      "",
      "  return (",
      "    <div className=\"relative inline-block w-64\">",
      "      <label className=\"block text-gray-700 mb-2\">Choose an option</label>",
      "      <button",
      "        onClick={() => setIsOpen(!isOpen)}",
      "        className=\"w-full bg-white text-gray-700 border border-gray-300 rounded-t-md px-4 py-2 text-left flex items-center justify-between\"",
      "      >",
      "        {selectedOption || \"Select an option\"}",
      "        <span",
      "          className={`w-5 h-5 transition-transform \\${",
      "            isOpen ? \"rotate-180\" : \"\"",
      "          }`}",
      "        >",
      "          ▼",
      "        </span>",
      "      </button>",
      "      {isOpen && (",
      "        <ul className=\"absolute z-10 mt-2 w-full bg-white border border-gray-300 rounded-b-md shadow-lg\">",
      "          {options.map((option, index) => (",
      "            <li",
      "              key={index}",
      "              onClick={() => handleOptionClick(option)}",
      "              className=\"px-4 py-2 cursor-pointer hover:bg-gray-100\"",
      "            >",
      "              {option}",
      "            </li>",
      "          ))}",
      "        </ul>",
      "      )}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Dropdown;"
    ],
    "description": "A default dropdown component with interactive options for react web."
  },
  "React Nebulon Input": {
    "prefix": "input-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Input = () => {",
      "  return (",
      "    <div>",
      "      <input",
      "        className=\"border border-gray-600 rounded-md p-2\"",
      "        placeholder=\"Nebulon Input...\"",
      "      />",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Input;"
    ],
    "description": "A default input component for react web."
  },
  "React Earth Input": {
    "prefix": "input-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Input = () => {",
      "  return (",
      "    <div>",
      "      <input",
      "        className=\"border border-b border-b-gray-600 p-2\"",
      "        placeholder=\"Earth Input...\"",
      "      />",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Input;"
    ],
    "description": "A input component with bottom border for react web."
  },
  "React Galaxy Modal": {
    "prefix": "modal-web",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "const Modal = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "",
      "  const openModal = () => setIsOpen(true);",
      "  const closeModal = () => setIsOpen(false);",
      "",
      "  return (",
      "    <div className=\"flex items-center justify-center\">",
      "      <button",
      "        onClick={openModal}",
      "        className=\"px-4 py-2 text-white bg-black rounded-md\"",
      "      >",
      "        Open Modal",
      "      </button>",
      "      {isOpen && (",
      "        <div className=\"fixed inset-0 z-50 flex items-center justify-center bg-black bg-opacity-50\">",
      "          <div className=\"relative w-full max-w-md p-6 bg-white rounded-md shadow-lg\">",
      "            <div className=\"flex items-center justify-between pb-4 border-b\">",
      "              <h2 className=\"text-xl font-semibold\">Galaxy Modal</h2>",
      "              <button onClick={closeModal} className=\"text-black\">",
      "                ✖",
      "              </button>",
      "            </div>",
      "",
      "            <div className=\"py-4\">",
      "              <p className=\"text-gray-600\">",
      "                This is a default galaxy modal component that highlights key information.",
      "              </p>",
      "            </div>",
      "            <div className=\"flex justify-end pt-4 border-t\">",
      "              <button",
      "                onClick={closeModal}",
      "                className=\"px-4 py-2 text-white bg-black rounded-md\"",
      "              >",
      "                Close",
      "              </button>",
      "            </div>",
      "          </div>",
      "        </div>",
      "      )}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Modal;"
    ],
    "description": "A reusable modal component with open and close functionality for react web."
  },
  "React Galaxy Navbar": {
    "prefix": "nav-web",
    "body": [
      "import { useState } from \"react\";",
      "import { FiMenu, FiX } from \"react-icons/fi\";",
      "",
      "const Navbar = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const toggleMenu = () => setIsOpen(!isOpen);",
      "",
      "  return (",
      "    <nav className=\"bg-black text-white sticky top-0 z-10 p-5\">",
      "      <div className=\"max-w-7xl mx-auto\">",
      "        <div className=\"flex justify-between items-center\">",
      "        <a href=\"/\" className=\"text-xl font-bold\">AlienX</a>",
      "          <div className=\"md:hidden\">",
      "            <button onClick={toggleMenu} className=\"focus:outline-none\">",
      "              {isOpen ? <FiX size={24} /> : <FiMenu size={24} />} ",
      "            </button>",
      "          </div>",
      "          <ul className=\"hidden md:flex space-x-6\">",
      "          <li><a href=\"/home\">Home</a></li>",
      "          <li><a href=\"/about\">About</a></li>",
      "          <li><a href=\"/services\">Services</a></li>",
      "          <li><a href=\"/contact\">Contact</a></li>",
      "          </ul>",
      "        </div>",
      "        <div className={`\\${isOpen ? \"block\" : \"hidden\"} md:hidden mt-4`}>",
      "          <ul className=\"flex flex-col space-y-4\">",
      "          <li><a href=\"/home\" onClick={toggleMenu}>Home</a></li>",
      "          <li><a href=\"/about\" onClick={toggleMenu}>About</a></li>",
      "          <li><a href=\"/services\" onClick={toggleMenu}>Services</a></li>",
      "          <li><a href=\"/contact\" onClick={toggleMenu}>Contact</a></li>",
      "          </ul>",
      "        </div>",
      "      </div>",
      "    </nav>",
      "  );",
      "};",
      "",
      "export default Navbar;"
    ],
    "description": "A default nextjs navbar component for react web."
  },
  "React Earth Navbar": {
    "prefix": "nav-web",
    "body": [
      "import React, { useState } from 'react';",
      "import { FiMenu, FiX } from 'react-icons/fi';",
      "",
      "const Navbar = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const toggleMenu = () => setIsOpen(!isOpen);",
      "",
      "  return (",
      "    <nav className=\"bg-black text-white sticky top-0 z-10 p-4\">",
      "      <div className=\"max-w-7xl mx-auto flex justify-between items-center\">",
      "        <a href=\"/\" className=\"text-xl font-bold\">AlienX</a>",
      "        <ul className=\"hidden md:flex space-x-6 mx-auto\">",
      "          <li><a href=\"/home\">Home</a></li>",
      "          <li><a href=\"/about\">About</a></li>",
      "          <li><a href=\"/services\">Services</a></li>",
      "          <li><a href=\"/contact\">Contact</a></li>",
      "        </ul>",
      "        <div className=\"hidden md:flex space-x-4\">",
      "          <button className=\"bg-transparent border border-white px-4 py-2 rounded hover:bg-white hover:text-black\">Login</button>",
      "          <button className=\"bg-white text-black px-4 py-2 rounded hover:bg-gray-300\">Sign Up</button>",
      "        </div>",
      "        <div className=\"md:hidden\">",
      "          <button onClick={toggleMenu} className=\"focus:outline-none\">",
      "            {isOpen ? <FiX size={24} /> : <FiMenu size={24} />} ",
      "          </button>",
      "        </div>",
      "      </div>",
      "      <div className={`\\${isOpen ? 'block' : 'hidden'} md:hidden mt-4`}>",
      "        <ul className=\"flex flex-col space-y-4\">",
      "          <li><a href=\"/home\" onClick={toggleMenu}>Home</a></li>",
      "          <li><a href=\"/about\" onClick={toggleMenu}>About</a></li>",
      "          <li><a href=\"/services\" onClick={toggleMenu}>Services</a></li>",
      "          <li><a href=\"/contact\" onClick={toggleMenu}>Contact</a></li>",
      "          <div className=\"flex flex-col space-y-2 mt-4\">",
      "            <button className=\"bg-transparent border border-white px-4 py-2 rounded hover:bg-white hover:text-black\">Login</button>",
      "            <button className=\"bg-white text-black px-4 py-2 rounded hover:bg-gray-300\">Sign Up</button>",
      "          </div>",
      "        </ul>",
      "      </div>",
      "    </nav>",
      "  );",
      "};",
      "",
      "export default Navbar;"
    ],
    "description": "A simple nextjs navbar component with buttons for react web."
  },
  "React Nebula Notification": {
    "prefix": "notification-web",
    "body": [
      "import React from \"react\";",
      "import { GiAlienStare } from \"react-icons/gi\";",
      "",
      "const Notification = () => {",
      "  return (",
      "    <div className=\"w-80 bg-gradient-to-r from-purple-900 via-indigo-900 to-black p-4 rounded-lg shadow-lg border border-purple-500/20\">",
      "      <div className=\"flex items-start space-x-4\">",
      "        <div className=\"flex-shrink-0 bg-purple-500/20 p-2 rounded-full\">",
      "          <GiAlienStare className=\"w-6 h-6 text-purple-400 animate-pulse\" />",
      "        </div>",
      "        <div className=\"flex-1\">",
      "          <div className=\"flex items-center justify-between\">",
      "            <p className=\"text-purple-300 font-semibold\">Alien Signal Detected</p>",
      "            <span className=\"text-purple-400/60 text-xs\">Now</span>",
      "          </div>",
      "          <p className=\"mt-1 text-sm text-purple-200/80\">",
      "            Unknown transmission received from the Andromeda galaxy. Decoding sequence initiated.",
      "          </p>",
      "          <div className=\"mt-3 flex items-center space-x-3\">",
      "            <button className=\"px-3 py-1 text-xs font-medium text-purple-200 bg-purple-500/20 rounded-full hover:bg-purple-500/30 transition-colors\">",
      "              Decode Now",
      "            </button>",
      "            <button className=\"px-3 py-1 text-xs font-medium text-purple-300/70 hover:text-purple-200 transition-colors\">",
      "              Dismiss",
      "            </button>",
      "          </div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "}",
      "",
      "export default Notification;"
    ],
    "description": "A futuristic notification component for alien signals with animated effects for react web."
  },
  "React Galaxy Pagination": {
    "prefix": "pagination-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Pagination = () => {",
      "  return (",
      "    <div>",
      "      <ol className=\"flex justify-center gap-1 text-xs font-medium\">",
      "        <li>",
      "          <a",
      "            href=\"#\"",
      "            className=\"inline-flex size-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"",
      "          >",
      "            <span className=\"sr-only\">Prev Page</span>",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className=\"size-3\"",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </a>",
      "        </li>",
      "",
      "        <li>",
      "          <a",
      "            href=\"#\"",
      "            className=\"block size-8 rounded border border-gray-100 bg-white text-center leading-8 text-gray-900\"",
      "          >",
      "            1",
      "          </a>",
      "        </li>",
      "",
      "        <li className=\"block size-8 rounded border bg-black text-center leading-8 text-white\">",
      "          2",
      "        </li>",
      "",
      "        <li>",
      "          <a",
      "            href=\"#\"",
      "            className=\"block size-8 rounded border border-gray-100 bg-white text-center leading-8 text-gray-900\"",
      "          >",
      "            3",
      "          </a>",
      "        </li>",
      "",
      "        <li>",
      "          <a",
      "            href=\"#\"",
      "            className=\"block size-8 rounded border border-gray-100 bg-white text-center leading-8 text-gray-900\"",
      "          >",
      "            4",
      "          </a>",
      "        </li>",
      "",
      "        <li>",
      "          <a",
      "            href=\"#\"",
      "            className=\"inline-flex size-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"",
      "          >",
      "            <span className=\"sr-only\">Next Page</span>",
      "            <svg",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              className=\"size-3\"",
      "              viewBox=\"0 0 20 20\"",
      "              fill=\"currentColor\"",
      "            >",
      "              <path",
      "                fillRule=\"evenodd\"",
      "                d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"",
      "                clipRule=\"evenodd\"",
      "              />",
      "            </svg>",
      "          </a>",
      "        </li>",
      "      </ol>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Pagination;"
    ],
    "description": "A default pagination component with navigation buttons and numbered pages for react web."
  },
  "React Mars Pagination": {
    "prefix": "pagination-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Pagination = () => {",
      "  return (",
      "    <div className=\"inline-flex items-center justify-center gap-3\">",
      "      <a",
      "        href=\"#\"",
      "        className=\"inline-flex size-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"",
      "      >",
      "        <span className=\"sr-only\">Prev Page</span>",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"size-3\"",
      "          viewBox=\"0 0 20 20\"",
      "          fill=\"currentColor\"",
      "        >",
      "          <path",
      "            fillRule=\"evenodd\"",
      "            d=\"M12.707 5.293a1 1 0 010 1.414L9.414 10l3.293 3.293a1 1 0 01-1.414 1.414l-4-4a1 1 0 010-1.414l4-4a1 1 0 011.414 0z\"",
      "            clipRule=\"evenodd\"",
      "          />",
      "        </svg>",
      "      </a>",
      "",
      "      <p className=\"text-xs text-gray-900\">",
      "        1<span className=\"mx-0.25\">/</span>47",
      "      </p>",
      "",
      "      <a",
      "        href=\"#\"",
      "        className=\"inline-flex size-8 items-center justify-center rounded border border-gray-100 bg-white text-gray-900 rtl:rotate-180\"",
      "      >",
      "        <span className=\"sr-only\">Next Page</span>",
      "        <svg",
      "          xmlns=\"http://www.w3.org/2000/svg\"",
      "          className=\"size-3\"",
      "          viewBox=\"0 0 20 20\"",
      "          fill=\"currentColor\"",
      "        >",
      "          <path",
      "            fillRule=\"evenodd\"",
      "            d=\"M7.293 14.707a1 1 0 010-1.414L10.586 10 7.293 6.707a1 1 0 011.414-1.414l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414 0z\"",
      "            clipRule=\"evenodd\"",
      "          />",
      "        </svg>",
      "      </a>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Pagination;"
    ],
    "description": "A minimal pagination component with left and right navigation buttons and a page counter for react web."
  },
  "React Galaxy Popover": {
    "prefix": "popover-web",
    "body": [
      "import React, { useState, useRef, useEffect } from \"react\";",
      "",
      "const Popover = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const popoverRef = useRef<HTMLDivElement>(null);",
      "  const buttonRef = useRef<HTMLButtonElement>(null);",
      "",
      "  const handleClickOutside = (event: MouseEvent) => {",
      "    if (",
      "      popoverRef.current &&",
      "      !popoverRef.current.contains(event.target as Node) &&",
      "      buttonRef.current &&",
      "      !buttonRef.current.contains(event.target as Node)",
      "    ) {",
      "      setIsOpen(false);",
      "    }",
      "  };",
      "",
      "  useEffect(() => {",
      "    document.addEventListener(\"mousedown\", handleClickOutside);",
      "    return () => {",
      "      document.removeEventListener(\"mousedown\", handleClickOutside);",
      "    };",
      "  }, []);",
      "",
      "  return (",
      "    <div className=\"relative flex justify-center items-center\">",
      "      <button",
      "        ref={buttonRef}",
      "        onClick={() => setIsOpen((prev) => !prev)}",
      "        className=\"px-4 py-2 text-white bg-black rounded\"",
      "      >",
      "        Toggle Popover",
      "      </button>",
      "",
      "      {isOpen && (",
      "        <div",
      "          ref={popoverRef}",
      "          className=\"absolute z-10 bottom-full mb-2 w-60 h-auto p-4 bg-white border rounded shadow\"",
      "        >",
      "          <p>This is a Galaxy Popover</p>",
      "          <p className=\"mt-2 text-sm text-gray-500\">",
      "            You can put any content here.",
      "          </p>",
      "        </div>",
      "      )}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Popover;"
    ],
    "description": "A popover component that displays a tooltip-like message when toggled for react web."
  },
  "React Galaxy Progressbar": {
    "prefix": "progress-web",
    "body": [
      "import React from \"react\";",
      "",
      "const ProgressBar = () => {",
      "  return (",
      "    <div>",
      "      <h2 className=\"sr-only\">Steps</h2>",
      "",
      "      <div className=\"w-[400px]\">",
      "        <div className=\"overflow-hidden w-full rounded-full bg-gray-200\">",
      "          <div className=\"h-2 w-1/2 rounded-full bg-black\"></div>",
      "        </div>",
      "",
      "        <ol className=\"mt-4 grid grid-cols-3 text-sm font-medium text-gray-500\">",
      "          <li className=\"flex items-center justify-start text-black sm:gap-1.5\">",
      "            <svg",
      "              className=\"size-6 sm:size-5\"",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              fill=\"none\"",
      "              viewBox=\"0 0 24 24\"",
      "              stroke=\"currentColor\"",
      "              strokeWidth=\"2\"",
      "            >",
      "              <path",
      "                strokeLinecap=\"round\"",
      "                strokeLinejoin=\"round\"",
      "                d=\"M10 6H5a2 2 0 00-2 2v9a2 2 0 002 2h14a2 2 0 002-2V8a2 2 0 00-2-2h-5m-4 0V5a2 2 0 114 0v1m-4 0a2 2 0 104 0m-5 8a2 2 0 100-4 2 2 0 000 4zm0 0c1.306 0 2.417.835 2.83 2M9 14a3.001 3.001 0 00-2.83 2M15 11h3m-3 4h2\"",
      "              />",
      "            </svg>",
      "          </li>",
      "",
      "          <li className=\"flex items-center justify-center text-black sm:gap-1.5\">",
      "            <svg",
      "              className=\"size-6 sm:size-5\"",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              fill=\"none\"",
      "              viewBox=\"0 0 24 24\"",
      "              stroke=\"currentColor\"",
      "              strokeWidth=\"2\"",
      "            >",
      "              <path",
      "                strokeLinecap=\"round\"",
      "                strokeLinejoin=\"round\"",
      "                d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"",
      "              />",
      "              <path",
      "                strokeLinecap=\"round\"",
      "                strokeLinejoin=\"round\"",
      "                d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\"",
      "              />",
      "            </svg>",
      "          </li>",
      "",
      "          <li className=\"flex items-center justify-end sm:gap-1.5\">",
      "            <svg",
      "              className=\"size-6 sm:size-5\"",
      "              xmlns=\"http://www.w3.org/2000/svg\"",
      "              fill=\"none\"",
      "              viewBox=\"0 0 24 24\"",
      "              stroke=\"currentColor\"",
      "              strokeWidth=\"2\"",
      "            >",
      "              <path",
      "                strokeLinecap=\"round\"",
      "                strokeLinejoin=\"round\"",
      "                d=\"M3 10h18M7 15h1m4 0h1m-7 4h12a3 3 0 003-3V8a3 3 0 00-3-3H6a3 3 0 00-3 3v8a3 3 0 003 3z\"",
      "              />",
      "            </svg>",
      "          </li>",
      "        </ol>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ProgressBar;"
    ],
    "description": "A default progress bar component with icons representing different stages for react web."
  },
  "React Earth Progressbar": {
    "prefix": "progress-web",
    "body": [
      "import React from \"react\";",
      "",
      "const ProgressBar = () => {",
      "  return (",
      "      <div className=\"w-[400px] mt-4 h-2 overflow-hidden rounded-full bg-gray-200\">",
      "        <div className=\"h-full w-2/3 rounded-full bg-black\"></div>",
      "      </div>",
      "  );",
      "};",
      "",
      "export default ProgressBar;"
    ],
    "description": "A simple progress bar component with rounded edges for react web."
  },
  "React Mars Progressbar": {
    "prefix": "progress-web",
    "body": [
      "import React from \"react\";",
      "import { FaCheckCircle } from \"react-icons/fa\";",
      "",
      "const ProgressBar = () => {",
      "  return (",
      "    <div className=\"my-5 px-4\">",
      "      <div className=\"relative w-[400px] mt-4 h-1.5 bg-gray-200 rounded-lg\">",
      "        <div className=\"absolute inset-0 flex justify-between -top-4\">",
      "          <div className=\"flex flex-col items-start flex-1\">",
      "            <div className=\"w-9 h-9 p-2 rounded-full bg-black flex justify-center items-center mb-2\">",
      "              <FaCheckCircle size={20} className=\"text-white\" />",
      "            </div>",
      "            <span className=\"text-xs font-medium text-black\">Details</span>",
      "          </div>",
      "",
      "          <div className=\"flex flex-col items-center flex-1\">",
      "            <div className=\"w-9 h-9 p-2 rounded-full bg-black flex justify-center items-center mb-2\">",
      "              <FaCheckCircle size={20} className=\"text-white\" />",
      "            </div>",
      "            <span className=\"text-xs font-medium text-black\">Address</span>",
      "          </div>",
      "",
      "          <div className=\"flex flex-col items-end flex-1\">",
      "            <div className=\"w-9 h-9 p-2 rounded-full bg-gray-400 flex justify-center items-center mb-2\">",
      "              <FaCheckCircle size={20} className=\"text-white\" />",
      "            </div>",
      "            <span className=\"text-xs font-medium text-gray-500\">Payment</span>",
      "          </div>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default ProgressBar;"
    ],
    "description": "A progress bar component with step indicators for Details, Address, and Payment for react web."
  },
  "React Galaxy Searchbar": {
    "prefix": "search-web",
    "body": [
      "import React from \"react\";",
      "import { GoSearch } from \"react-icons/go\";",
      "",
      "const SearchBar = () => {",
      "  return (",
      "    <div className=\"w-[400px] flex items-center bg-gray-100 rounded-full px-4 py-3\">",
      "      <GoSearch size={20} color=\"gray\" />",
      "      <input",
      "        placeholder=\"Search the galaxy...\"",
      "        className=\"flex-1 ml-2 text-base border-none outline-none bg-transparent \"",
      "      />",
      "    </div>",
      "  );",
      "}",
      "",
      "export default SearchBar;"
    ],
    "description": "A default search bar component with a search button for react web."
  },
  "React Galaxy Spinner": {
    "prefix": "spinner-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Spinner = () => {",
      "  return (",
      "    <div className=\"flex items-center justify-center\">",
      "      <div className=\"h-12 w-12 border-4 border-black border-t-transparent border-solid rounded-full animate-spin\"></div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Spinner;"
    ],
    "description": "A simple default loading spinner component for react web."
  },
  "React Earth Spinner": {
    "prefix": "spinner-web",
    "body": [
      "import React, { useState, useEffect } from \"react\";",
      "",
      "const Spinner = () => {",
      "  const [currentColor, setCurrentColor] = useState(\"bg-black\");",
      "",
      "  useEffect(() => {",
      "    const colors = [",
      "      \"bg-black\",",
      "      \"bg-red-500\",",
      "      \"bg-blue-500\",",
      "      \"bg-green-500\",",
      "      \"bg-yellow-500\"",
      "    ];",
      "    let index = 0;",
      "",
      "    const interval = setInterval(() => {",
      "      setCurrentColor(colors[index]);",
      "      index = (index + 1) % colors.length;",
      "    }, 500);",
      "",
      "    return () => clearInterval(interval);",
      "  }, []);",
      "",
      "  return (",
      "    <div className=\"flex items-center justify-center\">",
      "      <div className={`w-12 h-12 \\${currentColor} rounded-full animate-spin`} />",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Spinner;"
    ],
    "description": "An animated spinner component that changes colors dynamically, for react web."
  },
  "React Galaxy Switch": {
    "prefix": "switch-web",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "const Switch = () => {",
      "  const [isEnabled, setIsEnabled] = useState(false);",
      "",
      "  return (",
      "    <div",
      "      className={`relative inline-flex h-7 w-14 items-center rounded-full cursor-pointer transition \\${",
      "        isEnabled ? \"bg-black\" : \"bg-gray-400\"",
      "      }`}",
      "      onClick={() => setIsEnabled(!isEnabled)}",
      "    >",
      "      <span",
      "        className={`inline-block h-6 w-6 transform rounded-full bg-white transition \\${",
      "          isEnabled ? \"translate-x-6\" : \"translate-x-1\"",
      "        }`}",
      "      />",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Switch;"
    ],
    "description": "A simple react switch component with a toggle effect"
  },
  "React Galaxy Table": {
    "prefix": "table-web",
    "body": [
      "import React from \"react\";",
      "",
      "const Table = () => {",
      "  const tableData = [",
      "    { id: 1, name: \"John Doe\", email: \"john@example.com\", role: \"Admin\" },",
      "    { id: 2, name: \"Jane Smith\", email: \"jane@example.com\", role: \"Editor\" },",
      "    { id: 3, name: \"Sam Wilson\", email: \"sam@example.com\", role: \"Viewer\" }",
      "  ];",
      "",
      "  return (",
      "    <div className=\"container mx-auto p-4\">",
      "      <div className=\"overflow-x-auto\">",
      "        <table className=\"min-w-full border-collapse text-sm\">",
      "          <thead>",
      "            <tr className=\"bg-gray-100\">",
      "              <th className=\"px-4 py-2 text-left\">ID</th>",
      "              <th className=\"px-4 py-2 text-left\">Name</th>",
      "              <th className=\"px-4 py-2 text-left\">Email</th>",
      "              <th className=\"px-4 py-2 text-left\">Role</th>",
      "            </tr>",
      "          </thead>",
      "          <tbody>",
      "            {tableData.map((row) => (",
      "              <tr",
      "                key={row.id}",
      "                className=\"odd:bg-white even:bg-gray-50 text-nowrap\"",
      "              >",
      "                <td className=\"px-4 py-2\">{row.id}</td>",
      "                <td className=\"px-4 py-2\">{row.name}</td>",
      "                <td className=\"px-4 py-2\">{row.email}</td>",
      "                <td className=\"px-4 py-2\">{row.role}</td>",
      "              </tr>",
      "            ))}",
      "          </tbody>",
      "        </table>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Table;"
    ],
    "description": "A default react table component with horizontal scrolling."
  },
  "React Galaxy Toast": {
    "prefix": "toast-web",
    "body": [
      "import React, { useState, useEffect } from \"react\";",
      "",
      "const SuccessToast = ({ onClose }) => {",
      "  useEffect(() => {",
      "    const timer = setTimeout(onClose, 3000);",
      "    return () => clearTimeout(timer);",
      "  }, [onClose]);",
      "",
      "  return (",
      "    <div className=\"fixed top-5 right-5 z-50 px-4 py-2 bg-green-500 rounded shadow-lg flex items-center justify-between text-white\">",
      "      <p className=\"text-sm\">Operation successful!</p>",
      "      <button onClick={onClose} className=\"ml-4 font-bold\">",
      "        ×",
      "      </button>",
      "    </div>",
      "  );",
      "};",
      "",
      "const Toast = () => {",
      "  const [showToast, setShowToast] = useState(false);",
      "",
      "  return (",
      "    <div className=\"flex items-center justify-center\">",
      "      <button",
      "        onClick={() => setShowToast(true)}",
      "        className=\"px-4 py-2 bg-black text-white rounded\"",
      "      >",
      "        Click me",
      "      </button>",
      "      {showToast && <SuccessToast onClose={() => setShowToast(false)} />}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Toast;"
    ],
    "description": "A default react toast component with show and close functionality."
  },
  "React Earth Toast": {
    "prefix": "toast-web",
    "body": [
      "import React, { useState, useEffect } from \"react\";",
      "",
      "const SuccessToast = ({ onClose }) => {",
      "  useEffect(() => {",
      "    const timer = setTimeout(onClose, 3000);",
      "    return () => clearTimeout(timer);",
      "  }, [onClose]);",
      "",
      "  return (",
      "    <div className=\"fixed top-5 right-5 z-50 px-4 py-2 self-center flex justify-between items-center bg-green-50 border-b-4 border-green-500 shadow-lg\">",
      "      <div>",
      "        <p className=\"text-sm mb-1\">Operation successful!</p>",
      "        <p className=\"text-sm\">Moving to the next planet</p>",
      "      </div>",
      "      <button onClick={onClose} className=\"ml-4 font-bold\">",
      "        ×",
      "      </button>",
      "    </div>",
      "  );",
      "};",
      "",
      "const Toast = () => {",
      "  const [showToast, setShowToast] = useState(false);",
      "",
      "  return (",
      "    <div className=\"flex items-center justify-center\">",
      "      <button",
      "        onClick={() => setShowToast(true)}",
      "        className=\"px-4 py-2 bg-black text-white rounded\"",
      "      >",
      "        Click me",
      "      </button>",
      "      {showToast && <SuccessToast onClose={() => setShowToast(false)} />}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Toast;"
    ],
    "description": "A simple react toast component with a success message and close functionality."
  },
  "React Galaxy Accordion (tsx)": {
    "prefix": "accordion-web",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "const Accordion = () => {",
      "  const [openIndex, setOpenIndex] = useState<number | null>(null);",
      "",
      "  const accordionItems = [",
      "    {",
      "      title: \"Is AlienUI a component library?\",",
      "      content: \"Yes, It is a self-hosted component library but you do not install it as a dependency. It is not available via npm like other traditional component library. Pick the components you need. Copy and paste the code into your project and customize to your needs. The code is yours.\"",
      "    },",
      "    {",
      "      title: \"Why copy/paste and not packaged as a dependency?\",",
      "      content: \"The goal is to give you full control over your components, enabling you to decide their structure and styling. By starting with sensible defaults, you can customize them to fit your needs. Unlike packaged npm components, where styles are tightly coupled to implementation, separating design from functionality ensures flexibility and adaptability.\"",
      "    },",
      "    {",
      "      title: \"Do you plan to publish it as an npm package?\",",
      "      content: \"No. We have no plans to publish it as an npm package.\"",
      "    },",
      "    {",
      "      title: \"Which frameworks are supported?\",",
      "      content: \"You can use any framework that supports React Native. Expo etc.\"",
      "    },",
      "    {",
      "      title: \"Can I use this in my project?\",",
      "      content: \"Yes, you can use AlienUI in your React Native project. The code is yours. But hey, let us know if you do. We'd love to see what you build.\"",
      "    }",
      "  ];",
      "",
      "  const toggleAccordion = (index: number) => {",
      "    setOpenIndex(index === openIndex ? null : index);",
      "  };",
      "",
      "  return (",
      "    <section className=\"w-full lg:w-[450px] flex flex-col items-center justify-center px-4 my-16\">",
      "      <div className=\"w-full max-w-7xl mx-auto border bg-white\">",
      "        {accordionItems.map((item, index) => (",
      "          <div key={index} className=\"border-b last:border-b-0 border-gray-300\">",
      "            <button",
      "              onClick={() => toggleAccordion(index)}",
      "              className=\"w-full text-left py-4 px-6 flex justify-between items-center\"",
      "            >",
      "              <span className=\"text-lg font-medium\">{item.title}</span>",
      "              <span",
      "                className={`transform transition-transform //${openIndex === index ? \"rotate-180\" : \"\"}`} ",
      "              >",
      "                ▼",
      "              </span>",
      "            </button>",
      "            {openIndex === index && (",
      "              <div className=\"px-6 py-4\">",
      "                <p className=\"text-gray-700\">{item.content}</p>",
      "              </div>",
      "            )}",
      "          </div>",
      "        ))}",
      "      </div>",
      "    </section>",
      "  );",
      "};",
      "",
      "export default Accordion;"
    ],
    "description": "A default accordion component for react web"
  },
  "React Galaxy Alert (tsx)": {
    "prefix": "alert-web",
    "body": [
      "import React from \"react\";",
      "import { FaCheckCircle, FaExclamationTriangle, FaTimesCircle } from \"react-icons/fa\";",
      "",
      "interface AlertProps {",
      "  type?: \"success\" | \"warning\" | \"failure\";",
      "  title: string;",
      "  message: string;",
      "}",
      "",
      "const Alert: React.FC<AlertProps> = ({ type = \"success\", title, message }) => {",
      "  const alertStyles: Record<",
      "    \"success\" | \"warning\" | \"failure\",",
      "    { bgColor: string; borderColor: string; icon: JSX.Element; textColor: string }",
      "  > = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-400\",",
      "      icon: <FaCheckCircle className=\"text-green-600 w-5 h-5\" />,",
      "      textColor: \"text-gray-900\"",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-400\",",
      "      icon: <FaExclamationTriangle className=\"text-yellow-600 w-5 h-5\" />,",
      "      textColor: \"text-gray-900\"",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-400\",",
      "      icon: <FaTimesCircle className=\"text-red-600 w-5 h-5\" />,",
      "      textColor: \"text-gray-900\"",
      "    }",
      "  };",
      "",
      "  const { bgColor, borderColor, icon, textColor } = alertStyles[type];",
      "",
      "  return (",
      "    <div className={`rounded-xl border \\${borderColor} \\${bgColor} p-4 w-[250px]`}>",
      "      <div className=\"flex items-start gap-2\">",
      "        {icon}",
      "        <div className=\"flex-1\">",
      "          <strong className={`block text-sm font-semibold \\${textColor}`}>",
      "            {title}",
      "          </strong>",
      "          <p className=\"mt-1 text-xs text-gray-700\">{message}</p>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A default alert component for react web"
  },
  "React Earth Alert (tsx)": {
    "prefix": "alert-web",
    "body": [
      "import React from \"react\";",
      "",
      "interface AlertProps {",
      "  type?: \"success\" | \"warning\" | \"failure\";",
      "  title: string;",
      "  message: string;",
      "}",
      "",
      "const Alert: React.FC<AlertProps> = ({",
      "  type = \"success\",",
      "  title,",
      "  message,",
      "}) => {",
      "  const alertStyles: Record<",
      "    \"success\" | \"warning\" | \"failure\",",
      "    { bgColor: string; borderColor: string; border: string }",
      "  > = {",
      "    success: {",
      "      bgColor: \"bg-green-50\",",
      "      borderColor: \"border-green-500\",",
      "      border: \"border-l-4\",",
      "    },",
      "    warning: {",
      "      bgColor: \"bg-yellow-50\",",
      "      borderColor: \"border-yellow-500\",",
      "      border: \"border-l-4\",",
      "    },",
      "    failure: {",
      "      bgColor: \"bg-red-50\",",
      "      borderColor: \"border-red-500\",",
      "      border: \"border-l-4\",",
      "    },",
      "  };",
      "",
      "  const { bgColor, borderColor, border } = alertStyles[type];",
      "",
      "  return (",
      "    <div className={`rounded-xl \\${border} \\${borderColor} \\${bgColor} p-4 w-[300px]`}>",
      "      <strong className=\"block text-lg font-bold\">{title}</strong>",
      "      <p className=\"mt-1 text-sm\">{message}</p>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A customizable alert component with optional success, warning, or failure styles."
  },
  "React Galaxy Button (tsx)": {
    "prefix": "button-web",
    "body": [
      "import React from \"react\";",
      "",
      "interface ButtonProps {",
      "  type?: \"default\" | \"destructive\" | \"outline\" | \"disabled\";",
      "  label?: string;",
      "  onClick?: () => void;",
      "}",
      "",
      "const Button: React.FC<ButtonProps> = ({",
      "  type = \"default\",",
      "  label = \"Galaxy Button\",",
      "  onClick,",
      "}) => {",
      "  const buttonStyles: Record<",
      "    \"default\" | \"destructive\" | \"outline\" | \"disabled\",",
      "    { bgColor: string; textColor: string; border: string; disabled?: boolean }",
      "  > = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"\",",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-500\",",
      "      textColor: \"text-white\",",
      "      border: \"\",",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\",",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"\",",
      "      disabled: true,",
      "    },",
      "  };",
      "",
      "  const { bgColor, textColor, border, disabled } = buttonStyles[type];",
      "",
      "  return (",
      "    <button",
      "      className={`py-2 px-4 rounded-md flex items-center justify-center w-[200px] \\${bgColor} \\${border}`}",
      "      onClick={!disabled ? onClick : undefined}",
      "      disabled={disabled}",
      "    >",
      "      <span className={`text-base \\${textColor}`}>{label}</span>",
      "    </button>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A button component with different variants: default, destructive, outline, and disabled for react web"
  },
  "React Earth Button (tsx)": {
    "prefix": "button-web",
    "body": [
      "import React from \"react\";",
      "import { PiAlienThin } from \"react-icons/pi\";",
      "import { IconType } from \"react-icons\";",
      "",
      "interface ButtonProps {",
      "  label?: string;",
      "  type?: \"default\" | \"destructive\" | \"outline\" | \"disabled\";",
      "  icon?: IconType;",
      "  iconColor?: string;",
      "  onClick?: () => void;",
      "}",
      "",
      "const Button: React.FC<ButtonProps> = ({",
      "  label = \"Earth Button\",",
      "  type = \"default\",",
      "  icon: Icon = PiAlienThin,",
      "  iconColor,",
      "  onClick,",
      "}) => {",
      "  const buttonStyles: Record<",
      "    \"default\" | \"destructive\" | \"outline\" | \"disabled\",",
      "    { bgColor: string; textColor: string; border: string; iconColor: string; disabled?: boolean }",
      "  > = {",
      "    default: {",
      "      bgColor: \"bg-black\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-black\",",
      "      iconColor: \"white\",",
      "    },",
      "    destructive: {",
      "      bgColor: \"bg-red-500\",",
      "      textColor: \"text-white\",",
      "      border: \"border border-red-700\",",
      "      iconColor: \"white\",",
      "    },",
      "    outline: {",
      "      bgColor: \"bg-transparent\",",
      "      textColor: \"text-black\",",
      "      border: \"border border-black\",",
      "      iconColor: \"black\",",
      "    },",
      "    disabled: {",
      "      bgColor: \"bg-gray-400\",",
      "      textColor: \"text-gray-200\",",
      "      border: \"border border-gray-500\",",
      "      iconColor: \"gray\",",
      "      disabled: true,",
      "    },",
      "  };",
      "",
      "  const { bgColor, textColor, border, disabled } = buttonStyles[type];",
      "",
      "  return (",
      "    <button",
      "      className={`py-2 px-4 rounded-md flex items-center justify-center w-[200px] \\${bgColor} \\${border}`}",
      "      onClick={!disabled ? onClick : undefined}",
      "      disabled={disabled}",
      "    >",
      "      <span className={`text-base \\${textColor} mr-1`}>{label}</span>",
      "      {Icon && <Icon className={`text-xl \\${iconColor || buttonStyles[type].iconColor}`} />} ",
      "    </button>",
      "  );",
      "};",
      "",
      "export default Button;"
    ],
    "description": "A customizable Button component with different variants, an optional icon, and onPress functionality, for react web."
  },
  "React Galaxy Dropdown (tsx)": {
    "prefix": "dropdown-web",
    "body": [
      "import React, { useState } from \"react\";",
      "",
      "const Dropdown = () => {",
      "  const [isOpen, setIsOpen] = useState(false);",
      "  const [selectedOption, setSelectedOption] = useState<string | null>(null);",
      "",
      "  const options = [\"Galaxy Dropdown\", \"Nebula Dropdown\", \"Earth Dropdown\"];",
      "",
      "  const handleOptionClick = (option: string) => {",
      "    setSelectedOption(option);",
      "    setIsOpen(false);",
      "  };",
      "",
      "  return (",
      "    <div className=\"relative inline-block w-64\">",
      "      <label className=\"block text-gray-700 mb-2\">Choose an option</label>",
      "      <button",
      "        onClick={() => setIsOpen(!isOpen)}",
      "        className=\"w-full bg-white text-gray-700 border border-gray-300 rounded-t-md px-4 py-2 text-left flex items-center justify-between\"",
      "      >",
      "        {selectedOption || \"Select an option\"}",
      "        <span",
      "          className={`w-5 h-5 transition-transform ${",
      "            isOpen ? \"rotate-180\" : \"\"",
      "          }`}",
      "        >",
      "          ▼",
      "        </span>",
      "      </button>",
      "      {isOpen && (",
      "        <ul className=\"absolute z-10 mt-2 w-full bg-white border border-gray-300 rounded-b-md shadow-lg\">",
      "          {options.map((option, index) => (",
      "            <li",
      "              key={index}",
      "              onClick={() => handleOptionClick(option)}",
      "              className=\"px-4 py-2 cursor-pointer hover:bg-gray-100\"",
      "            >",
      "              {option}",
      "            </li>",
      "          ))}",
      "        </ul>",
      "      )}",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Dropdown;"
    ],
    "description": "A default dropdown component with interactive options for react web."
  },
  "Shadcn Accordion": {
    "prefix": "shad-accordion",
    "body": [
      "import {",
      "  Accordion,",
      "  AccordionContent,",
      "  AccordionItem,",
      "  AccordionTrigger",
      "} from \"@/components/ui/accordion\";",
      "",
      "export function AccordionDemo() {",
      "  return (",
      "    <Accordion type=\"single\" collapsible className=\"w-full\">",
      "      <AccordionItem value=\"item-1\">",
      "        <AccordionTrigger>Is it accessible?</AccordionTrigger>",
      "        <AccordionContent>",
      "          Yes. It adheres to the WAI-ARIA design pattern.",
      "        </AccordionContent>",
      "      </AccordionItem>",
      "      <AccordionItem value=\"item-2\">",
      "        <AccordionTrigger>Is it styled?</AccordionTrigger>",
      "        <AccordionContent>",
      "          Yes. It comes with default styles that matches the other",
      "          components&apos; aesthetic.",
      "        </AccordionContent>",
      "      </AccordionItem>",
      "      <AccordionItem value=\"item-3\">",
      "        <AccordionTrigger>Is it animated?</AccordionTrigger>",
      "        <AccordionContent>",
      "          Yes. It&apos;s animated by default, but you can disable it if you",
      "          prefer.",
      "        </AccordionContent>",
      "      </AccordionItem>",
      "    </Accordion>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI accordion component."
  },
  "Shadcn Alert": {
    "prefix": "shad-alert",
    "body": [
      "import { Terminal } from \"lucide-react\";",
      "",
      "import {",
      "  Alert,",
      "  AlertDescription,",
      "  AlertTitle",
      "} from \"@/components/ui/alert\";",
      "",
      "export function AlertDemo() {",
      "  return (",
      "    <Alert>",
      "      <Terminal className=\"h-4 w-4\" />",
      "      <AlertTitle>Heads up!</AlertTitle>",
      "      <AlertDescription>",
      "        You can add components to your app using the cli.",
      "      </AlertDescription>",
      "    </Alert>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI alert component with several variants like destructive variants."
  },
  "Shadcn Avatar": {
    "prefix": "shad-avatar",
    "body": [
      "import {",
      "  Avatar,",
      "  AvatarFallback,",
      "  AvatarImage",
      "} from \"@/components/ui/avatar\";",
      "",
      "export function AvatarDemo() {",
      "  return (",
      "    <Avatar>",
      "      <AvatarImage src=\"https://github.com/shadcn.png\" alt=\"@shadcn\" />",
      "      <AvatarFallback>CN</AvatarFallback>",
      "    </Avatar>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI avatar component."
  },
  "Shadcn Badge": {
    "prefix": "shad-badge",
    "body": [
      "import { Badge } from \"@/components/ui/badge\";",
      "",
      "export function BadgeDemo() {",
      "  return <Badge>Badge</Badge>;",
      "}"
    ],
    "description": "ShadcnUI badge component with several variants like secondary, destructive, outline."
  },
  "Shadcn Breadcrumb": {
    "prefix": "shad-breadcrumb",
    "body": [
      "import {",
      "  Breadcrumb,",
      "  BreadcrumbEllipsis,",
      "  BreadcrumbItem,",
      "  BreadcrumbLink,",
      "  BreadcrumbList,",
      "  BreadcrumbPage,",
      "  BreadcrumbSeparator",
      "} from \"@/components/ui/breadcrumb\";",
      "import {",
      "  DropdownMenu,",
      "  DropdownMenuContent,",
      "  DropdownMenuItem,",
      "  DropdownMenuTrigger",
      "} from \"@/components/ui/dropdown-menu\";",
      "",
      "export function BreadcrumbDemo() {",
      "  return (",
      "    <Breadcrumb>",
      "      <BreadcrumbList>",
      "        <BreadcrumbItem>",
      "          <BreadcrumbLink href=\"/\">Home</BreadcrumbLink>",
      "        </BreadcrumbItem>",
      "        <BreadcrumbSeparator />",
      "        <BreadcrumbItem>",
      "          <DropdownMenu>",
      "            <DropdownMenuTrigger className=\"flex items-center gap-1\">",
      "              <BreadcrumbEllipsis className=\"h-4 w-4\" />",
      "              <span className=\"sr-only\">Toggle menu</span>",
      "            </DropdownMenuTrigger>",
      "            <DropdownMenuContent align=\"start\">",
      "              <DropdownMenuItem>Documentation</DropdownMenuItem>",
      "              <DropdownMenuItem>Themes</DropdownMenuItem>",
      "              <DropdownMenuItem>GitHub</DropdownMenuItem>",
      "            </DropdownMenuContent>",
      "          </DropdownMenu>",
      "        </BreadcrumbItem>",
      "        <BreadcrumbSeparator />",
      "        <BreadcrumbItem>",
      "          <BreadcrumbLink href=\"/docs/components\">Components</BreadcrumbLink>",
      "        </BreadcrumbItem>",
      "        <BreadcrumbSeparator />",
      "        <BreadcrumbItem>",
      "          <BreadcrumbPage>Breadcrumb</BreadcrumbPage>",
      "        </BreadcrumbItem>",
      "      </BreadcrumbList>",
      "    </Breadcrumb>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI breadcrumb component."
  },
  "Shadcn Button": {
    "prefix": "shad-btn",
    "body": [
      "import { Button } from \"@/components/ui/button\";",
      "",
      "export function ButtonDemo() {",
      "  return <Button>Button</Button>;",
      "}"
    ],
    "description": "ShadcnUI button component with variants like primary, secondary, destructive, outline, ghost, link, icon and as child."
  },
  "Shadcn Card": {
    "prefix": "shad-card",
    "body": [
      "import * as React from \"react\";",
      "",
      "import { Button } from \"@/components/ui/button\";",
      "import {",
      "  Card,",
      "  CardContent,",
      "  CardDescription,",
      "  CardFooter,",
      "  CardHeader,",
      "  CardTitle",
      "} from \"@/components/ui/card\";",
      "import { Input } from \"@/components/ui/input\";",
      "import { Label } from \"@/components/ui/label\";",
      "import {",
      "  Select,",
      "  SelectContent,",
      "  SelectItem,",
      "  SelectTrigger,",
      "  SelectValue",
      "} from \"@/components/ui/select\";",
      "",
      "export function CardWithForm() {",
      "  return (",
      "    <Card className=\"w-[350px]\">",
      "      <CardHeader>",
      "        <CardTitle>Create project</CardTitle>",
      "        <CardDescription>Deploy your new project in one-click.</CardDescription>",
      "      </CardHeader>",
      "      <CardContent>",
      "        <form>",
      "          <div className=\"grid w-full items-center gap-4\">",
      "            <div className=\"flex flex-col space-y-1.5\">",
      "              <Label htmlFor=\"name\">Name</Label>",
      "              <Input id=\"name\" placeholder=\"Name of your project\" />",
      "            </div>",
      "            <div className=\"flex flex-col space-y-1.5\">",
      "              <Label htmlFor=\"framework\">Framework</Label>",
      "              <Select>",
      "                <SelectTrigger id=\"framework\">",
      "                  <SelectValue placeholder=\"Select\" />",
      "                </SelectTrigger>",
      "                <SelectContent position=\"popper\">",
      "                  <SelectItem value=\"next\">Next.js</SelectItem>",
      "                  <SelectItem value=\"sveltekit\">SvelteKit</SelectItem>",
      "                  <SelectItem value=\"astro\">Astro</SelectItem>",
      "                  <SelectItem value=\"nuxt\">Nuxt.js</SelectItem>",
      "                </SelectContent>",
      "              </Select>",
      "            </div>",
      "          </div>",
      "        </form>",
      "      </CardContent>",
      "      <CardFooter className=\"flex justify-between\">",
      "        <Button variant=\"outline\">Cancel</Button>",
      "        <Button>Deploy</Button>",
      "      </CardFooter>",
      "    </Card>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI card component."
  },
  "Shadcn Carousel": {
    "prefix": "shad-carousel",
    "body": [
      "import * as React from \"react\";",
      "",
      "import { Card, CardContent } from \"@/components/ui/card\";",
      "import {",
      "  Carousel,",
      "  CarouselContent,",
      "  CarouselItem,",
      "  CarouselNext,",
      "  CarouselPrevious",
      "} from \"@/components/ui/carousel\";",
      "",
      "export function CarouselDemo() {",
      "  return (",
      "    <Carousel className=\"w-full max-w-xs\">",
      "      <CarouselContent>",
      "        {Array.from({ length: 5 }).map((_, index) => (",
      "          <CarouselItem key={index}>",
      "            <div className=\"p-1\">",
      "              <Card>",
      "                <CardContent className=\"flex aspect-square items-center justify-center p-6\">",
      "                  <span className=\"text-4xl font-semibold\">{index + 1}</span>",
      "                </CardContent>",
      "              </Card>",
      "            </div>",
      "          </CarouselItem>",
      "        ))}",
      "      </CarouselContent>",
      "      <CarouselPrevious />",
      "      <CarouselNext />",
      "    </Carousel>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI carousel component."
  },
  "Shadcn Checkbox": {
    "prefix": "shad-checkbox",
    "body": [
      "import { Checkbox } from \"@/components/ui/checkbox\";",
      "",
      "export function CheckboxDemo() {",
      "  return (",
      "    <div className=\"flex items-center space-x-2\">",
      "      <Checkbox id=\"terms\" />",
      "      <label",
      "        htmlFor=\"terms\"",
      "        className=\"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"",
      "      >",
      "        Accept terms and conditions",
      "      </label>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI checkbox component."
  },
  "Shadcn Dropdown": {
    "prefix": "shad-dropdown",
    "body": [
      "import {",
      "  DropdownMenu,",
      "  DropdownMenuContent,",
      "  DropdownMenuItem,",
      "  DropdownMenuLabel,",
      "  DropdownMenuSeparator,",
      "  DropdownMenuTrigger",
      "} from \"@/components/ui/dropdown-menu\";",
      "",
      "<DropdownMenu>",
      "  <DropdownMenuTrigger>Open</DropdownMenuTrigger>",
      "  <DropdownMenuContent>",
      "    <DropdownMenuLabel>My Account</DropdownMenuLabel>",
      "    <DropdownMenuSeparator />",
      "    <DropdownMenuItem>Profile</DropdownMenuItem>",
      "    <DropdownMenuItem>Billing</DropdownMenuItem>",
      "    <DropdownMenuItem>Team</DropdownMenuItem>",
      "    <DropdownMenuItem>Subscription</DropdownMenuItem>",
      "  </DropdownMenuContent>",
      "</DropdownMenu>"
    ],
    "description": "ShadcnUI dropdown component."
  },
  "Shadcn Input": {
    "prefix": "shad-input",
    "body": [
      "import { Input } from \"@/components/ui/input\";",
      "",
      "export function InputDemo() {",
      "  return <Input type=\"email\" placeholder=\"Email\" />;",
      "}"
    ],
    "description": "ShadcnUI input component."
  },
  "Shadcn Pagination": {
    "prefix": "shad-pagination",
    "body": [
      "import {",
      "  Pagination,",
      "  PaginationContent,",
      "  PaginationEllipsis,",
      "  PaginationItem,",
      "  PaginationLink,",
      "  PaginationNext,",
      "  PaginationPrevious",
      "} from \"@/components/ui/pagination\";",
      "",
      "export function PaginationDemo() {",
      "  return (",
      "    <Pagination>",
      "      <PaginationContent>",
      "        <PaginationItem>",
      "          <PaginationPrevious href=\"#\" />",
      "        </PaginationItem>",
      "        <PaginationItem>",
      "          <PaginationLink href=\"#\">1</PaginationLink>",
      "        </PaginationItem>",
      "        <PaginationItem>",
      "          <PaginationLink href=\"#\" isActive>",
      "            2",
      "          </PaginationLink>",
      "        </PaginationItem>",
      "        <PaginationItem>",
      "          <PaginationLink href=\"#\">3</PaginationLink>",
      "        </PaginationItem>",
      "        <PaginationItem>",
      "          <PaginationEllipsis />",
      "        </PaginationItem>",
      "        <PaginationItem>",
      "          <PaginationNext href=\"#\" />",
      "        </PaginationItem>",
      "      </PaginationContent>",
      "    </Pagination>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI pagination component."
  },
  "Shadcn Popover": {
    "prefix": "shad-popover",
    "body": [
      "import {",
      "  Popover,",
      "  PopoverContent,",
      "  PopoverTrigger",
      "} from \"@/components/ui/popover\";",
      "",
      "<Popover>",
      "  <PopoverTrigger>Open</PopoverTrigger>",
      "  <PopoverContent>Place content for the popover here.</PopoverContent>",
      "</Popover>"
    ],
    "description": "ShadcnUI popover component."
  },
  "Shadcn Progress": {
    "prefix": "shad-progress",
    "body": [
      "import { Progress } from \"@/components/ui/progress\";",
      "",
      "export function ProgressDemo() {",
      "  return <Progress value={50} max={100} />;",
      "}"
    ],
    "description": "ShadcnUI progress component."
  },
  "Shadcn Switch": {
    "prefix": "shad-switch",
    "body": [
      "import { Label } from \"@/components/ui/label\";",
      "import { Switch } from \"@/components/ui/switch\";",
      "",
      "export function SwitchDemo() {",
      "  return (",
      "    <div className=\"flex items-center space-x-2\">",
      "      <Switch id=\"airplane-mode\" />",
      "      <Label htmlFor=\"airplane-mode\">Airplane Mode</Label>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "ShadcnUI switch component."
  },
  "Shadcn Tab": {
    "prefix": "shad-tab",
    "body": [
      "import { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";",
      "",
      "<Tabs defaultValue=\"account\" className=\"w-[400px]\">",
      "  <TabsList>",
      "    <TabsTrigger value=\"account\">Account</TabsTrigger>",
      "    <TabsTrigger value=\"password\">Password</TabsTrigger>",
      "  </TabsList>",
      "  <TabsContent value=\"account\">Make changes to your account here.</TabsContent>",
      "  <TabsContent value=\"password\">Change your password here.</TabsContent>",
      "</Tabs>"
    ],
    "description": "ShadcnUI tab component."
  },
  "Shadcn Table": {
    "prefix": "shad-table",
    "body": [
      "import {",
      "  Table,",
      "  TableBody,",
      "  TableCaption,",
      "  TableCell,",
      "  TableHead,",
      "  TableHeader,",
      "  TableRow",
      "} from \"@/components/ui/table\";",
      "",
      "<Table>",
      "  <TableCaption>A list of your recent invoices.</TableCaption>",
      "  <TableHeader>",
      "    <TableRow>",
      "      <TableHead className=\"w-[100px]\">Invoice</TableHead>",
      "      <TableHead>Status</TableHead>",
      "      <TableHead>Method</TableHead>",
      "      <TableHead className=\"text-right\">Amount</TableHead>",
      "    </TableRow>",
      "  </TableHeader>",
      "  <TableBody>",
      "    <TableRow>",
      "      <TableCell className=\"font-medium\">INV001</TableCell>",
      "      <TableCell>Paid</TableCell>",
      "      <TableCell>Credit Card</TableCell>",
      "      <TableCell className=\"text-right\">$250.00</TableCell>",
      "    </TableRow>",
      "  </TableBody>",
      "</Table>"
    ],
    "description": "ShadcnUI table component."
  },
  "Chakra Accordion": {
    "prefix": "chak-accordion",
    "body": [
      "import {",
      "  AccordionItem,",
      "  AccordionItemContent,",
      "  AccordionItemTrigger,",
      "  AccordionRoot",
      "} from \"@/components/ui/accordion\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <AccordionRoot collapsible defaultValue={[\"b\"]}>",
      "      {items.map((item, index) => (",
      "        <AccordionItem key={index} value={item.value}>",
      "          <AccordionItemTrigger>{item.title}</AccordionItemTrigger>",
      "          <AccordionItemContent>{item.text}</AccordionItemContent>",
      "        </AccordionItem>",
      "      ))}",
      "    </AccordionRoot>",
      "  );",
      "};",
      "",
      "const items = [",
      "  { value: \"a\", title: \"First Item\", text: \"Some value 1...\" },",
      "  { value: \"b\", title: \"Second Item\", text: \"Some value 2...\" },",
      "  { value: \"c\", title: \"Third Item\", text: \"Some value 3...\" }",
      "];",
      "",
      "export default Demo;"
    ],
    "description": "ChakraUI accordion component."
  },
  "Chakra Alert": {
    "prefix": "chak-alert",
    "body": [
      "import { Alert } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Alert.Root status=\"info\" title=\"This is the alert title\">",
      "      <Alert.Indicator />",
      "      <Alert.Title>This is the alert title</Alert.Title>",
      "    </Alert.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "ChakraUI alert component with status props like warning, success, error and info."
  },
  "Chakra Avatar": {
    "prefix": "chak-avatar",
    "body": [
      "import { Avatar } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Avatar.Root>",
      "      <Avatar.Fallback name=\"Segun Adebayo\" />",
      "      <Avatar.Image src=\"https://bit.ly/sage-adebayo\" />",
      "    </Avatar.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "ChakraUI avatar component."
  },
  "Chakra Badge": {
    "prefix": "chak-badge",
    "body": [
      "import { Badge } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return <Badge>Badge</Badge>;",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "ChakraUI badge component that takes three props: colorPalette, variant and size."
  },
  "Chakra Breadcrumb": {
    "prefix": "chak-breadcrumb",
    "body": [
      "import { Breadcrumb } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Breadcrumb.Root>",
      "      <Breadcrumb.List>",
      "        <Breadcrumb.Item>",
      "          <Breadcrumb.Link href=\"#\">Docs</Breadcrumb.Link>",
      "        </Breadcrumb.Item>",
      "        <Breadcrumb.Separator />",
      "        <Breadcrumb.Item>",
      "          <Breadcrumb.Link href=\"#\">Components</Breadcrumb.Link>",
      "        </Breadcrumb.Item>",
      "        <Breadcrumb.Separator />",
      "        <Breadcrumb.Item>",
      "          <Breadcrumb.CurrentLink>Props</Breadcrumb.CurrentLink>",
      "        </Breadcrumb.Item>",
      "      </Breadcrumb.List>",
      "    </Breadcrumb.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "ChakraUI breadcrumb component."
  },
  "Chakra Button": {
    "prefix": "chak-btn",
    "body": [
      "import { Button } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return <Button>Button</Button>;",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "ChakraUI button component"
  },
  "Chakra Card": {
    "prefix": "chak-card",
    "body": [
      "import { Button, Card } from \"@chakra-ui/react\";",
      "import { Avatar } from \"@/components/ui/avatar\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Card.Root width=\"320px\">",
      "      <Card.Body gap=\"2\">",
      "        <Avatar",
      "          src=\"https://picsum.photos/200/300\"",
      "          name=\"Nue Camp\"",
      "          size=\"lg\"",
      "          shape=\"rounded\"",
      "        />",
      "        <Card.Title mt=\"2\">Nue Camp</Card.Title>",
      "        <Card.Description>",
      "          This is the card body. Lorem ipsum dolor sit amet, consectetur",
      "          adipiscing elit. Curabitur nec odio vel dui euismod fermentum.",
      "          Curabitur nec odio vel dui euismod fermentum.",
      "        </Card.Description>",
      "      </Card.Body>",
      "      <Card.Footer justifyContent=\"flex-end\">",
      "        <Button variant=\"outline\">View</Button>",
      "        <Button>Join</Button>",
      "      </Card.Footer>",
      "    </Card.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI Card component example with Avatar and Buttons."
  },
  "Chakra Checkbox": {
    "prefix": "chak-checkbox",
    "body": [
      "import { Checkbox } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Checkbox.Root>",
      "      <Checkbox.HiddenInput />",
      "      <Checkbox.Control />",
      "      <Checkbox.Label>Accept terms and conditions</Checkbox.Label>",
      "    </Checkbox.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI Checkbox component"
  },
  "Chakra Dropdown": {
    "prefix": "chak-dropdown",
    "body": [
      "\"use client\"",
      "",
      "import { createListCollection } from \"@chakra-ui/react\";",
      "import {",
      "  SelectContent,",
      "  SelectItem,",
      "  SelectLabel,",
      "  SelectRoot,",
      "  SelectTrigger,",
      "  SelectValueText",
      "} from \"@/components/ui/select\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <SelectRoot collection={frameworks} size=\"sm\" width=\"320px\">",
      "      <SelectLabel>Select framework</SelectLabel>",
      "      <SelectTrigger>",
      "        <SelectValueText placeholder=\"Select movie\" />",
      "      </SelectTrigger>",
      "      <SelectContent>",
      "        {frameworks.items.map((movie) => (",
      "          <SelectItem item={movie} key={movie.value}>",
      "            {movie.label}",
      "          </SelectItem>",
      "        ))}",
      "      </SelectContent>",
      "    </SelectRoot>",
      "  );",
      "};",
      "",
      "const frameworks = createListCollection({",
      "  items: [",
      "    { label: \"React.js\", value: \"react\" },",
      "    { label: \"Vue.js\", value: \"vue\" },",
      "    { label: \"Angular\", value: \"angular\" },",
      "    { label: \"Svelte\", value: \"svelte\" }",
      "  ]",
      "});",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI dropdwon select component example with a list of frameworks."
  },
  "Chakra Input": {
    "prefix": "chak-input",
    "body": [
      "import { Input } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return <Input placeholder=\"Enter your email\" />;",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A Chakra UI Input component with a placeholder."
  },
  "Chakra Pagination": {
    "prefix": "chak-pagination",
    "body": [
      "import { HStack } from \"@chakra-ui/react\";",
      "import {",
      "  PaginationItems,",
      "  PaginationNextTrigger,",
      "  PaginationPrevTrigger,",
      "  PaginationRoot",
      "} from \"@/components/ui/pagination\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <PaginationRoot count={20} pageSize={2} defaultPage={1}>",
      "      <HStack>",
      "        <PaginationPrevTrigger />",
      "        <PaginationItems />",
      "        <PaginationNextTrigger />",
      "      </HStack>",
      "    </PaginationRoot>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI pagination component with previous, next, and page items."
  },
  "Chakra Popover": {
    "prefix": "chak-popover",
    "body": [
      "import { Button, Input, Text } from \"@chakra-ui/react\";",
      "import {",
      "  PopoverArrow,",
      "  PopoverBody,",
      "  PopoverContent,",
      "  PopoverRoot,",
      "  PopoverTitle,",
      "  PopoverTrigger",
      "} from \"@/components/ui/popover\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <PopoverRoot>",
      "      <PopoverTrigger asChild>",
      "        <Button size=\"sm\" variant=\"outline\">",
      "          Click me",
      "        </Button>",
      "      </PopoverTrigger>",
      "      <PopoverContent>",
      "        <PopoverArrow />",
      "        <PopoverBody>",
      "          <PopoverTitle fontWeight=\"medium\">Naruto Form</PopoverTitle>",
      "          <Text my=\"4\">",
      "            Naruto is a Japanese manga series written and illustrated by Masashi Kishimoto.",
      "          </Text>",
      "          <Input placeholder=\"Your fav. character\" size=\"sm\" />",
      "        </PopoverBody>",
      "      </PopoverContent>",
      "    </PopoverRoot>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI popover component with a button trigger, title, text, and input field."
  },
  "Chakra Progress Bar": {
    "prefix": "chak-progress",
    "body": [
      "import { Progress } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Progress.Root maxW=\"240px\">",
      "      <Progress.Track>",
      "        <Progress.Range />",
      "      </Progress.Track>",
      "    </Progress.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI progress bar component with a button trigger, title, text, and input field."
  },
  "Chakra Spinner": {
    "prefix": "chak-spinner",
    "body": [
      "import { Spinner } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return <Spinner size=\"sm\" />;",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A Chakra UI spinner component with a small size."
  },
  "Chakra Switch": {
    "prefix": "chak-switch",
    "body": [
      "import { Switch } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Switch.Root>",
      "      <Switch.HiddenInput />",
      "      <Switch.Control />",
      "      <Switch.Label>Activate Chakra</Switch.Label>",
      "    </Switch.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A Chakra UI switch component with a label."
  },
  "Chakra Tab": {
    "prefix": "chak-tab",
    "body": [
      "import { Tabs } from \"@chakra-ui/react\";",
      "import { LuFolder, LuSquareCheck, LuUser } from \"react-icons/lu\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Tabs.Root defaultValue=\"members\">",
      "      <Tabs.List>",
      "        <Tabs.Trigger value=\"members\">",
      "          <LuUser />",
      "          Members",
      "        </Tabs.Trigger>",
      "        <Tabs.Trigger value=\"projects\">",
      "          <LuFolder />",
      "          Projects",
      "        </Tabs.Trigger>",
      "        <Tabs.Trigger value=\"tasks\">",
      "          <LuSquareCheck />",
      "          Settings",
      "        </Tabs.Trigger>",
      "      </Tabs.List>",
      "      <Tabs.Content value=\"members\">Manage your team members</Tabs.Content>",
      "      <Tabs.Content value=\"projects\">Manage your projects</Tabs.Content>",
      "      <Tabs.Content value=\"tasks\">",
      "        Manage your tasks for freelancers",
      "      </Tabs.Content>",
      "    </Tabs.Root>",
      "  );",
      "};",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI tab component."
  },
  "Chakra Table": {
    "prefix": "chak-table",
    "body": [
      "import { Table } from \"@chakra-ui/react\";",
      "",
      "const Demo = () => {",
      "  return (",
      "    <Table.Root size=\"sm\">",
      "      <Table.Header>",
      "        <Table.Row>",
      "          <Table.ColumnHeader>Product</Table.ColumnHeader>",
      "          <Table.ColumnHeader>Category</Table.ColumnHeader>",
      "          <Table.ColumnHeader textAlign=\"end\">Price</Table.ColumnHeader>",
      "        </Table.Row>",
      "      </Table.Header>",
      "      <Table.Body>",
      "        {items.map((item) => (",
      "          <Table.Row key={item.id}>",
      "            <Table.Cell>{item.name}</Table.Cell>",
      "            <Table.Cell>{item.category}</Table.Cell>",
      "            <Table.Cell textAlign=\"end\">{item.price}</Table.Cell>",
      "          </Table.Row>",
      "        ))}",
      "      </Table.Body>",
      "    </Table.Root>",
      "  );",
      "};",
      "",
      "const items = [",
      "  { id: 1, name: \"Laptop\", category: \"Electronics\", price: 999.99 },",
      "  { id: 2, name: \"Coffee Maker\", category: \"Home Appliances\", price: 49.99 },",
      "  { id: 3, name: \"Desk Chair\", category: \"Furniture\", price: 150.0 },",
      "  { id: 4, name: \"Smartphone\", category: \"Electronics\", price: 799.99 },",
      "  { id: 5, name: \"Headphones\", category: \"Accessories\", price: 199.99 }",
      "];",
      "",
      "export default Demo;"
    ],
    "description": "A ChakraUI table component."
  },
  "MUI Accordion": {
    "prefix": "mui-accordion",
    "body": [
      "import * as React from 'react';",
      "import Accordion from '@mui/material/Accordion';",
      "import AccordionActions from '@mui/material/AccordionActions';",
      "import AccordionSummary from '@mui/material/AccordionSummary';",
      "import AccordionDetails from '@mui/material/AccordionDetails';",
      "import Typography from '@mui/material/Typography';",
      "import ExpandMoreIcon from '@mui/icons-material/ExpandMore';",
      "import Button from '@mui/material/Button';",
      "",
      "export default function AccordionUsage() {",
      "  return (",
      "    <div>",
      "      <Accordion>",
      "        <AccordionSummary",
      "          expandIcon={<ExpandMoreIcon />}",
      "          aria-controls=\"panel1-content\"",
      "          id=\"panel1-header\"",
      "        >",
      "          <Typography component=\"span\">Accordion 1</Typography>",
      "        </AccordionSummary>",
      "        <AccordionDetails>",
      "          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse",
      "          malesuada lacus ex, sit amet blandit leo lobortis eget.",
      "        </AccordionDetails>",
      "      </Accordion>",
      "      <Accordion>",
      "        <AccordionSummary",
      "          expandIcon={<ExpandMoreIcon />}",
      "          aria-controls=\"panel2-content\"",
      "          id=\"panel2-header\"",
      "        >",
      "          <Typography component=\"span\">Accordion 2</Typography>",
      "        </AccordionSummary>",
      "        <AccordionDetails>",
      "          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse",
      "          malesuada lacus ex, sit amet blandit leo lobortis eget.",
      "        </AccordionDetails>",
      "      </Accordion>",
      "      <Accordion defaultExpanded>",
      "        <AccordionSummary",
      "          expandIcon={<ExpandMoreIcon />}",
      "          aria-controls=\"panel3-content\"",
      "          id=\"panel3-header\"",
      "        >",
      "          <Typography component=\"span\">Accordion Actions</Typography>",
      "        </AccordionSummary>",
      "        <AccordionDetails>",
      "          Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse",
      "          malesuada lacus ex, sit amet blandit leo lobortis eget.",
      "        </AccordionDetails>",
      "        <AccordionActions>",
      "          <Button>Cancel</Button>",
      "          <Button>Agree</Button>",
      "        </AccordionActions>",
      "      </Accordion>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "Basic MUI Accordion component."
  },
  "MUI Alert with severity props": {
    "prefix": "mui-alert",
    "body": [
      "import * as React from 'react';",
      "import Alert from '@mui/material/Alert';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function BasicAlerts() {",
      "  return (",
      "    <Stack sx={{ width: '100%' }} spacing={2}>",
      "      <Alert severity=\"success\">This is a success Alert.</Alert>",
      "      <Alert severity=\"info\">This is an info Alert.</Alert>",
      "      <Alert severity=\"warning\">This is a warning Alert.</Alert>",
      "      <Alert severity=\"error\">This is an error Alert.</Alert>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "Basic MUI Alerts component with different severity levels."
  },
  "MUI Alert with filled-variant props": {
    "prefix": "mui-alert",
    "body": [
      "import * as React from 'react';",
      "import Alert from '@mui/material/Alert';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function FilledAlerts() {",
      "  return (",
      "    <Stack sx={{ width: '100%' }} spacing={2}>",
      "      <Alert variant=\"filled\" severity=\"success\">",
      "        This is a filled success Alert.",
      "      </Alert>",
      "      <Alert variant=\"filled\" severity=\"info\">",
      "        This is a filled info Alert.",
      "      </Alert>",
      "      <Alert variant=\"filled\" severity=\"warning\">",
      "        This is a filled warning Alert.",
      "      </Alert>",
      "      <Alert variant=\"filled\" severity=\"error\">",
      "        This is a filled error Alert.",
      "      </Alert>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Filled Alerts component with different severity levels."
  },
  "MUI Alert with outline-variant props": {
    "prefix": "mui-alert",
    "body": [
      "import * as React from 'react';",
      "import Alert from '@mui/material/Alert';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function OutlinedAlerts() {",
      "  return (",
      "    <Stack sx={{ width: '100%' }} spacing={2}>",
      "      <Alert variant=\"outlined\" severity=\"success\">",
      "        This is an outlined success Alert.",
      "      </Alert>",
      "      <Alert variant=\"outlined\" severity=\"info\">",
      "        This is an outlined info Alert.",
      "      </Alert>",
      "      <Alert variant=\"outlined\" severity=\"warning\">",
      "        This is an outlined warning Alert.",
      "      </Alert>",
      "      <Alert variant=\"outlined\" severity=\"error\">",
      "        This is an outlined error Alert.",
      "      </Alert>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Outlined Alerts component with different severity levels."
  },
  "MUI Alert with action prop": {
    "prefix": "mui-alert",
    "body": [
      "import * as React from 'react';",
      "import Alert from '@mui/material/Alert';",
      "import Button from '@mui/material/Button';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function ActionAlerts() {",
      "  return (",
      "    <Stack sx={{ width: '100%' }} spacing={2}>",
      "      <Alert severity=\"warning\" onClose={() => {}}>",
      "        This Alert displays the default close icon.",
      "      </Alert>",
      "      <Alert",
      "        severity=\"success\"",
      "        action={",
      "          <Button color=\"inherit\" size=\"small\">",
      "            UNDO",
      "          </Button>",
      "        }",
      "      >",
      "        This Alert uses a Button component for its action.",
      "      </Alert>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Action Alerts component with a close icon and button action."
  },
  "MUI Image Avatar": {
    "prefix": "mui-avatar",
    "body": [
      "import * as React from 'react';",
      "import Avatar from '@mui/material/Avatar';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function ImageAvatars() {",
      "  return (",
      "    <Stack direction=\"row\" spacing={2}>",
      "      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />",
      "      <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />",
      "      <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Image Avatar component."
  },
  "MUI Letter Avatar": {
    "prefix": "mui-avatar",
    "body": [
      "import * as React from 'react';",
      "import Avatar from '@mui/material/Avatar';",
      "import Stack from '@mui/material/Stack';",
      "import { deepOrange, deepPurple } from '@mui/material/colors';",
      "",
      "export default function LetterAvatars() {",
      "  return (",
      "    <Stack direction=\"row\" spacing={2}>",
      "      <Avatar>H</Avatar>",
      "      <Avatar sx={{ bgcolor: deepOrange[500] }}>N</Avatar>",
      "      <Avatar sx={{ bgcolor: deepPurple[500] }}>OP</Avatar>",
      "    </Stack>",
      "  ),",
      "}"
    ],
    "description": "MUI Letter Avatar component."
  },
  "MUI Icon Avatar": {
    "prefix": "mui-avatar",
    "body": [
      "import * as React from 'react';",
      "import { green, pink } from '@mui/material/colors';",
      "import Avatar from '@mui/material/Avatar';",
      "import Stack from '@mui/material/Stack';",
      "import FolderIcon from '@mui/icons-material/Folder';",
      "import PageviewIcon from '@mui/icons-material/Pageview';",
      "import AssignmentIcon from '@mui/icons-material/Assignment';",
      "",
      "export default function IconAvatars() {",
      "  return (",
      "    <Stack direction=\"row\" spacing={2}>",
      "      <Avatar>",
      "        <FolderIcon />",
      "      </Avatar>",
      "      <Avatar sx={{ bgcolor: pink[500] }}>",
      "        <PageviewIcon />",
      "      </Avatar>",
      "      <Avatar sx={{ bgcolor: green[500] }}>",
      "        <AssignmentIcon />",
      "      </Avatar>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Icon Avatar component."
  },
  "MUI Grouped Avatar": {
    "prefix": "mui-avatar",
    "body": [
      "import * as React from 'react';",
      "import Avatar from '@mui/material/Avatar';",
      "import AvatarGroup from '@mui/material/AvatarGroup';",
      "",
      "export default function GroupAvatars() {",
      "  return (",
      "    <AvatarGroup max={4}>",
      "      <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />",
      "      <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />",
      "      <Avatar alt=\"Cindy Baker\" src=\"/static/images/avatar/3.jpg\" />",
      "      <Avatar alt=\"Agnes Walker\" src=\"/static/images/avatar/4.jpg\" />",
      "      <Avatar alt=\"Trevor Henderson\" src=\"/static/images/avatar/5.jpg\" />",
      "    </AvatarGroup>",
      "  );",
      "}"
    ],
    "description": "MUI Grouped Avatar component with a maximum display of 4 avatars."
  },
  "MUI Avatar with badge": {
    "prefix": "mui-avatar",
    "body": [
      "import * as React from 'react';",
      "import { styled } from '@mui/material/styles';",
      "import Badge from '@mui/material/Badge';",
      "import Avatar from '@mui/material/Avatar';",
      "import Stack from '@mui/material/Stack';",
      "",
      "const StyledBadge = styled(Badge)(({ theme }) => ({",
      "  '& .MuiBadge-badge': {",
      "    backgroundColor: '#44b700',",
      "    color: '#44b700',",
      "    boxShadow: `0 0 0 2px ${theme.palette.background.paper}`,",
      "    '&::after': {",
      "      position: 'absolute',",
      "      top: 0,",
      "      left: 0,",
      "      width: '100%',",
      "      height: '100%',",
      "      borderRadius: '50%',",
      "      animation: 'ripple 1.2s infinite ease-in-out',",
      "      border: '1px solid currentColor',",
      "      content: '\"\"',",
      "    },",
      "  },",
      "  '@keyframes ripple': {",
      "    '0%': {",
      "      transform: 'scale(.8)',",
      "      opacity: 1,",
      "    },",
      "    '100%': {",
      "      transform: 'scale(2.4)',",
      "      opacity: 0,",
      "    },",
      "  },",
      "}));",
      "",
      "const SmallAvatar = styled(Avatar)(({ theme }) => ({",
      "  width: 22,",
      "  height: 22,",
      "  border: `2px solid ${theme.palette.background.paper}`",
      "}));",
      "",
      "export default function BadgeAvatars() {",
      "  return (",
      "    <Stack direction=\"row\" spacing={2}>",
      "      <StyledBadge",
      "        overlap=\"circular\"",
      "        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}",
      "        variant=\"dot\"",
      "      >",
      "        <Avatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />",
      "      </StyledBadge>",
      "      <Badge",
      "        overlap=\"circular\"",
      "        anchorOrigin={{ vertical: 'bottom', horizontal: 'right' }}",
      "        badgeContent={",
      "          <SmallAvatar alt=\"Remy Sharp\" src=\"/static/images/avatar/1.jpg\" />",
      "        }",
      "      >",
      "        <Avatar alt=\"Travis Howard\" src=\"/static/images/avatar/2.jpg\" />",
      "      </Badge>",
      "    </Stack>"
    ],
    "description": "MUI Avatar component with badge."
  },
  "MUI Badge": {
    "prefix": "mui-badge",
    "body": [
      "import * as React from 'react';",
      "import Badge from '@mui/material/Badge';",
      "import Stack from '@mui/material/Stack';",
      "import MailIcon from '@mui/icons-material/Mail';",
      "",
      "export default function SimpleBadge() {",
      "  return (",
      "    <Stack spacing={2} direction=\"row\">",
      "      <Badge badgeContent={4} color=\"primary\">",
      "        <MailIcon color=\"action\" />",
      "      </Badge>",
      "      <Badge badgeContent={4} color=\"secondary\">",
      "        <MailIcon color=\"action\" />",
      "      </Badge>",
      "      <Badge badgeContent={4} color=\"success\">",
      "        <MailIcon color=\"action\" />",
      "      </Badge>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Simple Badge component with different color variations."
  },
  "MUI Simple Breadcrumb": {
    "prefix": "mui-breadcrumb",
    "body": [
      "import * as React from 'react';",
      "import Breadcrumbs from '@mui/material/Breadcrumbs';",
      "import Link from '@mui/material/Link';",
      "",
      "export default function ActiveLastBreadcrumb() {",
      "  return (",
      "    <div role=\"presentation\">",
      "      <Breadcrumbs aria-label=\"breadcrumb\">",
      "        <Link underline=\"hover\" color=\"inherit\" href=\"/\">",
      "          MUI",
      "        </Link>",
      "        <Link",
      "          underline=\"hover\"",
      "          color=\"inherit\"",
      "          href=\"/material-ui/getting-started/installation/\"",
      "        >",
      "          Core",
      "        </Link>",
      "        <Link",
      "          underline=\"hover\"",
      "          color=\"text.primary\"",
      "          href=\"/material-ui/react-breadcrumbs/\"",
      "          aria-current=\"page\"",
      "        >",
      "          Breadcrumbs",
      "        </Link>",
      "      </Breadcrumbs>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Breadcrumbs component with active last breadcrumb."
  },
  "MUI Breadcrumb with icons": {
    "prefix": "mui-breadcrumb",
    "body": [
      "import * as React from 'react';",
      "import Typography from '@mui/material/Typography';",
      "import Breadcrumbs from '@mui/material/Breadcrumbs';",
      "import Link from '@mui/material/Link';",
      "import HomeIcon from '@mui/icons-material/Home';",
      "import WhatshotIcon from '@mui/icons-material/Whatshot';",
      "import GrainIcon from '@mui/icons-material/Grain';",
      "",
      "export default function IconBreadcrumbs() {",
      "  return (",
      "    <div role=\"presentation\">",
      "      <Breadcrumbs aria-label=\"breadcrumb\">",
      "        <Link",
      "          underline=\"hover\"",
      "          sx={{ display: 'flex', alignItems: 'center' }}",
      "          color=\"inherit\"",
      "          href=\"/\"",
      "        >",
      "          <HomeIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />",
      "          MUI",
      "        </Link>",
      "        <Link",
      "          underline=\"hover\"",
      "          sx={{ display: 'flex', alignItems: 'center' }}",
      "          color=\"inherit\"",
      "          href=\"/material-ui/getting-started/installation/\"",
      "        >",
      "          <WhatshotIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />",
      "          Core",
      "        </Link>",
      "        <Typography",
      "          sx={{ color: 'text.primary', display: 'flex', alignItems: 'center' }}",
      "        >",
      "          <GrainIcon sx={{ mr: 0.5 }} fontSize=\"inherit\" />",
      "          Breadcrumb",
      "        </Typography>",
      "      </Breadcrumbs>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Breadcrumbs component with icons for navigation."
  },
  "MUI Collapsed Breadcrumb": {
    "prefix": "mui-breadcrumb",
    "body": [
      "/* eslint-disable jsx-a11y/anchor-is-valid */",
      "import * as React from 'react';",
      "import Breadcrumbs from '@mui/material/Breadcrumbs';",
      "import Typography from '@mui/material/Typography';",
      "import Link from '@mui/material/Link';",
      "",
      "export default function CollapsedBreadcrumbs() {",
      "  return (",
      "    <div role=\"presentation\">",
      "      <Breadcrumbs maxItems={2} aria-label=\"breadcrumb\">",
      "        <Link underline=\"hover\" color=\"inherit\" href=\"#\">",
      "          Home",
      "        </Link>",
      "        <Link underline=\"hover\" color=\"inherit\" href=\"#\">",
      "          Catalog",
      "        </Link>",
      "        <Link underline=\"hover\" color=\"inherit\" href=\"#\">",
      "          Accessories",
      "        </Link>",
      "        <Link underline=\"hover\" color=\"inherit\" href=\"#\">",
      "          New Collection",
      "        </Link>",
      "        <Typography sx={{ color: 'text.primary' }}>Belts</Typography>",
      "      </Breadcrumbs>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Collapsed Breadcrumbs component with maxItems limit."
  },
  "MUI Button with variant, color & size prop": {
    "prefix": "mui-btn",
    "body": [
      "import * as React from 'react';",
      "import Stack from '@mui/material/Stack';",
      "import Button from '@mui/material/Button';",
      "",
      "export default function BasicButtons() {",
      "  return (",
      "    <Stack spacing={2} direction=\"row\">",
      "      <Button variant=\"text\" size=\"small\" color=\"secondary\">Text</Button>",
      "      <Button variant=\"contained\" size=\"medium\" color=\"success\">Contained</Button>",
      "      <Button variant=\"outlined\" size=\"large\" color=\"error\">Outlined</Button>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Button component with variant, color, and size prop."
  },
  "MUI Button with icon": {
    "prefix": "mui-btn",
    "body": [
      "import * as React from 'react';",
      "import Button from '@mui/material/Button';",
      "import DeleteIcon from '@mui/icons-material/Delete';",
      "import SendIcon from '@mui/icons-material/Send';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function IconLabelButtons() {",
      "  return (",
      "    <Stack direction=\"row\" spacing={2}>",
      "      <Button variant=\"outlined\" startIcon={<DeleteIcon />}>",
      "        Delete",
      "      </Button>",
      "      <Button variant=\"contained\" endIcon={<SendIcon />}>",
      "        Send",
      "      </Button>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Button component with icon."
  },
  "MUI Button with loading state": {
    "prefix": "mui-btn",
    "body": [
      "import * as React from 'react';",
      "import Button from '@mui/material/Button';",
      "import SaveIcon from '@mui/icons-material/Save';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function LoadingButtons() {",
      "  return (",
      "    <Stack spacing={2}>",
      "      <Stack direction=\"row\" spacing={2}>",
      "        <Button loading variant=\"outlined\">",
      "          Submit",
      "        </Button>",
      "        <Button loading loadingIndicator=\"Loading…\" variant=\"outlined\">",
      "          Fetch data",
      "        </Button>",
      "        <Button",
      "          loading",
      "          loadingPosition=\"start\"",
      "          startIcon={<SaveIcon />}",
      "          variant=\"outlined\"",
      "        >",
      "          Save",
      "        </Button>",
      "      </Stack>",
      "      <Button",
      "        fullWidth",
      "        loading",
      "        loadingPosition=\"start\"",
      "        startIcon={<SaveIcon />}",
      "        variant=\"outlined\"",
      "      >",
      "        Full width",
      "      </Button>",
      "      <Button",
      "        fullWidth",
      "        loading",
      "        loadingPosition=\"end\"",
      "        endIcon={<SaveIcon />}",
      "        variant=\"outlined\"",
      "      >",
      "        Full width",
      "      </Button>",
      "      <Stack direction=\"row\" spacing={2}>",
      "        <Button loading variant=\"outlined\" loadingPosition=\"start\">",
      "          Submit",
      "        </Button>",
      "        <Button loading variant=\"outlined\" loadingPosition=\"end\">",
      "          Submit",
      "        </Button>",
      "        <Button",
      "          loading",
      "          variant=\"outlined\"",
      "          loadingPosition=\"end\"",
      "          startIcon={<SaveIcon />}",
      "        >",
      "          Save",
      "        </Button>",
      "      </Stack>",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Button component with loading state."
  },
  "MUI Card": {
    "prefix": "mui-card",
    "body": [
      "import * as React from 'react';",
      "import Card from '@mui/material/Card';",
      "import CardActions from '@mui/material/CardActions';",
      "import CardContent from '@mui/material/CardContent';",
      "import CardMedia from '@mui/material/CardMedia';",
      "import Button from '@mui/material/Button';",
      "import Typography from '@mui/material/Typography';",
      "",
      "export default function MediaCard() {",
      "  return (",
      "    <Card sx={{ maxWidth: 345 }}>",
      "      <CardMedia",
      "        sx={{ height: 140 }}",
      "        image=\"/static/images/cards/contemplative-reptile.jpg\"",
      "        title=\"green iguana\"",
      "      />",
      "      <CardContent>",
      "        <Typography gutterBottom variant=\"h5\" component=\"div\">",
      "          Lizard",
      "        </Typography>",
      "        <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>",
      "          Lizards are a widespread group of squamate reptiles, with over 6,000",
      "          species, ranging across all continents except Antarctica",
      "        </Typography>",
      "      </CardContent>",
      "      <CardActions>",
      "        <Button size=\"small\">Share</Button>",
      "        <Button size=\"small\">Learn More</Button>",
      "      </CardActions>",
      "    </Card>",
      "  );",
      "}"
    ],
    "description": "MUI Media Card component with image, text, and actions."
  },
  "MUI Basic Checkbox": {
    "prefix": "mui-checkbox",
    "body": [
      "import * as React from 'react';",
      "import Checkbox from '@mui/material/Checkbox';",
      "",
      "const label = { inputProps: { 'aria-label': 'Checkbox demo' } };",
      "",
      "export default function Checkboxes() {",
      "  return (",
      "    <div>",
      "      <Checkbox {...label} defaultChecked size=\"small\" color=\"secondary\" />",
      "      <Checkbox {...label} color=\"success\" />",
      "      <Checkbox {...label} disabled />",
      "      <Checkbox {...label} disabled checked />",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Checkbox component."
  },
  "MUI Checkbox with Label": {
    "prefix": "mui-checkbox",
    "body": [
      "import * as React from 'react';",
      "import FormGroup from '@mui/material/FormGroup';",
      "import FormControlLabel from '@mui/material/FormControlLabel';",
      "import Checkbox from '@mui/material/Checkbox';",
      "",
      "export default function CheckboxLabels() {",
      "  return (",
      "    <FormGroup>",
      "      <FormControlLabel control={<Checkbox defaultChecked />} label=\"Label\" />",
      "      <FormControlLabel required control={<Checkbox />} label=\"Required\" />",
      "      <FormControlLabel disabled control={<Checkbox />} label=\"Disabled\" />",
      "    </FormGroup>",
      "  );",
      "}"
    ],
    "description": "MUI Simple Checkbox component with label."
  },
  "MUI Basic Dropdown": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import Button from '@mui/material/Button';",
      "import Menu from '@mui/material/Menu';",
      "import MenuItem from '@mui/material/MenuItem';",
      "",
      "export default function BasicMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState(null);",
      "  const open = Boolean(anchorEl);",
      "  const handleClick = (event) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <div>",
      "      <Button",
      "        id=\"basic-button\"",
      "        aria-controls={open ? 'basic-menu' : undefined}",
      "        aria-haspopup=\"true\"",
      "        aria-expanded={open ? 'true' : undefined}",
      "        onClick={handleClick}",
      "      >",
      "        Dashboard",
      "      </Button>",
      "      <Menu",
      "        id=\"basic-menu\"",
      "        anchorEl={anchorEl}",
      "        open={open}",
      "        onClose={handleClose}",
      "        MenuListProps={{",
      "          'aria-labelledby': 'basic-button',",
      "        }}",
      "      >",
      "        <MenuItem onClick={handleClose}>Profile</MenuItem>",
      "        <MenuItem onClick={handleClose}>My account</MenuItem>",
      "        <MenuItem onClick={handleClose}>Logout</MenuItem>",
      "      </Menu>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Dropdown Menu component."
  },
  "MUI Basic Dropdown (tsx version)": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import Button from '@mui/material/Button';",
      "import Menu from '@mui/material/Menu';",
      "import MenuItem from '@mui/material/MenuItem';",
      "",
      "export default function BasicMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);",
      "  const open = Boolean(anchorEl);",
      "  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <div>",
      "      <Button",
      "        id=\"basic-button\"",
      "        aria-controls={open ? 'basic-menu' : undefined}",
      "        aria-haspopup=\"true\"",
      "        aria-expanded={open ? 'true' : undefined}",
      "        onClick={handleClick}",
      "      >",
      "        Dashboard",
      "      </Button>",
      "      <Menu",
      "        id=\"basic-menu\"",
      "        anchorEl={anchorEl}",
      "        open={open}",
      "        onClose={handleClose}",
      "        MenuListProps={{",
      "          'aria-labelledby': 'basic-button',",
      "        }}",
      "      >",
      "        <MenuItem onClick={handleClose}>Profile</MenuItem>",
      "        <MenuItem onClick={handleClose}>My account</MenuItem>",
      "        <MenuItem onClick={handleClose}>Logout</MenuItem>",
      "      </Menu>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Dropdown Menu component (tsx version)."
  },
  "MUI Icon Dropdown": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import Button from '@mui/material/Button';",
      "import Divider from '@mui/material/Divider';",
      "import Paper from '@mui/material/Paper';",
      "import Menu from '@mui/material/Menu';",
      "import MenuList from '@mui/material/MenuList';",
      "import MenuItem from '@mui/material/MenuItem';",
      "import ListItemText from '@mui/material/ListItemText';",
      "import ListItemIcon from '@mui/material/ListItemIcon';",
      "import Typography from '@mui/material/Typography';",
      "import ContentCut from '@mui/icons-material/ContentCut';",
      "import ContentCopy from '@mui/icons-material/ContentCopy';",
      "import ContentPaste from '@mui/icons-material/ContentPaste';",
      "import Cloud from '@mui/icons-material/Cloud';",
      "",
      "export default function IconMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState(null);",
      "  const open = Boolean(anchorEl);",
      "",
      "  const handleClick = (event) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <div>",
      "      <Button",
      "        id=\"dashboard-button\"",
      "        aria-controls={open ? 'icon-menu' : undefined}",
      "        aria-haspopup=\"true\"",
      "        aria-expanded={open ? 'true' : undefined}",
      "        onClick={handleClick}",
      "      >",
      "        Dashboard",
      "      </Button>",
      "      <Menu",
      "        id=\"icon-menu\"",
      "        anchorEl={anchorEl}",
      "        open={open}",
      "        onClose={handleClose}",
      "      >",
      "        <Paper sx={{ width: 320, maxWidth: '100%' }}>",
      "          <MenuList>",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <ContentCut fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Cut</ListItemText>",
      "              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>",
      "                ⌘X",
      "              </Typography>",
      "            </MenuItem>",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <ContentCopy fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Copy</ListItemText>",
      "              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>",
      "                ⌘C",
      "              </Typography>",
      "            </MenuItem>",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <ContentPaste fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Paste</ListItemText>",
      "              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>",
      "                ⌘V",
      "              </Typography>",
      "            </MenuItem>",
      "            <Divider />",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <Cloud fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Web Clipboard</ListItemText>",
      "            </MenuItem>",
      "          </MenuList>",
      "        </Paper>",
      "      </Menu>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Icon Dropdown Menu component."
  },
  "MUI Icon Dropdown (tsx version)": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import Button from '@mui/material/Button';",
      "import Divider from '@mui/material/Divider';",
      "import Paper from '@mui/material/Paper';",
      "import Menu from '@mui/material/Menu';",
      "import MenuList from '@mui/material/MenuList';",
      "import MenuItem from '@mui/material/MenuItem';",
      "import ListItemText from '@mui/material/ListItemText';",
      "import ListItemIcon from '@mui/material/ListItemIcon';",
      "import Typography from '@mui/material/Typography';",
      "import ContentCut from '@mui/icons-material/ContentCut';",
      "import ContentCopy from '@mui/icons-material/ContentCopy';",
      "import ContentPaste from '@mui/icons-material/ContentPaste';",
      "import Cloud from '@mui/icons-material/Cloud';",
      "",
      "export default function IconMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);",
      "  const open = Boolean(anchorEl);",
      "",
      "  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <div>",
      "      <Button",
      "        id=\"dashboard-button\"",
      "        aria-controls={open ? 'icon-menu' : undefined}",
      "        aria-haspopup=\"true\"",
      "        aria-expanded={open ? 'true' : undefined}",
      "        onClick={handleClick}",
      "      >",
      "        Dashboard",
      "      </Button>",
      "      <Menu",
      "        id=\"icon-menu\"",
      "        anchorEl={anchorEl}",
      "        open={open}",
      "        onClose={handleClose}",
      "      >",
      "        <Paper sx={{ width: 320, maxWidth: '100%' }}>",
      "          <MenuList>",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <ContentCut fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Cut</ListItemText>",
      "              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>",
      "                ⌘X",
      "              </Typography>",
      "            </MenuItem>",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <ContentCopy fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Copy</ListItemText>",
      "              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>",
      "                ⌘C",
      "              </Typography>",
      "            </MenuItem>",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <ContentPaste fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Paste</ListItemText>",
      "              <Typography variant=\"body2\" sx={{ color: 'text.secondary' }}>",
      "                ⌘V",
      "              </Typography>",
      "            </MenuItem>",
      "            <Divider />",
      "            <MenuItem onClick={handleClose}>",
      "              <ListItemIcon>",
      "                <Cloud fontSize=\"small\" />",
      "              </ListItemIcon>",
      "              <ListItemText>Web Clipboard</ListItemText>",
      "            </MenuItem>",
      "          </MenuList>",
      "        </Paper>",
      "      </Menu>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Icon Dropdown Menu component (tsx version)."
  },
  "MUI Selected Dropdown": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import List from '@mui/material/List';",
      "import ListItemButton from '@mui/material/ListItemButton';",
      "import ListItemText from '@mui/material/ListItemText';",
      "import MenuItem from '@mui/material/MenuItem';",
      "import Menu from '@mui/material/Menu';",
      "",
      "const options = [",
      "  'Show some love to MUI',",
      "  'Show all notification content',",
      "  'Hide sensitive notification content',",
      "  'Hide all notification content'",
      "];",
      "",
      "export default function SimpleListMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState(null);",
      "  const [selectedIndex, setSelectedIndex] = React.useState(1);",
      "  const open = Boolean(anchorEl);",
      "",
      "  const handleClickListItem = (event) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleMenuItemClick = (event, index) => {",
      "    setSelectedIndex(index);",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <div>",
      "      <List",
      "        component=\"nav\"",
      "        aria-label=\"Device settings\"",
      "        sx={{ bgcolor: 'background.paper' }}",
      "      >",
      "        <ListItemButton",
      "          id=\"lock-button\"",
      "          aria-haspopup=\"listbox\"",
      "          aria-controls=\"lock-menu\"",
      "          aria-label=\"when device is locked\"",
      "          aria-expanded={open ? 'true' : undefined}",
      "          onClick={handleClickListItem}",
      "        >",
      "          <ListItemText",
      "            primary=\"When device is locked\"",
      "            secondary={options[selectedIndex]}",
      "          />",
      "        </ListItemButton>",
      "      </List>",
      "      <Menu",
      "        id=\"lock-menu\"",
      "        anchorEl={anchorEl}",
      "        open={open}",
      "        onClose={handleClose}",
      "        MenuListProps={{",
      "          'aria-labelledby': 'lock-button',",
      "          role: 'listbox'",
      "        }}",
      "      >",
      "        {options.map((option, index) => (",
      "          <MenuItem",
      "            key={option}",
      "            disabled={index === 0}",
      "            selected={index === selectedIndex}",
      "            onClick={(event) => handleMenuItemClick(event, index)}",
      "          >",
      "            {option}",
      "          </MenuItem>",
      "        ))}",
      "      </Menu>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Selected Dropdown Menu component."
  },
  "MUI Selected Dropdown (tsx version)": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import List from '@mui/material/List';",
      "import ListItemButton from '@mui/material/ListItemButton';",
      "import ListItemText from '@mui/material/ListItemText';",
      "import MenuItem from '@mui/material/MenuItem';",
      "import Menu from '@mui/material/Menu';",
      "",
      "const options = [",
      "  'Show some love to MUI',",
      "  'Show all notification content',",
      "  'Hide sensitive notification content',",
      "  'Hide all notification content'",
      "];",
      "",
      "export default function SimpleListMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);",
      "  const [selectedIndex, setSelectedIndex] = React.useState(1);",
      "  const open = Boolean(anchorEl);",
      "",
      "  const handleClickListItem = (event: React.MouseEvent<HTMLDivElement>) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleMenuItemClick = (event: React.MouseEvent<HTMLElement>, index: number) => {",
      "    setSelectedIndex(index);",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <div>",
      "      <List",
      "        component=\"nav\"",
      "        aria-label=\"Device settings\"",
      "        sx={{ bgcolor: 'background.paper' }}",
      "      >",
      "        <ListItemButton",
      "          id=\"lock-button\"",
      "          aria-haspopup=\"listbox\"",
      "          aria-controls=\"lock-menu\"",
      "          aria-label=\"when device is locked\"",
      "          aria-expanded={open ? 'true' : undefined}",
      "          onClick={handleClickListItem}",
      "        >",
      "          <ListItemText",
      "            primary=\"When device is locked\"",
      "            secondary={options[selectedIndex]}",
      "          />",
      "        </ListItemButton>",
      "      </List>",
      "      <Menu",
      "        id=\"lock-menu\"",
      "        anchorEl={anchorEl}",
      "        open={open}",
      "        onClose={handleClose}",
      "        MenuListProps={{",
      "          'aria-labelledby': 'lock-button',",
      "          role: 'listbox'",
      "        }}",
      "      >",
      "        {options.map((option, index) => (",
      "          <MenuItem",
      "            key={option}",
      "            disabled={index === 0}",
      "            selected={index === selectedIndex}",
      "            onClick={(event) => handleMenuItemClick(event, index)}",
      "          >",
      "            {option}",
      "          </MenuItem>",
      "        ))}",
      "      </Menu>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Selected Dropdown Menu component (tsx version)."
  },
  "MUI Account Dropdown": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import Box from '@mui/material/Box';",
      "import Avatar from '@mui/material/Avatar';",
      "import Menu from '@mui/material/Menu';",
      "import MenuItem from '@mui/material/MenuItem';",
      "import ListItemIcon from '@mui/material/ListItemIcon';",
      "import Divider from '@mui/material/Divider';",
      "import IconButton from '@mui/material/IconButton';",
      "import Typography from '@mui/material/Typography';",
      "import Tooltip from '@mui/material/Tooltip';",
      "import PersonAdd from '@mui/icons-material/PersonAdd';",
      "import Settings from '@mui/icons-material/Settings';",
      "import Logout from '@mui/icons-material/Logout';",
      "",
      "export default function AccountMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState(null);",
      "  const open = Boolean(anchorEl);",
      "",
      "  const handleClick = (event) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <React.Fragment>",
      "      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>",
      "        <Typography sx={{ minWidth: 100 }}>Contact</Typography>",
      "        <Typography sx={{ minWidth: 100 }}>Profile</Typography>",
      "        <Tooltip title=\"Account settings\">",
      "          <IconButton",
      "            onClick={handleClick}",
      "            size=\"small\"",
      "            sx={{ ml: 2 }}",
      "            aria-controls={open ? 'account-menu' : undefined}",
      "            aria-haspopup=\"true\"",
      "            aria-expanded={open ? 'true' : undefined}",
      "          >",
      "            <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>",
      "          </IconButton>",
      "        </Tooltip>",
      "      </Box>",
      "      <Menu",
      "        anchorEl={anchorEl}",
      "        id=\"account-menu\"",
      "        open={open}",
      "        onClose={handleClose}",
      "        onClick={handleClose}",
      "        slotProps={{",
      "          paper: {",
      "            elevation: 0,",
      "            sx: {",
      "              overflow: 'visible',",
      "              filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',",
      "              mt: 1.5,",
      "              '& .MuiAvatar-root': {",
      "                width: 32,",
      "                height: 32,",
      "                ml: -0.5,",
      "                mr: 1",
      "              },",
      "              '&::before': {",
      "                content: '\"\"',",
      "                display: 'block',",
      "                position: 'absolute',",
      "                top: 0,",
      "                right: 14,",
      "                width: 10,",
      "                height: 10,",
      "                bgcolor: 'background.paper',",
      "                transform: 'translateY(-50%) rotate(45deg)',",
      "                zIndex: 0",
      "              }",
      "            }",
      "          }",
      "        }}",
      "        transformOrigin={{ horizontal: 'right', vertical: 'top' }}",
      "        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}",
      "      >",
      "        <MenuItem onClick={handleClose}>",
      "          <Avatar /> Profile",
      "        </MenuItem>",
      "        <MenuItem onClick={handleClose}>",
      "          <Avatar /> My account",
      "        </MenuItem>",
      "        <Divider />",
      "        <MenuItem onClick={handleClose}>",
      "          <ListItemIcon>",
      "            <PersonAdd fontSize=\"small\" />",
      "          </ListItemIcon>",
      "          Add another account",
      "        </MenuItem>",
      "        <MenuItem onClick={handleClose}>",
      "          <ListItemIcon>",
      "            <Settings fontSize=\"small\" />",
      "          </ListItemIcon>",
      "          Settings",
      "        </MenuItem>",
      "        <MenuItem onClick={handleClose}>",
      "          <ListItemIcon>",
      "            <Logout fontSize=\"small\" />",
      "          </ListItemIcon>",
      "          Logout",
      "        </MenuItem>",
      "      </Menu>",
      "    </React.Fragment>",
      "  );",
      "}"
    ],
    "description": "MUI Account Dropdown Menu component."
  },
  "MUI Account Dropdown (tsx version)": {
    "prefix": "mui-dropdown",
    "body": [
      "import * as React from 'react';",
      "import Box from '@mui/material/Box';",
      "import Avatar from '@mui/material/Avatar';",
      "import Menu from '@mui/material/Menu';",
      "import MenuItem from '@mui/material/MenuItem';",
      "import ListItemIcon from '@mui/material/ListItemIcon';",
      "import Divider from '@mui/material/Divider';",
      "import IconButton from '@mui/material/IconButton';",
      "import Typography from '@mui/material/Typography';",
      "import Tooltip from '@mui/material/Tooltip';",
      "import PersonAdd from '@mui/icons-material/PersonAdd';",
      "import Settings from '@mui/icons-material/Settings';",
      "import Logout from '@mui/icons-material/Logout';",
      "",
      "export default function AccountMenu() {",
      "  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);",
      "  const open = Boolean(anchorEl);",
      "",
      "  const handleClick = (event: React.MouseEvent<HTMLElement>) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  return (",
      "    <React.Fragment>",
      "      <Box sx={{ display: 'flex', alignItems: 'center', textAlign: 'center' }}>",
      "        <Typography sx={{ minWidth: 100 }}>Contact</Typography>",
      "        <Typography sx={{ minWidth: 100 }}>Profile</Typography>",
      "        <Tooltip title=\"Account settings\">",
      "          <IconButton",
      "            onClick={handleClick}",
      "            size=\"small\"",
      "            sx={{ ml: 2 }}",
      "            aria-controls={open ? 'account-menu' : undefined}",
      "            aria-haspopup=\"true\"",
      "            aria-expanded={open ? 'true' : undefined}",
      "          >",
      "            <Avatar sx={{ width: 32, height: 32 }}>M</Avatar>",
      "          </IconButton>",
      "        </Tooltip>",
      "      </Box>",
      "      <Menu",
      "        anchorEl={anchorEl}",
      "        id=\"account-menu\"",
      "        open={open}",
      "        onClose={handleClose}",
      "        onClick={handleClose}",
      "        slotProps={{",
      "          paper: {",
      "            elevation: 0,",
      "            sx: {",
      "              overflow: 'visible',",
      "              filter: 'drop-shadow(0px 2px 8px rgba(0,0,0,0.32))',",
      "              mt: 1.5,",
      "              '& .MuiAvatar-root': {",
      "                width: 32,",
      "                height: 32,",
      "                ml: -0.5,",
      "                mr: 1",
      "              },",
      "              '&::before': {",
      "                content: '\"\"',",
      "                display: 'block',",
      "                position: 'absolute',",
      "                top: 0,",
      "                right: 14,",
      "                width: 10,",
      "                height: 10,",
      "                bgcolor: 'background.paper',",
      "                transform: 'translateY(-50%) rotate(45deg)',",
      "                zIndex: 0",
      "              }",
      "            }",
      "          }",
      "        }}",
      "        transformOrigin={{ horizontal: 'right', vertical: 'top' }}",
      "        anchorOrigin={{ horizontal: 'right', vertical: 'bottom' }}",
      "      >",
      "        <MenuItem onClick={handleClose}>",
      "          <Avatar /> Profile",
      "        </MenuItem>",
      "        <MenuItem onClick={handleClose}>",
      "          <Avatar /> My account",
      "        </MenuItem>",
      "        <Divider />",
      "        <MenuItem onClick={handleClose}>",
      "          <ListItemIcon>",
      "            <PersonAdd fontSize=\"small\" />",
      "          </ListItemIcon>",
      "          Add another account",
      "        </MenuItem>",
      "        <MenuItem onClick={handleClose}>",
      "          <ListItemIcon>",
      "            <Settings fontSize=\"small\" />",
      "          </ListItemIcon>",
      "          Settings",
      "        </MenuItem>",
      "        <MenuItem onClick={handleClose}>",
      "          <ListItemIcon>",
      "            <Logout fontSize=\"small\" />",
      "          </ListItemIcon>",
      "          Logout",
      "        </MenuItem>",
      "      </Menu>",
      "    </React.Fragment>",
      "  );",
      "}"
    ],
    "description": "MUI Account Dropdown Menu component (tsx version)."
  },
  "MUI Input": {
    "prefix": "mui-input",
    "body": [
      "import * as React from 'react';",
      "import Box from '@mui/material/Box';",
      "import TextField from '@mui/material/TextField';",
      "",
      "export default function BasicTextFields() {",
      "  return (",
      "    <Box",
      "      component=\"form\"",
      "      sx={{ '& > :not(style)': { m: 1, width: '25ch' } }}",
      "      noValidate",
      "      autoComplete=\"off\"",
      "    >",
      "      <TextField id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" color=\"secondary\" />",
      "      <TextField id=\"filled-basic\" label=\"Filled\" variant=\"filled\" color=\"success\" />",
      "      <TextField id=\"standard-basic\" label=\"Standard\" variant=\"standard\" color=\"warning\" />",
      "      <TextField required fullWidth id=\"outlined-basic\" label=\"Outlined\" variant=\"outlined\" color=\"secondary\" type=\"password\" />",
      "      <TextField error fullWidth id=\"filled-basic\" label=\"Filled\" variant=\"filled\" color=\"success\" />",
      "      <TextField multiline fullWidth id=\"standard-basic\" label=\"Standard\" variant=\"standard\" color=\"warning\" />",
      "    </Box>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Input component with different variants, type and color, error, required, fullwidth and multiline prop."
  },
  "MUI Input with icon": {
    "prefix": "mui-input",
    "body": [
      "import * as React from 'react';",
      "import Box from '@mui/material/Box';",
      "import Input from '@mui/material/Input';",
      "import InputLabel from '@mui/material/InputLabel';",
      "import InputAdornment from '@mui/material/InputAdornment';",
      "import FormControl from '@mui/material/FormControl';",
      "import TextField from '@mui/material/TextField';",
      "import AccountCircle from '@mui/icons-material/AccountCircle';",
      "",
      "export default function InputWithIcon() {",
      "  return (",
      "    <Box sx={{ '& > :not(style)': { m: 1 } }}>",
      "      <FormControl variant=\"standard\">",
      "        <InputLabel htmlFor=\"input-with-icon-adornment\">",
      "          With a start adornment",
      "        </InputLabel>",
      "        <Input",
      "          id=\"input-with-icon-adornment\"",
      "          startAdornment={",
      "            <InputAdornment position=\"start\">",
      "              <AccountCircle />",
      "            </InputAdornment>",
      "          }",
      "        />",
      "      </FormControl>",
      "      <TextField",
      "        id=\"input-with-icon-textfield\"",
      "        label=\"TextField\"",
      "        slotProps={{",
      "          input: {",
      "            startAdornment: (",
      "              <InputAdornment position=\"start\">",
      "                <AccountCircle />",
      "              </InputAdornment>",
      "            ),",
      "          },",
      "        }}",
      "        variant=\"standard\"",
      "      />",
      "      <Box sx={{ display: 'flex', alignItems: 'flex-end' }}>",
      "        <AccountCircle sx={{ color: 'action.active', mr: 1, my: 0.5 }} />",
      "        <TextField id=\"input-with-sx\" label=\"With sx\" variant=\"standard\" />",
      "      </Box>",
      "    </Box>",
      "  );",
      "}"
    ],
    "description": "MUI Input component with icons as adornments."
  },
  "MUI Basic Modal": {
    "prefix": "mui-modal",
    "body": [
      "import * as React from 'react';",
      "import Box from '@mui/material/Box';",
      "import Button from '@mui/material/Button';",
      "import Typography from '@mui/material/Typography';",
      "import Modal from '@mui/material/Modal';",
      "",
      "const style = {",
      "  position: 'absolute',",
      "  top: '50%',",
      "  left: '50%',",
      "  transform: 'translate(-50%, -50%)',",
      "  width: 400,",
      "  bgcolor: 'background.paper',",
      "  border: '2px solid #000',",
      "  boxShadow: 24,",
      "  p: 4,",
      "};",
      "",
      "export default function BasicModal() {",
      "  const [open, setOpen] = React.useState(false);",
      "  const handleOpen = () => setOpen(true);",
      "  const handleClose = () => setOpen(false);",
      "",
      "  return (",
      "    <div>",
      "      <Button onClick={handleOpen}>Open modal</Button>",
      "      <Modal",
      "        open={open}",
      "        onClose={handleClose}",
      "        aria-labelledby=\"modal-modal-title\"",
      "        aria-describedby=\"modal-modal-description\"",
      "      >",
      "        <Box sx={style}>",
      "          <Typography id=\"modal-modal-title\" variant=\"h6\" component=\"h2\">",
      "            Text in a modal",
      "          </Typography>",
      "          <Typography id=\"modal-modal-description\" sx={{ mt: 2 }}>",
      "            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.",
      "          </Typography>",
      "        </Box>",
      "      </Modal>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Modal component."
  },
  "MUI Nested Modal": {
    "prefix": "mui-modal",
    "body": [
      "import * as React from 'react';",
      "import Box from '@mui/material/Box';",
      "import Modal from '@mui/material/Modal';",
      "import Button from '@mui/material/Button';",
      "",
      "const style = {",
      "  position: 'absolute',",
      "  top: '50%',",
      "  left: '50%',",
      "  transform: 'translate(-50%, -50%)',",
      "  width: 400,",
      "  bgcolor: 'background.paper',",
      "  border: '2px solid #000',",
      "  boxShadow: 24,",
      "  pt: 2,",
      "  px: 4,",
      "  pb: 3,",
      "};",
      "",
      "function ChildModal() {",
      "  const [open, setOpen] = React.useState(false);",
      "  const handleOpen = () => { setOpen(true); };",
      "  const handleClose = () => { setOpen(false); };",
      "",
      "  return (",
      "    <React.Fragment>",
      "      <Button onClick={handleOpen}>Open Child Modal</Button>",
      "      <Modal",
      "        open={open}",
      "        onClose={handleClose}",
      "        aria-labelledby=\"child-modal-title\"",
      "        aria-describedby=\"child-modal-description\"",
      "      >",
      "        <Box sx={{ ...style, width: 200 }}>",
      "          <h2 id=\"child-modal-title\">Text in a child modal</h2>",
      "          <p id=\"child-modal-description\">",
      "            Lorem ipsum, dolor sit amet consectetur adipisicing elit.",
      "          </p>",
      "          <Button onClick={handleClose}>Close Child Modal</Button>",
      "        </Box>",
      "      </Modal>",
      "    </React.Fragment>",
      "  );",
      "}",
      "",
      "export default function NestedModal() {",
      "  const [open, setOpen] = React.useState(false);",
      "  const handleOpen = () => { setOpen(true); };",
      "  const handleClose = () => { setOpen(false); };",
      "",
      "  return (",
      "    <div>",
      "      <Button onClick={handleOpen}>Open modal</Button>",
      "      <Modal",
      "        open={open}",
      "        onClose={handleClose}",
      "        aria-labelledby=\"parent-modal-title\"",
      "        aria-describedby=\"parent-modal-description\"",
      "      >",
      "        <Box sx={{ ...style, width: 400 }}>",
      "          <h2 id=\"parent-modal-title\">Text in a modal</h2>",
      "          <p id=\"parent-modal-description\">",
      "            Duis mollis, est non commodo luctus, nisi erat porttitor ligula.",
      "          </p>",
      "          <ChildModal />",
      "        </Box>",
      "      </Modal>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Nested Modal component with a parent and child modal."
  },
  "MUI Basic Pagination": {
    "prefix": "mui-pagination",
    "body": [
      "import * as React from 'react';",
      "import Pagination from '@mui/material/Pagination';",
      "import Stack from '@mui/material/Stack';",
      "",
      "export default function BasicPagination() {",
      "  return (",
      "    <Stack spacing={2}>",
      "      <Pagination count={10} size=\"small\" />",
      "      <Pagination count={10} size=\"large\" />",
      "      <Pagination count={10} color=\"primary\" />",
      "      <Pagination count={10} color=\"secondary\" />",
      "      <Pagination count={10} disabled />",
      "      <Pagination count={10} variant=\"outlined\" color=\"primary\" />",
      "      <Pagination count={10} variant=\"outlined\" color=\"secondary\" />",
      "      <Pagination count={10} shape=\"rounded\" color=\"primary\" />",
      "      <Pagination count={10} shape=\"rounded\" color=\"secondary\" />",
      "      <Pagination count={10} variant=\"outlined\" shape=\"rounded\" color=\"primary\" />",
      "      <Pagination count={10} variant=\"outlined\" shape=\"rounded\" color=\"secondary\" />",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Pagination component with different color, size, shape and variant options and a disabled state."
  },
  "MUI Basic Popover": {
    "prefix": "mui-popover",
    "body": [
      "import * as React from 'react';",
      "import Popover from '@mui/material/Popover';",
      "import Typography from '@mui/material/Typography';",
      "import Button from '@mui/material/Button';",
      "",
      "export default function BasicPopover() {",
      "  const [anchorEl, setAnchorEl] = React.useState(null);",
      "",
      "  const handleClick = (event) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  const open = Boolean(anchorEl);",
      "  const id = open ? 'simple-popover' : undefined;",
      "",
      "  return (",
      "    <div>",
      "      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>",
      "        Open Popover",
      "      </Button>",
      "      <Popover",
      "        id={id}",
      "        open={open}",
      "        anchorEl={anchorEl}",
      "        onClose={handleClose}",
      "        anchorOrigin={{",
      "          vertical: 'bottom',",
      "          horizontal: 'left',",
      "        }}",
      "      >",
      "        <Typography sx={{ p: 2 }}>The content of the Popover.</Typography>",
      "      </Popover>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Popover component with an interactive button trigger."
  },
  "MUI Basic Popover (tsx version)": {
    "prefix": "mui-popover",
    "body": [
      "import * as React from 'react';",
      "import Popover from '@mui/material/Popover';",
      "import Typography from '@mui/material/Typography';",
      "import Button from '@mui/material/Button';",
      "",
      "export default function BasicPopover() {",
      "  const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);",
      "",
      "  const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {",
      "    setAnchorEl(event.currentTarget);",
      "  };",
      "",
      "  const handleClose = () => {",
      "    setAnchorEl(null);",
      "  };",
      "",
      "  const open = Boolean(anchorEl);",
      "  const id = open ? 'simple-popover' : undefined;",
      "",
      "  return (",
      "    <div>",
      "      <Button aria-describedby={id} variant=\"contained\" onClick={handleClick}>",
      "        Open Popover",
      "      </Button>",
      "      <Popover",
      "        id={id}",
      "        open={open}",
      "        anchorEl={anchorEl}",
      "        onClose={handleClose}",
      "        anchorOrigin={{",
      "          vertical: 'bottom',",
      "          horizontal: 'left',",
      "        }}",
      "      >",
      "        <Typography sx={{ p: 2 }}>The content of the Popover.</Typography>",
      "      </Popover>",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Popover component with an interactive button trigger (tsx version)."
  },
  "MUI Progressbar": {
    "prefix": "mui-progress",
    "body": [
      "import * as React from 'react';",
      "import Stack from '@mui/material/Stack';",
      "import LinearProgress from '@mui/material/LinearProgress';",
      "",
      "export default function LinearColor() {",
      "  return (",
      "    <Stack sx={{ width: '100%', color: 'grey.500' }} spacing={2}>",
      "      <LinearProgress />",
      "      <LinearProgress color=\"secondary\" />",
      "      <LinearProgress color=\"success\" />",
      "      <LinearProgress color=\"inherit\" />",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Linear Progress component with different colors."
  },
  "MUI Spinner": {
    "prefix": "mui-spinner",
    "body": [
      "import * as React from 'react';",
      "import Stack from '@mui/material/Stack';",
      "import CircularProgress from '@mui/material/CircularProgress';",
      "",
      "export default function CircularColor() {",
      "  return (",
      "    <Stack sx={{ color: 'grey.500' }} spacing={2} direction=\"row\">",
      "      <CircularProgress  />",
      "      <CircularProgress color=\"secondary\" size=\"30px\" />",
      "      <CircularProgress color=\"success\" size={40}  />",
      "      <CircularProgress color=\"inherit\" size=\"3rem\"  />",
      "    </Stack>",
      "  );",
      "}"
    ],
    "description": "MUI Spinner component with different colors and sizes."
  },
  "MUI Basic Switch": {
    "prefix": "mui-switch",
    "body": [
      "import * as React from 'react';",
      "import Switch from '@mui/material/Switch';",
      "",
      "const label = { inputProps: { 'aria-label': 'Switch demo' } };",
      "",
      "export default function BasicSwitches() {",
      "  return (",
      "    <div>",
      "      <Switch {...label} defaultChecked size=\"small\" />",
      "      <Switch {...label} defaultChecked />",
      "      <Switch {...label} defaultChecked color=\"secondary\" size=\"small\" />",
      "      <Switch {...label} defaultChecked color=\"warning\" />",
      "      <Switch {...label} />",
      "      <Switch {...label} disabled defaultChecked />",
      "      <Switch {...label} disabled />",
      "    </div>",
      "  );",
      "}"
    ],
    "description": "MUI Switch component with different states."
  },
  "MUI Label Switch": {
    "prefix": "mui-switch",
    "body": [
      "import * as React from 'react';",
      "import FormGroup from '@mui/material/FormGroup';",
      "import FormControlLabel from '@mui/material/FormControlLabel';",
      "import Switch from '@mui/material/Switch';",
      "",
      "export default function SwitchLabels() {",
      "  return (",
      "    <FormGroup>",
      "      <FormControlLabel control={<Switch defaultChecked />} label=\"Label\" />",
      "      <FormControlLabel required control={<Switch />} label=\"Required\" />",
      "      <FormControlLabel disabled control={<Switch />} label=\"Disabled\" />",
      "    </FormGroup>",
      "  );",
      "}"
    ],
    "description": "MUI Switch component with labels and different states."
  },
  "MUI Basic Tab": {
    "prefix": "mui-tab",
    "body": [
      "import * as React from 'react';",
      "import PropTypes from 'prop-types';",
      "import Tabs from '@mui/material/Tabs';",
      "import Tab from '@mui/material/Tab';",
      "import Box from '@mui/material/Box';",
      "",
      "function CustomTabPanel(props) {",
      "  const { children, value, index, ...other } = props;",
      "",
      "  return (",
      "    <div",
      "      role=\"tabpanel\"",
      "      hidden={value !== index}",
      "      id={`simple-tabpanel-${index}`}",
      "      aria-labelledby={`simple-tab-${index}`}",
      "      {...other}",
      "    >",
      "      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}",
      "    </div>",
      "  );",
      "}",
      "",
      "CustomTabPanel.propTypes = {",
      "  children: PropTypes.node,",
      "  index: PropTypes.number.isRequired,",
      "  value: PropTypes.number.isRequired,",
      "};",
      "",
      "function a11yProps(index) {",
      "  return {",
      "    id: `simple-tab-${index}`,",
      "    'aria-controls': `simple-tabpanel-${index}`",
      "  };",
      "}",
      "",
      "export default function BasicTabs() {",
      "  const [value, setValue] = React.useState(0);",
      "",
      "  const handleChange = (event, newValue) => {",
      "    setValue(newValue);",
      "  };",
      "",
      "  return (",
      "    <Box sx={{ width: '100%' }}>",
      "      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>",
      "        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">",
      "          <Tab label=\"Item One\" {...a11yProps(0)} />",
      "          <Tab label=\"Item Two\" {...a11yProps(1)} />",
      "          <Tab label=\"Item Three\" {...a11yProps(2)} />",
      "        </Tabs>",
      "      </Box>",
      "      <CustomTabPanel value={value} index={0}>",
      "        Item One",
      "      </CustomTabPanel>",
      "      <CustomTabPanel value={value} index={1}>",
      "        Item Two",
      "      </CustomTabPanel>",
      "      <CustomTabPanel value={value} index={2}>",
      "        Item Three",
      "      </CustomTabPanel>",
      "    </Box>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Tabs component with accessibility props and custom tab panels."
  },
  "MUI Basic Tab (tsx version)": {
    "prefix": "mui-tab",
    "body": [
      "import * as React from 'react';",
      "import Tabs from '@mui/material/Tabs';",
      "import Tab from '@mui/material/Tab';",
      "import Box from '@mui/material/Box';",
      "",
      "interface TabPanelProps {",
      "  children?: React.ReactNode;",
      "  index: number;",
      "  value: number;",
      "}",
      "",
      "function CustomTabPanel(props: TabPanelProps) {",
      "  const { children, value, index, ...other } = props;",
      "",
      "  return (",
      "    <div",
      "      role=\"tabpanel\"",
      "      hidden={value !== index}",
      "      id={`simple-tabpanel-${index}`}",
      "      aria-labelledby={`simple-tab-${index}`}",
      "      {...other}",
      "    >",
      "      {value === index && <Box sx={{ p: 3 }}>{children}</Box>}",
      "    </div>",
      "  );",
      "}",
      "",
      "function a11yProps(index: number) {",
      "  return {",
      "    id: `simple-tab-${index}`,",
      "    'aria-controls': `simple-tabpanel-${index}`",
      "  };",
      "}",
      "",
      "export default function BasicTabs() {",
      "  const [value, setValue] = React.useState(0);",
      "",
      "  const handleChange = (event: React.SyntheticEvent, newValue: number) => {",
      "    setValue(newValue);",
      "  };",
      "",
      "  return (",
      "    <Box sx={{ width: '100%' }}>",
      "      <Box sx={{ borderBottom: 1, borderColor: 'divider' }}>",
      "        <Tabs value={value} onChange={handleChange} aria-label=\"basic tabs example\">",
      "          <Tab label=\"Item One\" {...a11yProps(0)} />",
      "          <Tab label=\"Item Two\" {...a11yProps(1)} />",
      "          <Tab label=\"Item Three\" {...a11yProps(2)} />",
      "        </Tabs>",
      "      </Box>",
      "      <CustomTabPanel value={value} index={0}>",
      "        Item One",
      "      </CustomTabPanel>",
      "      <CustomTabPanel value={value} index={1}>",
      "        Item Two",
      "      </CustomTabPanel>",
      "      <CustomTabPanel value={value} index={2}>",
      "        Item Three",
      "      </CustomTabPanel>",
      "    </Box>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Tabs component with TypeScript, accessibility props, and custom tab panels."
  },
  "MUI Basic Table": {
    "prefix": "mui-table",
    "body": [
      "import * as React from 'react';",
      "import Table from '@mui/material/Table';",
      "import TableBody from '@mui/material/TableBody';",
      "import TableCell from '@mui/material/TableCell';",
      "import TableContainer from '@mui/material/TableContainer';",
      "import TableHead from '@mui/material/TableHead';",
      "import TableRow from '@mui/material/TableRow';",
      "import Paper from '@mui/material/Paper';",
      "",
      "function createData(name, calories, fat, carbs, protein) {",
      "  return { name, calories, fat, carbs, protein };",
      "}",
      "",
      "const rows = [",
      "  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),",
      "  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),",
      "  createData('Eclair', 262, 16.0, 24, 6.0),",
      "  createData('Cupcake', 305, 3.7, 67, 4.3),",
      "  createData('Gingerbread', 356, 16.0, 49, 3.9)",
      "];",
      "",
      "export default function BasicTable() {",
      "  return (",
      "    <TableContainer component={Paper}>",
      "      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">",
      "        <TableHead>",
      "          <TableRow>",
      "            <TableCell>Dessert (100g serving)</TableCell>",
      "            <TableCell align=\"right\">Calories</TableCell>",
      "            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>",
      "            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>",
      "            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>",
      "          </TableRow>",
      "        </TableHead>",
      "        <TableBody>",
      "          {rows.map((row) => (",
      "            <TableRow",
      "              key={row.name}",
      "              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}",
      "            >",
      "              <TableCell component=\"th\" scope=\"row\">",
      "                {row.name}",
      "              </TableCell>",
      "              <TableCell align=\"right\">{row.calories}</TableCell>",
      "              <TableCell align=\"right\">{row.fat}</TableCell>",
      "              <TableCell align=\"right\">{row.carbs}</TableCell>",
      "              <TableCell align=\"right\">{row.protein}</TableCell>",
      "            </TableRow>",
      "          ))}",
      "        </TableBody>",
      "      </Table>",
      "    </TableContainer>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Table component with sample data for desserts, using Material UI's Table components."
  },
  "MUI Basic Table (tsx version)": {
    "prefix": "mui-table",
    "body": [
      "import * as React from 'react';",
      "import Table from '@mui/material/Table';",
      "import TableBody from '@mui/material/TableBody';",
      "import TableCell from '@mui/material/TableCell';",
      "import TableContainer from '@mui/material/TableContainer';",
      "import TableHead from '@mui/material/TableHead';",
      "import TableRow from '@mui/material/TableRow';",
      "import Paper from '@mui/material/Paper';",
      "",
      "function createData(",
      "  name: string,",
      "  calories: number,",
      "  fat: number,",
      "  carbs: number,",
      "  protein: number",
      ") {",
      "  return { name, calories, fat, carbs, protein };",
      "}",
      "",
      "const rows = [",
      "  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),",
      "  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),",
      "  createData('Eclair', 262, 16.0, 24, 6.0),",
      "  createData('Cupcake', 305, 3.7, 67, 4.3),",
      "  createData('Gingerbread', 356, 16.0, 49, 3.9)",
      "];",
      "",
      "export default function BasicTable() {",
      "  return (",
      "    <TableContainer component={Paper}>",
      "      <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">",
      "        <TableHead>",
      "          <TableRow>",
      "            <TableCell>Dessert (100g serving)</TableCell>",
      "            <TableCell align=\"right\">Calories</TableCell>",
      "            <TableCell align=\"right\">Fat&nbsp;(g)</TableCell>",
      "            <TableCell align=\"right\">Carbs&nbsp;(g)</TableCell>",
      "            <TableCell align=\"right\">Protein&nbsp;(g)</TableCell>",
      "          </TableRow>",
      "        </TableHead>",
      "        <TableBody>",
      "          {rows.map((row) => (",
      "            <TableRow",
      "              key={row.name}",
      "              sx={{ '&:last-child td, &:last-child th': { border: 0 } }}",
      "            >",
      "              <TableCell component=\"th\" scope=\"row\">",
      "                {row.name}",
      "              </TableCell>",
      "              <TableCell align=\"right\">{row.calories}</TableCell>",
      "              <TableCell align=\"right\">{row.fat}</TableCell>",
      "              <TableCell align=\"right\">{row.carbs}</TableCell>",
      "              <TableCell align=\"right\">{row.protein}</TableCell>",
      "            </TableRow>",
      "          ))}",
      "        </TableBody>",
      "      </Table>",
      "    </TableContainer>",
      "  );",
      "}"
    ],
    "description": "MUI Basic Table component with TypeScript, displaying nutritional values for desserts."
  },
  "MUI Data Table": {
    "prefix": "mui-table",
    "body": [
      "import * as React from 'react';",
      "import { DataGrid } from '@mui/x-data-grid';",
      "import Paper from '@mui/material/Paper';",
      "",
      "const columns = [",
      "  { field: 'id', headerName: 'ID', width: 70 },",
      "  { field: 'firstName', headerName: 'First name', width: 130 },",
      "  { field: 'lastName', headerName: 'Last name', width: 130 },",
      "  {",
      "    field: 'age',",
      "    headerName: 'Age',",
      "    type: 'number',",
      "    width: 90,",
      "  },",
      "  {",
      "    field: 'fullName',",
      "    headerName: 'Full name',",
      "    description: 'This column has a value getter and is not sortable.',",
      "    sortable: false,",
      "    width: 160,",
      "    valueGetter: (value, row) => `${row.firstName || ''} ${row.lastName || ''}`",
      "  }",
      "];",
      "",
      "const rows = [",
      "  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },",
      "  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },",
      "  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },",
      "  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },",
      "  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },",
      "  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },",
      "  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },",
      "  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },",
      "  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 }",
      "];",
      "",
      "const paginationModel = { page: 0, pageSize: 5 };",
      "",
      "export default function DataTable() {",
      "  return (",
      "    <Paper sx={{ height: 400, width: '100%' }}>",
      "      <DataGrid",
      "        rows={rows}",
      "        columns={columns}",
      "        initialState={{ pagination: { paginationModel } }}",
      "        pageSizeOptions={[5, 10]}",
      "        checkboxSelection",
      "        sx={{ border: 0 }}",
      "      />",
      "    </Paper>",
      "  );",
      "}"
    ],
    "description": "MUI DataGrid Table with pagination, checkbox selection, and full name value getter."
  },
  "MUI Data Table (tsx version)": {
    "prefix": "mui-table",
    "body": [
      "import * as React from 'react';",
      "import { DataGrid, GridColDef } from '@mui/x-data-grid';",
      "import Paper from '@mui/material/Paper';",
      "",
      "const columns: GridColDef[] = [",
      "  { field: 'id', headerName: 'ID', width: 70 },",
      "  { field: 'firstName', headerName: 'First name', width: 130 },",
      "  { field: 'lastName', headerName: 'Last name', width: 130 },",
      "  {",
      "    field: 'age',",
      "    headerName: 'Age',",
      "    type: 'number',",
      "    width: 90,",
      "  },",
      "  {",
      "    field: 'fullName',",
      "    headerName: 'Full name',",
      "    description: 'This column has a value getter and is not sortable.',",
      "    sortable: false,",
      "    width: 160,",
      "    valueGetter: (value, row) => `${row.firstName || ''} ${row.lastName || ''}`",
      "  }",
      "];",
      "",
      "const rows = [",
      "  { id: 1, lastName: 'Snow', firstName: 'Jon', age: 35 },",
      "  { id: 2, lastName: 'Lannister', firstName: 'Cersei', age: 42 },",
      "  { id: 3, lastName: 'Lannister', firstName: 'Jaime', age: 45 },",
      "  { id: 4, lastName: 'Stark', firstName: 'Arya', age: 16 },",
      "  { id: 5, lastName: 'Targaryen', firstName: 'Daenerys', age: null },",
      "  { id: 6, lastName: 'Melisandre', firstName: null, age: 150 },",
      "  { id: 7, lastName: 'Clifford', firstName: 'Ferrara', age: 44 },",
      "  { id: 8, lastName: 'Frances', firstName: 'Rossini', age: 36 },",
      "  { id: 9, lastName: 'Roxie', firstName: 'Harvey', age: 65 }",
      "];",
      "",
      "const paginationModel = { page: 0, pageSize: 5 };",
      "",
      "export default function DataTable() {",
      "  return (",
      "    <Paper sx={{ height: 400, width: '100%' }}>",
      "      <DataGrid",
      "        rows={rows}",
      "        columns={columns}",
      "        initialState={{ pagination: { paginationModel } }}",
      "        pageSizeOptions={[5, 10]}",
      "        checkboxSelection",
      "        sx={{ border: 0 }}",
      "      />",
      "    </Paper>",
      "  );",
      "}"
    ],
    "description": "MUI DataGrid Table with pagination, checkbox selection, and full name value getter (tsx version)."
  },
  "DaisyUI Accordion using radio input": {
    "prefix": "dai-accordion",
    "body": [
      "import React from 'react';",
      "",
      "const Accordion = () => {",
      "  return (",
      "    <div className='space-y-2'>",
      "      <div className='collapse bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-1' defaultChecked />",
      "        <div className='collapse-title font-semibold'>How do I create an account?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Click the \"Sign Up\" button in the top right corner and follow the registration process.",
      "        </div>",
      "      </div>",
      "",
      "      <div className='collapse bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-1' />",
      "        <div className='collapse-title font-semibold'>I forgot my password. What should I do?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Click on \"Forgot Password\" on the login page and follow the instructions sent to your email.",
      "        </div>",
      "      </div>",
      "",
      "      <div className='collapse bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-1' />",
      "        <div className='collapse-title font-semibold'>How do I update my profile information?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Go to \"My Account\" settings and select \"Edit Profile\" to make changes.",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Accordion;"
    ],
    "description": "DiasyUI accordion component using radio input."
  },
  "DaisyUI Accordion with arrow icon": {
    "prefix": "dai-accordion",
    "body": [
      "import React from 'react';",
      "",
      "const Accordion = () => {",
      "  return (",
      "    <div>",
      "      <div className='collapse collapse-arrow bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-2' defaultChecked />",
      "        <div className='collapse-title font-semibold'>How do I create an account?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Click the 'Sign Up' button in the top right corner and follow the registration process.",
      "        </div>",
      "      </div>",
      "",
      "      <div className='collapse collapse-arrow bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-2' />",
      "        <div className='collapse-title font-semibold'>I forgot my password. What should I do?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Click on 'Forgot Password' on the login page and follow the instructions sent to your email.",
      "        </div>",
      "      </div>",
      "",
      "      <div className='collapse collapse-arrow bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-2' />",
      "        <div className='collapse-title font-semibold'>How do I update my profile information?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Go to 'My Account' settings and select 'Edit Profile' to make changes.",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Accordion;"
    ],
    "description": "DiasyUI accordion component with arrow icon."
  },
  "DaisyUI Accordion with plus/minus icon": {
    "prefix": "dai-accordion",
    "body": [
      "import React from 'react';",
      "",
      "const Accordion = () => {",
      "  return (",
      "      <div className='collapse collapse-plus bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-3' defaultChecked />",
      "        <div className='collapse-title font-semibold'>How do I create an account?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Click the 'Sign Up' button in the top right corner and follow the registration process.",
      "        </div>",
      "      </div>",
      "",
      "      <div className='collapse collapse-plus bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-3' />",
      "        <div className='collapse-title font-semibold'>I forgot my password. What should I do?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Click on 'Forgot Password' on the login page and follow the instructions sent to your email.",
      "        </div>",
      "      </div>",
      "",
      "      <div className='collapse collapse-plus bg-base-100 border border-base-300'>",
      "        <input type='radio' name='my-accordion-3' />",
      "        <div className='collapse-title font-semibold'>How do I update my profile information?</div>",
      "        <div className='collapse-content text-sm'>",
      "          Go to 'My Account' settings and select 'Edit Profile' to make changes.",
      "        </div>",
      "      </div>",
      "  );",
      "};",
      "",
      "export default Accordion;"
    ],
    "description": "DiasyUI accordion component with plus/minus icon."
  },
  "DaisyUI Basic Alert": {
    "prefix": "dai-alert",
    "body": [
      "import React from \"react\";",
      "",
      "const Alert = () => {",
      "  return (",
      "    <div role=\"alert\" className=\"alert\">",
      "      <svg",
      "        xmlns=\"http://www.w3.org/2000/svg\"",
      "        fill=\"none\"",
      "        viewBox=\"0 0 24 24\"",
      "        className=\"stroke-info h-6 w-6 shrink-0\"",
      "      >",
      "        <path",
      "          strokeLinecap=\"round\"",
      "          strokeLinejoin=\"round\"",
      "          strokeWidth=\"2\"",
      "          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"",
      "        ></path>",
      "      </svg>",
      "      <span>12 unread messages. Tap to see.</span>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A simple alert message component with an icon"
  },
  "DaisyUI Basic Alert with Button": {
    "prefix": "dai-alert",
    "body": [
      "import React from \"react\";",
      "",
      "const Alert = () => {",
      "  return (",
      "    <div role=\"alert\" className=\"alert alert-vertical sm:alert-horizontal\">",
      "      <svg",
      "        xmlns=\"http://www.w3.org/2000/svg\"",
      "        fill=\"none\"",
      "        viewBox=\"0 0 24 24\"",
      "        className=\"stroke-info h-6 w-6 shrink-0\"",
      "      >",
      "        <path",
      "          strokeLinecap=\"round\"",
      "          strokeLinejoin=\"round\"",
      "          strokeWidth=\"2\"",
      "          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"",
      "        ></path>",
      "      </svg>",
      "      <span>We use cookies for no reason.</span>",
      "      <div>",
      "        <button className=\"btn btn-sm\">Deny</button>",
      "        <button className=\"btn btn-sm btn-primary\">Accept</button>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A basic alert with vertical and horizontal responsiveness and button."
  },
  "DaisyUI Alert with title & description": {
    "prefix": "dai-alert",
    "body": [
      "import React from \"react\";",
      "",
      "const Alert = () => {",
      "  return (",
      "    <div role=\"alert\" className=\"alert alert-vertical sm:alert-horizontal\">",
      "      <svg",
      "        xmlns=\"http://www.w3.org/2000/svg\"",
      "        fill=\"none\"",
      "        viewBox=\"0 0 24 24\"",
      "        className=\"stroke-info h-6 w-6 shrink-0\"",
      "      >",
      "        <path",
      "          strokeLinecap=\"round\"",
      "          strokeLinejoin=\"round\"",
      "          strokeWidth=\"2\"",
      "          d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"",
      "        ></path>",
      "      </svg>",
      "      <div>",
      "        <h3 className=\"font-bold\">New message!</h3>",
      "        <div className=\"text-xs\">You have 1 unread message</div>",
      "      </div>",
      "      <button className=\"btn btn-sm\">See</button>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Alert;"
    ],
    "description": "A vertical and horizontal alert displaying a title and description with an action button."
  },
  "DaisyUI Alert with colors": {
    "prefix": "dai-alert",
    "body": [
      "import React from \"react\";",
      "",
      "const Alerts = () => {",
      "  return (",
      "    <>",
      "      <div role=\"alert\" className=\"alert alert-info\">",
      "        <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" className=\"h-6 w-6 shrink-0 stroke-current\">",
      "          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"></path>",
      "        </svg>",
      "        <span>New software update available.</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-success\">",
      "        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 shrink-0 stroke-current\" fill=\"none\" viewBox=\"0 0 24 24\">",
      "          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\" />",
      "        </svg>",
      "        <span>Your purchase has been confirmed!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-warning\">",
      "        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 shrink-0 stroke-current\" fill=\"none\" viewBox=\"0 0 24 24\">",
      "          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z\" />",
      "        </svg>",
      "        <span>Warning: Invalid email address!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-error\">",
      "        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-6 w-6 shrink-0 stroke-current\" fill=\"none\" viewBox=\"0 0 24 24\">",
      "          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z\" />",
      "        </svg>",
      "        <span>Error! Task failed successfully.</span>",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "export default Alerts;"
    ],
    "description": "A component with multiple alert messages (info, success, warning, and error)"
  },
  "DaisyUI Soft Style Alert": {
    "prefix": "dai-alert",
    "body": [
      "import React from \"react\";",
      "",
      "const SoftAlerts = () => {",
      "  return (",
      "    <>",
      "      <div role=\"alert\" className=\"alert alert-info alert-soft\">",
      "        <span>12 unread messages. Tap to see.</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-success alert-soft\">",
      "        <span>Your purchase has been confirmed!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-warning alert-soft\">",
      "        <span>Warning: Invalid email address!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-error alert-soft\">",
      "        <span>Error! Task failed successfully.</span>",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "export default SoftAlerts;"
    ],
    "description": "A component with multiple soft alert messages (info, success, warning, and error)"
  },
  "DaisyUI Outline Style Alert": {
    "prefix": "dai-alert",
    "body": [
      "import React from \"react\";",
      "",
      "const OutlineAlerts = () => {",
      "  return (",
      "    <>",
      "      <div role=\"alert\" className=\"alert alert-info alert-outline\">",
      "        <span>12 unread messages. Tap to see.</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-success alert-outline\">",
      "        <span>Your purchase has been confirmed!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-warning alert-outline\">",
      "        <span>Warning: Invalid email address!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-error alert-outline\">",
      "        <span>Error! Task failed successfully.</span>",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "export default OutlineAlerts;"
    ],
    "description": "A component with multiple outlined alert messages (info, success, warning, and error)"
  },
  "DaisyUI Dash Style Alert": {
    "prefix": "dai-alert",
    "body": [
      "import React from \"react\";",
      "",
      "const DashedAlerts = () => {",
      "  return (",
      "    <>",
      "      <div role=\"alert\" className=\"alert alert-info alert-dash\">",
      "        <span>12 unread messages. Tap to see.</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-success alert-dash\">",
      "        <span>Your purchase has been confirmed!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-warning alert-dash\">",
      "        <span>Warning: Invalid email address!</span>",
      "      </div>",
      "",
      "      <div role=\"alert\" className=\"alert alert-error alert-dash\">",
      "        <span>Error! Task failed successfully.</span>",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "export default DashedAlerts;"
    ],
    "description": "A component with multiple dashed alert messages (info, success, warning, and error)"
  },
  "DaisyUI Avatar": {
    "prefix": "dai-avatar",
    "body": [
      "import React from \"react\";",
      "",
      "const Avatar = () => {",
      "  return (",
      "    <>",
      "      <div className=\"avatar\">",
      "        <div className=\"w-24 rounded-xl\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" alt=\"Avatar 1\" />",
      "        </div>",
      "      </div>",
      "",
      "      <div className=\"avatar\">",
      "        <div className=\"w-24 rounded-full\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" alt=\"Avatar 2\" />",
      "        </div>",
      "      </div>",
      "",
      "      <div className=\"avatar\">",
      "        <div className=\"ring-primary ring-offset-base-100 w-24 rounded-full ring ring-offset-2\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" alt=\"Avatar 3\" />",
      "        </div>",
      "      </div>",
      "    </>",
      "  );",
      "};",
      "",
      "export default Avatar;"
    ],
    "description": "Different styles of avatars (rounded, square, with ring effect) in React."
  },
  "DaisyUI Avatar Group": {
    "prefix": "dai-avatar",
    "body": [
      "import React from \"react\";",
      "",
      "const AvatarGroup = () => {",
      "  return (",
      "    <div className=\"avatar-group -space-x-6\">",
      "      <div className=\"avatar\">",
      "        <div className=\"w-12\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" alt=\"Avatar 1\" />",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar\">",
      "        <div className=\"w-12\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" alt=\"Avatar 2\" />",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar\">",
      "        <div className=\"w-12\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" alt=\"Avatar 3\" />",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar\">",
      "        <div className=\"w-12\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" alt=\"Avatar 4\" />",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar avatar-placeholder\">",
      "        <div className=\"bg-neutral text-neutral-content w-12\">",
      "          <span>+99</span>",
      "        </div>",
      "       </div>",
      "     </div>",
      "  );",
      "};",
      "",
      "export default AvatarGroup;"
    ],
    "description": "Group of avatars with spacing in React."
  },
  "DaisyUI Avatar with presence indicator": {
    "prefix": "dai-avatar",
    "body": [
      "import React from \"react\";",
      "",
      "const AvatarStatus = () => {",
      "  return (",
      "    <div>",
      "      <div className=\"avatar avatar-online\">",
      "        <div className=\"w-24 rounded-full\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar avatar-offline\">",
      "        <div className=\"w-24 rounded-full\">",
      "          <img src=\"https://img.daisyui.com/images/stock/photo-1534528741775-53994a69daeb.webp\" />",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default AvatarStatus;"
    ],
    "description": "Avatar with online and offline status."
  },
  "DaisyUI Avatar Placeholder": {
    "prefix": "dai-avatar",
    "body": [
      "import React from \"react\";",
      "",
      "const AvatarPlaceholders = () => {",
      "  return (",
      "    <div>",
      "      <div className=\"avatar avatar-placeholder\">",
      "        <div className=\"bg-neutral text-neutral-content w-24 rounded-full\">",
      "          <span className=\"text-3xl\">D</span>",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar avatar-online avatar-placeholder\">",
      "        <div className=\"bg-neutral text-neutral-content w-16 rounded-full\">",
      "          <span className=\"text-xl\">AI</span>",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar avatar-placeholder\">",
      "        <div className=\"bg-neutral text-neutral-content w-12 rounded-full\">",
      "          <span>SY</span>",
      "        </div>",
      "      </div>",
      "      <div className=\"avatar avatar-placeholder\">",
      "        <div className=\"bg-neutral text-neutral-content w-8 rounded-full\">",
      "          <span className=\"text-xs\">UI</span>",
      "        </div>",
      "      </div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default AvatarPlaceholders;"
    ],
    "description": "Avatar placeholder components with different sizes and initials."
  },
  "DaisyUI Badge with colors": {
    "prefix": "dai-badge",
    "body": [
      "import React from \"react\";",
      "",
      "const Badges = () => {",
      "  return (",
      "    <div className=\"flex flex-wrap gap-2\">",
      "      <div className=\"badge badge-xs\">Badge</div>",
      "      <div className=\"badge badge-primary badge-sm\">Primary</div>",
      "      <div className=\"badge badge-secondary\">Secondary</div>",
      "      <div className=\"badge badge-accent\">Accent</div>",
      "      <div className=\"badge badge-neutral\">Neutral</div>",
      "      <div className=\"badge badge-info badge-lg\">Info</div>",
      "      <div className=\"badge badge-success\">Success</div>",
      "      <div className=\"badge badge-warning badge-lg\">Warning</div>",
      "      <div className=\"badge badge-error badge-xl\">Error</div>",
      "    </div>",
      "  );",
      "};",
      "",
      "export default Badges;"
    ],
    "description": "Different badge components with various styles."
  },
  "DaisyUI Basic Card": {
    "prefix": "dai-card",
    "body": [
      "const CardComponent = () => (",
      "  <div className=\"card bg-base-100 w-96 shadow-sm\">",
      "    <figure>",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp\"",
      "        alt=\"Shoes\" />",
      "    </figure>",
      "    <div className=\"card-body\">",
      "      <h2 className=\"card-title\">Card Title</h2>",
      "      <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>",
      "      <div className=\"card-actions justify-end\">",
      "        <button className=\"btn btn-primary\">Buy Now</button>",
      "      </div>",
      "    </div>",
      "  </div>",
      ");",
      "export default CardComponent;"
    ],
    "description": "A basic card component with an image, title, description, and button."
  },
  "DaisyUI Pricing Card": {
    "prefix": "dai-card",
    "body": [
      "const PricingCard = () => (",
      "  <div className=\"card w-96 bg-base-100 shadow-sm\">",
      "    <div className=\"card-body\">",
      "      <span className=\"badge badge-xs badge-warning\">Most Popular</span>",
      "      <div className=\"flex justify-between\">",
      "        <h2 className=\"text-3xl font-bold\">Premium</h2>",
      "        <span className=\"text-xl\">$29/mo</span>",
      "      </div>",
      "      <ul className=\"mt-6 flex flex-col gap-2 text-xs\">",
      "        <li>",
      "          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" /></svg>",
      "          <span>High-resolution image generation</span>",
      "        </li>",
      "        <li>",
      "          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" /></svg>",
      "          <span>Customizable style templates</span>",
      "        </li>",
      "        <li>",
      "          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" /></svg>",
      "          <span>Batch processing capabilities</span>",
      "        </li>",
      "        <li>",
      "          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"size-4 me-2 inline-block text-success\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" /></svg>",
      "          <span>AI-driven image enhancements</span>",
      "        </li>",
      "        <li className=\"opacity-50\">",
      "          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"size-4 me-2 inline-block text-base-content/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" /></svg>",
      "          <span className=\"line-through\">Seamless cloud integration</span>",
      "        </li>",
      "        <li className=\"opacity-50\">",
      "          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"size-4 me-2 inline-block text-base-content/50\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\"><path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M5 13l4 4L19 7\" /></svg>",
      "          <span className=\"line-through\">Real-time collaboration tools</span>",
      "        </li>",
      "      </ul>",
      "      <div className=\"mt-6\">",
      "        <button className=\"btn btn-primary btn-block\">Subscribe</button>",
      "      </div>",
      "    </div>",
      "  </div>",
      ");",
      "export default PricingCard;"
    ],
    "description": "A pricing card component with a title, description, and button."
  },
  "DaisyUI Card with Image Overlay": {
    "prefix": "dai-card",
    "body": [
      "const ImageCard = () => (",
      "  <div className=\"card bg-base-100 image-full w-96 shadow-sm\">",
      "    <figure>",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1606107557195-0e29a4b5b4aa.webp\"",
      "        alt=\"Shoes\"",
      "      />",
      "    </figure>",
      "    <div className=\"card-body\">",
      "      <h2 className=\"card-title\">Card Title</h2>",
      "      <p>A card component has a figure, a body part, and inside body there are title and actions parts</p>",
      "      <div className=\"card-actions justify-end\">",
      "        <button className=\"btn btn-primary\">Buy Now</button>",
      "      </div>",
      "    </div>",
      "  </div>",
      ");",
      "export default ImageCard;"
    ],
    "description": "A card component with an image overlay."
  },
  "DaisyUI Card with Side Image": {
    "prefix": "dai-card",
    "body": [
      "const MovieCard = () => (",
      "  <div className=\"card card-side bg-base-100 shadow-sm\">",
      "    <figure>",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1635805737707-575885ab0820.webp\"",
      "        alt=\"Movie\"",
      "      />",
      "    </figure>",
      "    <div className=\"card-body\">",
      "      <h2 className=\"card-title\">New movie is released!</h2>",
      "      <p>Click the button to watch on Jetflix app.</p>",
      "      <div className=\"card-actions justify-end\">",
      "        <button className=\"btn btn-primary\">Watch</button>",
      "      </div>",
      "    </div>",
      "  </div>",
      ");",
      "export default MovieCard;"
    ],
    "description": "A card component with a side image."
  },
  "DaisyUI Carousel(snap-to-start)": {
    "prefix": "dai-carousel",
    "body": [
      "const Carousel = () => (",
      "  <div className=\"carousel rounded-box\">",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "  </div>",
      ");",
      "export default Carousel;"
    ],
    "description": "A carousel component with images that snap to the start."
  },
  "DaisyUI Carousel(snap-to-center)": {
    "prefix": "dai-carousel",
    "body": [
      "const Carousel = () => (",
      "  <div className=\"carousel carousel-center rounded-box\">",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "  </div>",
      ");",
      "export default Carousel;"
    ],
    "description": "A carousel component with images that snap to the center."
  },
  "DaisyUI Carousel(snap-to-end)": {
    "prefix": "dai-carousel",
    "body": [
      "const Carousel = () => (",
      "  <div className=\"carousel carousel-end rounded-box\">",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "  </div>",
      ");",
      "export default Carousel;"
    ],
    "description": "A carousel component with images that snap to the end."
  },
  "DaisyUI Full Width Carousel": {
    "prefix": "dai-carousel",
    "body": [
      "const HorizontalCarousel = () => (",
      "  <div className=\"carousel rounded-box w-64\">",
      "    <div className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "  </div>",
      ");",
      "",
      "export default HorizontalCarousel;"
    ],
    "description": "Horizontal carousel component displaying a list of images."
  },
  "DaisyUI Half Width Carousel": {
    "prefix": "dai-carousel",
    "body": [
      "const HorizontalCarousel = () => (",
      "  <div className=\"carousel rounded-box w-96\">",
      "    <div className=\"carousel-item w-1/2\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-1/2\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-1/2\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-1/2\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-1/2\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-1/2\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item w-1/2\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"",
      "        alt=\"Burger\"",
      "        className=\"w-full\"",
      "      />",
      "    </div>",
      "  </div>",
      ");",
      "",
      "export default HorizontalCarousel;"
    ],
    "description": "Horizontal carousel component displaying a list of images."
  },
  "DaisyUI Vertical Carousel": {
    "prefix": "dai-carousel",
    "body": [
      "const VerticalCarousel = () => (",
      "  <div className=\"carousel carousel-vertical rounded-box h-96\">",
      "    <div className=\"carousel-item h-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item h-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item h-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item h-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item h-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item h-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item h-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"",
      "        alt=\"Burger\"",
      "      />",
      "    </div>",
      "  </div>",
      ");",
      "",
      "export default VerticalCarousel;"
    ],
    "description": "Vertical carousel component displaying a list of images."
  },
  "DaisyUI Full Bleed Carousel": {
    "prefix": "dai-carousel",
    "body": [
      "const CarouselCenter = () => (",
      "  <div className=\"carousel carousel-center bg-neutral rounded-box max-w-md space-x-4 p-4\">",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559703248-dcaaec9fab78.webp\"",
      "        className=\"rounded-box\"",
      "        alt=\"Image 1\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1565098772267-60af42b81ef2.webp\"",
      "        className=\"rounded-box\"",
      "        alt=\"Image 2\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1572635148818-ef6fd45eb394.webp\"",
      "        className=\"rounded-box\"",
      "        alt=\"Image 3\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1494253109108-2e30c049369b.webp\"",
      "        className=\"rounded-box\"",
      "        alt=\"Image 4\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1550258987-190a2d41a8ba.webp\"",
      "        className=\"rounded-box\"",
      "        alt=\"Image 5\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1559181567-c3190ca9959b.webp\"",
      "        className=\"rounded-box\"",
      "        alt=\"Image 6\"",
      "      />",
      "    </div>",
      "    <div className=\"carousel-item\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1601004890684-d8cbf643f5f2.webp\"",
      "        className=\"rounded-box\"",
      "        alt=\"Image 7\"",
      "      />",
      "    </div>",
      "  </div>",
      ");",
      "",
      "export default CarouselCenter;"
    ],
    "description": "A centered carousel component with rounded images and custom styling."
  },
  "DaisyUI Carousel with indicator-btn": {
    "prefix": "dai-carousel",
    "body": [
      "const CarouselWithButtons = () => (",
      "  <div className=\"carousel w-full\">",
      "    <div id=\"item1\" className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1625726411847-8cbb60cc71e6.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 1\"",
      "      />",
      "    </div>",
      "    <div id=\"item2\" className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1609621838510-5ad474b7d25d.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 2\"",
      "      />",
      "    </div>",
      "    <div id=\"item3\" className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1414694762283-acccc27bca85.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 3\"",
      "      />",
      "    </div>",
      "    <div id=\"item4\" className=\"carousel-item w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1665553365602-b2fb8e5d1707.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 4\"",
      "      />",
      "    </div>",
      "  </div>",
      "  <div className=\"flex w-full justify-center gap-2 py-2\">",
      "    <a href=\"#item1\" className=\"btn btn-xs\">1</a>",
      "    <a href=\"#item2\" className=\"btn btn-xs\">2</a>",
      "    <a href=\"#item3\" className=\"btn btn-xs\">3</a>",
      "    <a href=\"#item4\" className=\"btn btn-xs\">4</a>",
      "  </div>",
      ");",
      "",
      "export default CarouselWithButtons;"
    ],
    "description": "A carousel with image items and navigation buttons below it."
  },
  "DaisyUI Carousel with next/prev btn": {
    "prefix": "dai-carousel",
    "body": [
      "const CarouselWithNavigationButtons = () => (",
      "  <div className=\"carousel w-full\">",
      "    <div id=\"slide1\" className=\"carousel-item relative w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1625726411847-8cbb60cc71e6.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 1\"",
      "      />",
      "      <div className=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">",
      "        <a href=\"#slide4\" className=\"btn btn-circle\">❮</a>",
      "        <a href=\"#slide2\" className=\"btn btn-circle\">❯</a>",
      "      </div>",
      "    </div>",
      "    <div id=\"slide2\" className=\"carousel-item relative w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1609621838510-5ad474b7d25d.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 2\"",
      "      />",
      "      <div className=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">",
      "        <a href=\"#slide1\" className=\"btn btn-circle\">❮</a>",
      "        <a href=\"#slide3\" className=\"btn btn-circle\">❯</a>",
      "      </div>",
      "    </div>",
      "    <div id=\"slide3\" className=\"carousel-item relative w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1414694762283-acccc27bca85.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 3\"",
      "      />",
      "      <div className=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">",
      "        <a href=\"#slide2\" className=\"btn btn-circle\">❮</a>",
      "        <a href=\"#slide4\" className=\"btn btn-circle\">❯</a>",
      "      </div>",
      "    </div>",
      "    <div id=\"slide4\" className=\"carousel-item relative w-full\">",
      "      <img",
      "        src=\"https://img.daisyui.com/images/stock/photo-1665553365602-b2fb8e5d1707.webp\"",
      "        className=\"w-full\"",
      "        alt=\"Image 4\"",
      "      />",
      "      <div className=\"absolute left-5 right-5 top-1/2 flex -translate-y-1/2 transform justify-between\">",
      "        <a href=\"#slide3\" className=\"btn btn-circle\">❮</a>",
      "        <a href=\"#slide1\" className=\"btn btn-circle\">❯</a>",
      "      </div>",
      "    </div>",
      "  </div>",
      ");",
      "",
      "export default CarouselWithNavigationButtons;"
    ],
    "description": "A carousel component with images and circular navigation buttons to switch between slides."
  }
}
